[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "page_count",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column page_count using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column venue using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "notes",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column notes using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "call_number",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column call_number using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "physical_description",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column physical_description using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location_type",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location_type using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "dish_count",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column dish_count using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency_symbol",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency_symbol using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "language",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column language using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "date",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column date using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "status",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column status using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "keywords",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column keywords using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency_symbol",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency_symbol using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "language",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column language using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "date",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column date using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "call_number",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column call_number using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "status",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column status using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "notes",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column notes using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "physical_description",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column physical_description using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column venue using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "dish_count",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column dish_count using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "page_count",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column page_count using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "location_type",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column location_type using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "keywords",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column keywords using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.replace(/\\s+/,' ')"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "id",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column id using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "grel:value.replace(/[()\\[\\]{}*?'\"-]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression grel:value.replace(/[()\\[\\]{}*?'\"-]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "grel:value.replace(/[()\\[\\]{}*?'\"-]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression grel:value.replace(/[()\\[\\]{}*?'\"-]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "grel:value.replace(/[()\\[\\]{}*?'\"-]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression grel:value.replace(/[()\\[\\]{}*?'\"-]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column event using expression grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column venue using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column venue using expression grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column venue using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "physical_description",
    "expression": "grel:value.replace(/[()\\[\\]{}*?'\"-]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column physical_description using expression grel:value.replace(/[()\\[\\]{}*?'\"-]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression grel:value.replace(/[\\[\\]\\{\\}\\(\\)\\*\\?\\-\\';\\:\"]/,\"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "notes",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column notes using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "keywords",
    "expression": "grel:value",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column keywords using expression grel:value"
  },
  {
    "op": "core/column-removal",
    "columnName": "keywords",
    "description": "Remove column keywords"
  },
  {
    "op": "core/column-removal",
    "columnName": "language",
    "description": "Remove column language"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "date",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column date using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "date",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column date using expression value.toDate()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "date",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column date using expression value.toDate()"
  },
  {
    "op": "core/column-removal",
    "columnName": "location",
    "description": "Remove column location"
  },
  {
    "op": "core/column-removal",
    "columnName": "location_type",
    "description": "Remove column location_type"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "currency",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column currency using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "status",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column status using expression value.toTitlecase()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Hotel Imperial",
          "Imperial Hotel",
          "Impérial Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Imperial"
      },
      {
        "from": [
          "Hotel Marie Antoinette",
          "Marie Antoinette Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Marie Antoinette"
      },
      {
        "from": [
          "Hotel Knickerbocker",
          "Knickerbocker Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Knickerbocker"
      },
      {
        "from": [
          "Fairmont Hotel",
          "Hotel Fairmont"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Fairmont "
      },
      {
        "from": [
          "Copleyplaza Hotel",
          "Hotel Copleyplaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Copleyplaza"
      },
      {
        "from": [
          "St. Denis Hotel",
          "Hotel St. Denis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. Denis"
      },
      {
        "from": [
          "Cosmopolitan Hotel",
          "Cosmopolitan... Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Cosmopolitan"
      },
      {
        "from": [
          "Hotel Pontchartrain",
          "Pontchartrain Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pontchartrain"
      },
      {
        "from": [
          "Hotel Astor",
          "Astor Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Astor"
      },
      {
        "from": [
          "Palace Hotel",
          "Palace Hôtel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Palace"
      },
      {
        "from": [
          "Hotel Statler",
          "Statler Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Statler"
      },
      {
        "from": [
          "U.S.S. New York",
          "U.S.S. New York "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. New York "
      },
      {
        "from": [
          "Delmonicos",
          "Delmonicos."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos"
      },
      {
        "from": [
          "Lafayette Hotel",
          "Hotel Lafayette"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Lafayette"
      },
      {
        "from": [
          "The New Willard Hotel",
          "The New Willard Hotel."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Willard Hotel"
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbräu Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      },
      {
        "from": [
          "Hotel Savoy",
          "Savoy Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy"
      },
      {
        "from": [
          "Café Boulevard",
          "Cafe Boulevard"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Café Boulevard"
      }
    ],
    "description": "Mass edit cells in column name"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "name",
    "expression": "grel:value.replace(\"United States Ship Wyoming\", \"U.S.S. Wyoming\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column name using expression grel:value.replace(\"United States Ship Wyoming\", \"U.S.S. Wyoming\")"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Lunch & Dinner",
          "Lunch Dinner",
          "Dinner  Lunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch & Dinner"
      },
      {
        "from": [
          "Daily Menu, Dinner",
          "Daily Dinner Menu",
          "Daily Menu Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Dinner Menu"
      },
      {
        "from": [
          "Lunch",
          "Lunch ",
          "Lunch."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch"
      },
      {
        "from": [
          "Lunch Or Dinner",
          "Dinner Or Lunch",
          "Lunch &/or Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch & Dinner"
      },
      {
        "from": [
          "Dinner",
          "Dinner ",
          "Dinner,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Banquet And Reception",
          "Reception And Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet And Reception"
      },
      {
        "from": [
          "Table Dhote Dinner",
          "Dinner Table Dhote"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Table Dhote Dinner"
      },
      {
        "from": [
          "Afternoon Tea",
          "Afternoon Tea "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Afternoon Tea"
      },
      {
        "from": [
          "Dinner  Second Cabin",
          "Dinner Second Cabin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Second Cabin Dinner  "
      },
      {
        "from": [
          "Mittagessen/dinner",
          "Mittagessendinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Dinner,second Cabin",
          "Dinnersecond Cabin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Second Cabin Dinner  "
      },
      {
        "from": [
          "Luncheon Table Dhote",
          "Table Dhote Luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Table Dhote Luncheon"
      },
      {
        "from": [
          "Supper",
          "Supper "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Supper"
      },
      {
        "from": [
          "Breakfast And Supper",
          "Supper And Breakfast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast And Supper"
      },
      {
        "from": [
          "Fruhstuckbreakfast",
          "Fruhstuck/breakfast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast"
      },
      {
        "from": [
          "Washingtons Birthday Banquet",
          "Banquet Washingtons Birthday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Washingtons Birthday Banquet"
      },
      {
        "from": [
          "Dinner A La Carte",
          "A La Carte Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A La Carte Dinner"
      },
      {
        "from": [
          "Breakfast  Held By Nordeutscher Lloyd Bremen At On Board The Ss George Washington",
          "Breakfast Held By Nordeutscher Lloyd Bremen At On Board The Ss George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast  Held By Nordeutscher Lloyd Bremen At On Board The Ss George Washington"
      },
      {
        "from": [
          "Breakfast",
          "Breakfast "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast"
      },
      {
        "from": [
          "Luncheon A La Carte",
          "Luncheon, A La Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A La Carte Luncheon"
      },
      {
        "from": [
          "Lincolns Birthday Dinner",
          "Dinner, Lincolns Birthday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lincolns Birthday Dinner"
      },
      {
        "from": [
          "Fifth Annual Dinner",
          "Dinner, Fifth Annual"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Annual Dinner"
      },
      {
        "from": [
          "Fruhstuck/lunch",
          "Fruhstucklunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch"
      },
      {
        "from": [
          "Daily Menu, Breakfast",
          "Daily Breakfast Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Breakfast Menu"
      },
      {
        "from": [
          "Daily Menu, Luncheon",
          "Daily Luncheon Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Luncheon Menu"
      },
      {
        "from": [
          "Inspection Trip, Breakfast",
          "Inspection Trip  Breakfast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast Inspection Trip"
      },
      {
        "from": [
          "Mittagessen  Dinner",
          "Mittagessen Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Middag/dinner",
          "Middagdinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Inspection Trip  Luncheon",
          "Inspection Trip, Luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon Inspection Trip"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Daily Lunch Menu",
          "Daily Menu, Lunch",
          "Daily Menu Lunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Lunch Menu"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Dinner/diner",
          "Diner/dinner",
          "Dinner, Diner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Lunch & Dinner",
          "Lunchdinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch & Dinner"
      },
      {
        "from": [
          "Wedding Dinner",
          "Weddingdinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wedding Dinner"
      },
      {
        "from": [
          "Breakfast  Second Cabin",
          "Breakfastsecond Cabin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Second Cabin Breakfast"
      },
      {
        "from": [
          "Breakfast Lunch Dinner",
          "Breakfast,lunch & Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast,Lunch & Dinner"
      },
      {
        "from": [
          "Daily Menu, Supper",
          "Daily Menu,supper"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Supper Menu"
      },
      {
        "from": [
          "Dinner",
          "Dinnner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Dejeuner Fourchette/luncheon",
          "Dejeuner Fourchette/ Luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon"
      },
      {
        "from": [
          "Dinner Dance",
          "Dinnerdance"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Dance"
      },
      {
        "from": [
          "Fourth Of July Dinner",
          "Fourth Ofjuly Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fourth Of July Dinner"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Washingtons Birthday Dinner",
          "Washingtons Birthday",
          "Washingtons Birthday Banquet",
          "Washingtons Birthday Repast",
          "Washingt0ns Birthday",
          "Washingtons Birthday Dinner Menu",
          "Washingtons Birthday Eve",
          "Washingtons Buffet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Washingtons Birthday Dinner"
      },
      {
        "from": [
          "Sixteenth Annual Dinner",
          "Sixteenth Annual Ball",
          "Sixteenth Annual Banquet",
          "Sixteenth Annual Conventionluncheon",
          "Sixteenth Annual Dinner Of New York Assn Of Alumni"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sixteenth Annual Dinner"
      },
      {
        "from": [
          "Dinner",
          "Diner",
          "Dnner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Mittagessen",
          "Mitagessen",
          "Mittagesen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "St. Valentines Day Dinner",
          "St. Valentines Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Valentines Day Dinner"
      },
      {
        "from": [
          "Breakfast And Supper",
          "Breakfast And Supper Bill Of Fare"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast And Supper"
      },
      {
        "from": [
          "Carte Du Jourdiner",
          "Carte Du Jour/dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Carte Du Jourdiner"
      },
      {
        "from": [
          "Breakfast & Supper Menu",
          "Breakfast/supper/lunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast And Supper"
      },
      {
        "from": [
          "Saint Nicholas Day",
          "Saint Nicholas Day Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saint Nicholas Day Dinner"
      },
      {
        "from": [
          "Fourth Of July Dinner",
          "Fourth Of July Dinner Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fourth Of July Dinner"
      },
      {
        "from": [
          "Luncheon/dejeuner Fourchette",
          "Luncheon, Dejeuner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon"
      },
      {
        "from": [
          "Supper",
          "Souper"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Supper"
      },
      {
        "from": [
          "Inspection Trip, Dinner",
          "Inspection Trip  Diner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Inspection Trip"
      },
      {
        "from": [
          "Lunch A La Carte",
          "Lunch ˆ La Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A La Carte Lunch"
      },
      {
        "from": [
          "Dinne",
          "Dinnwe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Easter Sunday Lunch",
          "Easter Sunday Luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Easter Sunday Lunch"
      },
      {
        "from": [
          "Banquet And Reception",
          "Banquet And Reception Commemorating 50 Years Since The Admission Of Honorable James Tyndale Mitchell,ll.D. Chief Justice Of The Supreme Court Of Pa To The Bar Of Philadelphia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet And Reception"
      },
      {
        "from": [
          "Luncheon",
          "Lincheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon"
      },
      {
        "from": [
          "Dinner ˆ La Carte",
          "Dinnera La Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A La Carte Dinner"
      },
      {
        "from": [
          "Table Dhote Lunch",
          "Table Dhote Luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Table Dhote Lunch"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Lunch And Dinner",
          "Lumch And Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch & Dinner"
      },
      {
        "from": [
          "Luncheon Menu",
          "Lunch Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon"
      },
      {
        "from": [
          "Dinner",
          "Dejeuner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Thanksgiving Dinner",
          "Thnaksgiving Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Thanksgiving Dinner"
      },
      {
        "from": [
          "Christmas Dinner",
          "Christmas Dinnr"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Christmas Dinner"
      },
      {
        "from": [
          "Supper Menu",
          "Supper Men"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Supper"
      },
      {
        "from": [
          "Daily Luncheon Menu",
          "Daily Lunch Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Luncheon"
      },
      {
        "from": [
          "Breakfast  A La Carte",
          "Breakfast ˆ La Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A La Carte Breakfast"
      },
      {
        "from": [
          "Carte Du Jourdiner",
          "Carte Du Jourdejeuner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Carte Du Jourdiner"
      },
      {
        "from": [
          "Supper At A Ball",
          "Supper At The Ball"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Supper At The Ball"
      },
      {
        "from": [
          "Banquet",
          "Banchetto"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "from": [
          "11th Annual Dinner",
          "15th Annual Dinner",
          "4th Annual Dinner",
          "14th Annual Dinner",
          "18th Annual Dinner",
          "20th Annual Dinner",
          "12th Annual Dinner",
          "13th Annual Dinner",
          "16th Annual Dinner",
          "25th Annual Dinner",
          "28th Annual Dinner",
          "30th Annual Dinner",
          "34th Annual Dinner",
          "37th Annual Dinner",
          "57th Annual Dinner",
          "5th Annual Dinner",
          "7th Annual Dinner",
          "8th Annual Dinner",
          "9th Annual Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "24th Annual Banquet",
          "4th Annual Banquet",
          "8th Annual Banquet",
          "9th Annual Banquet",
          "11th Annual Banquet",
          "13th Annual Banquet",
          "15th Annual Banquet",
          "16th Annual Banquet",
          "20th Annual Banquet",
          "40th Annual Banquet",
          "6th Annual Banquet",
          "10th Annual Banquet",
          "18th Annual Banquet",
          "29th Annual Banquet",
          "34th Annual Banquet",
          "38th Annual Banquet",
          "50th Annual Banquet",
          "7th Annual Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "25th Anniversary",
          "109th Anniversary",
          "10th Anniversary",
          "112th Anniversary",
          "115th Anniversary",
          "116th Anniversary",
          "138th Anniversary",
          "139th Anniversary",
          "140th Anniversary",
          "259th Anniversary",
          "260th Anniversary",
          "269th Anniversary",
          "40th Anniversary",
          "69th Anniversary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Dinner"
      },
      {
        "from": [
          "20th Anniversary Dinner",
          "108th Anniversary Dinner",
          "10th Anniversary Dinner",
          "120th Anniversary Dinner",
          "126th Anniversary Dinner",
          "128th Anniversary Dinner",
          "25th Anniversary Dinner",
          "35th Anniversary Dinner",
          "50th Anniversary Dinner",
          "75th Anniversary Dinner",
          "79th Anniversary Dinner",
          "80th Anniversary Dinner",
          "98th Anniversary Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Dinner"
      },
      {
        "from": [
          "126th Annual Meeting",
          "127th Annual Meeting",
          "128th Annual Meeting",
          "19th Annual Meeting",
          "20th Annual Meeting",
          "29th Annual Meeting",
          "30th Annual Meeting"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Meeting"
      },
      {
        "from": [
          "14nth Annual Dinner",
          "115nth Annual Dinner",
          "15nth Annual Dinner",
          "17nth Annual Dinner",
          "27nth Annual Dinner",
          "9nth Annual Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "23rd Annual Dinner",
          "63rd Annual Dinner",
          "33rd Annual Dinner",
          "3rd Annual Dinner",
          "53rd Annual Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "165th Regular Dinner",
          "177th Regular Dinner",
          "184th Regular Dinner",
          "189th Regular Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Regular Dinner"
      },
      {
        "from": [
          "1st Annual Dinner",
          "21st Annual Dinner",
          "31st Annual Dinner",
          "41st Annual Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "Annual Banquet",
          "11 Annual Banquet",
          "116 Annual Banquet",
          "120 Annual Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "124th Annual Meeting Luncheon",
          "137th Annual Meeting, Luncheon",
          "139th Annual Meeting Luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Meeting Luncheon"
      },
      {
        "from": [
          "20th Meeting",
          "297th Meeting",
          "59th Meeting"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Meeting"
      },
      {
        "from": [
          "25th Anniversary Banquet",
          "18th Anniversary Banquet",
          "26th Anniversary Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Banquet"
      },
      {
        "from": [
          "3rd Annual Banquet",
          "123rd Annual Banquet",
          "33rd Annual Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Dinner",
          "100th Dinner",
          "38th Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "11nth Annual Banquet",
          "19nth Annual Banquet",
          "7nth Annual Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "2nd Annual Banquet",
          "22nd Annual Banquet",
          "32nd Annual Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "2nd Annual Dinner",
          "32nd Annual Dinner",
          "22nd Annual Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "Annual Dinner",
          "12 Annual Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "Anniversary Dinner",
          "28 Anniversary Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Dinner"
      },
      {
        "from": [
          "Day Dinner",
          "Days Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Eighth Annual Dinner",
          "Eight Annual Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "event",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Dinner In Honor Of Above",
          "Dinner In Honor O General Nelson A. Miles",
          "Dinner In Honor Of Civil And Military Officials Of The First Three Ranks",
          "Dinner In Honor Of Cornelius Fergueson",
          "Dinner In Honor Of Don Ramon Pina Y Millet",
          "Dinner In Honor Of Dr.D.Gabriel Casuso",
          "Dinner In Honor Of Duke Abruzzi",
          "Dinner In Honor Of F. Hopkinson Smith",
          "Dinner In Honor Of Foreign Officers",
          "Dinner In Honor Of Frank E. Beal",
          "Dinner In Honor Of Frank E. Roundy",
          "Dinner In Honor Of Gen. H.G. Gibson",
          "Dinner In Honor Of George Mcgown Of Palmyra Ny",
          "Dinner In Honor Of H.I.M.Mutsuhito 47th Birthday",
          "Dinner In Honor Of Haakon Vii When He Received The Order Of The Garter Of Windsor And England",
          "Dinner In Honor Of Hakan Johansen",
          "Dinner In Honor Of Hon. J.I.Clarke Hare",
          "Dinner In Honor Of Hon. James T. Stranhan",
          "Dinner In Honor Of James J. Hill, Pres. Of Great Northern Rr",
          "Dinner In Honor Of John A. Mccall",
          "Dinner In Honor Of Lyman F. Gage",
          "Dinner In Honor Of Marcus A. Hanna",
          "Dinner In Honor Of Members Of Supreme Council 33, Ancient Accepted Scottish Rite & Accompanying Ladies",
          "Dinner In Honor Of Most Worshipful Josiah W. Ewan, Grand Master Of Masons Of State Of New Jersey",
          "Dinner In Honor Of Mr. Frank Pollock",
          "Dinner In Honor Of Mr. Theodore Roosevelt",
          "Dinner In Honor Of Pres.Mckinley & Members Of The Cabinet",
          "Dinner In Honor Of Professor Albert A. Michelson",
          "Dinner In Honor Of Raphael Weill",
          "Dinner In Honor Of Rear Admiral William T. Sampson, Us Navy",
          "Dinner In Honor Of S.A.R.Monseigneur Le Comte Trapani",
          "Dinner In Honor Of S.S. Packards 70th Bithday",
          "Dinner In Honor Of Sir Chentung Liang Cheng, Envoy To The United States",
          "Dinner In Honor Of Supreme Court Justice Charles Grant Garrison",
          "Dinner In Honor Of The American Tariff Commission",
          "Dinner In Honor Of The Birthday Of King Edward Viii",
          "Dinner In Honor Of The Governor, His Cabinet, Members Of The Legislature And The Florida Press Association",
          "Dinner In Honor Of The Hotel Mens Benefit Association",
          "Dinner In Honor Of The Lord Bishop Of London",
          "Dinner In Honor Of The Ships Company Of H.M.S. Good Hope",
          "Dinner In Honor Of The Ships Company Of U.S.S. Louisiana",
          "Dinner In Honor Of The Vice President Of The United States And The Visiting Congressional Committee",
          "Dinner In Honor Of Wu Tingfan, His Imperial Chinese Majestys Envoy Extraordinary And Minister Plenipotentiary To The United States, Spain And Peru",
          "Dinner In Honour Of Sir Thomas Lipton",
          "Dinner On Honor Of The Participants In The Tour Of The Evening And Sunday Stars"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Complimentary Dinner",
          "Complimentary Luncheon",
          "Complimentary Banquet",
          "Complimentary Banquet Given By The City Government Of Boston To The Boards Of Trade Of The Western Cities",
          "Complimentary Banquet Tendered To The Ohio Bankers Association",
          "Complimentary Banquet To Boise Council No. 313",
          "Complimentary Banquet To Hon. Robert C. Morris,pres.",
          "Complimentary Breakfast",
          "Complimentary Dinner And Presentation To Matthew A. Henson",
          "Complimentary Dinner Given To Chicago Representatives",
          "Complimentary Dinner Given To The Harvard Crew",
          "Complimentary Dinner In Honor Of A Number Of Retiring Principals",
          "Complimentary Dinner In Honor Of Gov. F. W. Rollins Of New Hampshire",
          "Complimentary Dinner In Honor Of His Appoaching Marriage",
          "Complimentary Dinner Tendered To Rev. Charles H. Parkhurst, D.D.",
          "Complimentary Dinner To Anthony Fiala Of Troop C, U.S.V.",
          "Complimentary Dinner To Curtis Guild, Jr.",
          "Complimentary Dinner To Directors Of The First Fall Festival Of Cincinnati",
          "Complimentary Dinner To Gen. Felix Agnus Of Baltimore",
          "Complimentary Dinner To Hon. Geo. W. Gardner,commodore Of Cleveland Yacht Club,at The Expiration Of His Second Term As Mayor Of The City Of Cleveland, Ohio",
          "Complimentary Dinner To Hon. W.J. Bryan",
          "Complimentary Dinner To Hon. William E.S. Fales, Vice Consul To Amoy On The Occasion Of His Return From China",
          "Complimentary Dinner To Mr. Edward W. Scott, President Prior To His Departure For Europe",
          "Complimentary Dinner To Mr. James F. Graham",
          "Complimentary Dinner To Mr. Robert Gordon",
          "Complimentary Dinner To Sir F. Carruthers Gould",
          "Complimentary Dinner To The Class Of 80 Twentieth Anniversary Of The Graduation Class Of 80, Union, June 27th 1900",
          "Complimentary Dinner To The Fellow Passengers Of The Normannia To Meet Mr. Robert M. Thompson",
          "Complimentary Dinner To The Officers And Cadets Of West Point Military Academy",
          "Complimentary Dinner To The Officers Of General Society",
          "Complimentary Dinner To The Press Of Toledo",
          "Complimentary Dinner To The Representatives Of The Press Of New York",
          "Complimentary Dinner To Warrant Officers Of H.M. Briish North American Squadron",
          "Complimentary Reception And Banquet Tendered To Nathaniel Robinson,m.D.",
          "Complimentary Supper To Class Of 1900",
          "Complimentary Supper To The Ladies Of The Hotel Mens Benefit Association",
          "Complimentary To B.W. Rowell, Illustrious Imperial Recorder Of Imperial Council Of North America",
          "Complimentary To Mr. W.H.Metson,prior To His Departure For Cape Nome,alaska",
          "Complimentery Banquet To Mr. N.C. Goodwin",
          "Complmentary Banquet To Edward M. Morgan,pres."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Complimentary Dinner"
      },
      {
        "from": [
          "Banquet In Honor Of The Third Annual Convention Of Above",
          "Banquet In Honor Of Above And Othr Members Of The Board Of Health",
          "Banquet In Honor Of Charles W. Fairbanks, Vice President Of U.S.",
          "Banquet In Honor Of Congressmen From Greater New York",
          "Banquet In Honor Of Count Ferdinand De Lessups",
          "Banquet In Honor Of Ferdinand W. Peck",
          "Banquet In Honor Of Grand Lodge Officers",
          "Banquet In Honor Of Hoo Hoo",
          "Banquet In Honor Of Judge Peter S. Grosscup & Judge Christian C. Kohlsaat",
          "Banquet In Honor Of K. Ishii",
          "Banquet In Honor Of Kaiser Wilhelm Ii",
          "Banquet In Honor Of M. J.F. Perrault",
          "Banquet In Honor Of Mr. Henry Reynolds Hatch",
          "Banquet In Honor Of Rear Admiral Winfield Scott Schlet And Commander Washburn Maynard",
          "Banquet In Honor Of S.E. Il Prof. Luigi Rava. Minister Of Instruction",
          "Banquet In Honor Of The Chicago Commercial Club And It Guests From The Boston, Cincinnati & St. Louis Commercial Clubs",
          "Banquet In Honor Of The National Association Of Railroad Commissioners Of The United States",
          "Banquet In Honor Of The Visit Of S.M.S. Moltke To New Orleans",
          "Banquet In Honor Of Visiting American Brethren",
          "Banquet In Honor Of Visitors Of S.M.S Vineta In New Orleans",
          "Banquet In Honor Of William L.Strong,mayorelect Of Ny City",
          "Banquete Em Honra Da Armada Americana Do Pacifico",
          "Banquete En Honor Del General Domingo Mendez Capote, Vicepresidente Electo De La Republica De Cuba"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet In Honor"
      },
      {
        "from": [
          "Dinner Give Onn Eve Of The Arts Guild Cinderella Ball",
          "Dinner Given At The Seventeenth Annual Convention Of The Ohio Bankers Association",
          "Dinner Given By Above",
          "Dinner Given By Alexander Agassiz, President Of The National Academy Of Sciences",
          "Dinner Given By George C. Boldt To His Employees",
          "Dinner Given By Mr. Rodman Wanamaker On The Occasion Of New Home",
          "Dinner Given In Honor Of Mr. Lucius E. Johnson",
          "Dinner Given In Honour Of Judge Henry Steinert",
          "Dinner Given To Commodore Harry B. Gilpin",
          "Dinner Given To Dr. M.F. Foley",
          "Dinner Given To Friends",
          "Dinner Given To H.H. Koop, Jr. In Honor Of His 33rd Birthday",
          "Dinner Given To His Ushers",
          "Dinner Given To Hon. Henry White And Others",
          "Dinner Given To Men Of Ny Central & Hudson Rr",
          "Dinner Given To Mr. F.W. Mann, Lieut. A.I.R., Previous To His Departure For South Africa",
          "Dinner Given To Mr. John L. Hill",
          "Dinner Given To Mr. W.W. Cotton",
          "Dinner Given To Municipal Officers & Heads Of Departments Of The City Of New York",
          "Dinner Given To The Officers And Representatives Of The Ames Iron Works",
          "Dinner Given To Their Salesmen",
          "Dinner Given To Themselves"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Banquet And Reception",
          "Banquet And Ball",
          "Banquet And Inaugural Ball For President Benjamin Harrison And Vicepresident Levi Morton",
          "Banquet And Jubilee For Hon.Neal Dow",
          "Banquet And Meeting",
          "Banquet On 34th Anniversary Of Appomattex Day The First Day Of Peace",
          "Banquet Tendered The Members Of The General Assembly Of Kentucky",
          "Banquet Tendered To Dr. William Jarvie",
          "Banquet Tendered To Hon. Philip Bloch, In Celebration Of His Election As Secretary Of The Board Of Police Magistrates",
          "Banquet Tendered To Hon. Samuel Mc Millan, Congressman Elect, 21st Congressional District, New York",
          "Banquet Tendered To Mr. M.M. Finley",
          "Banquet Tendered To National League Of Commission Merchants Of The U.S.",
          "Banquet Tendered To President Arthur T. Hadley",
          "Banquet Tendered To The National Officers And Delegates Attending The Annual Congess Sons Of The American Revolution",
          "Banquet Tendered To The Officers, Delegates And Alternates Of The American Bowling Congress And Visiting Members Of The Press",
          "Banquet Tendered To The Staffs Of Galveston & Houston, Texas",
          "Banquet Tendered To The Visiting Bankers",
          "Banquet To International Railway Congress",
          "Banquet To International Stewards Association Seventh Annual Convention",
          "Banquet To National Association Of Credit Men",
          "Banquet To National Brick Manufacturers, Merican Ceramic Society, National Paving Brick Manufacturers Assn National Brick Machinery Amnufacturers Assn",
          "Banquet To Under Sheriff Henry P. Mulvany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet And Reception"
      },
      {
        "from": [
          "Breakfast",
          "Breakfast Menu",
          "Breakfast And Supper",
          "Breakfast Inspection Trip",
          "Breakfast  Held By Nordeutscher Lloyd Bremen At On Board The Ss George Washington",
          "Breakfast On Funeral Train Of President Mckinley",
          "Breakfast, Lunch And Supper",
          "Breakfast,Lunch & Dinner",
          "Breakfast  Pullman Dining Car Service",
          "Breakfast  Tour Of The Pres. To Chicago & The Northwest",
          "Breakfast & Dinner Menu",
          "Breakfast & Luncheon",
          "Breakfast Admiral John Grimes Walker And The White Squadron",
          "Breakfast By Usms St Louis",
          "Breakfast During Trip To Germanic Museum,cambridge,mass",
          "Breakfast For Guests Of Minnesota Iron Company",
          "Breakfast In Honor Of Tai Hungtzu,vice Pres.Of The Imperial Chinese Board Of Revenue & Tuan Fang,viceroy Of Minche",
          "Breakfast To Gov.Of The Missippi Valley",
          "Breakfast, Lunch And Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast"
      },
      {
        "from": [
          "Dinner To Board Of Aldermen",
          "Dinner To Brig.Gen.J.Franklin Bell Usa",
          "Dinner To Brown University Debating Teams",
          "Dinner To Frank Hurd Robinson,grand Master",
          "Dinner To Friends",
          "Dinner To J.F.Burke And H.M.Gerrans",
          "Dinner To Percy Sanderson, H.B.M.C.G.",
          "Dinner To Pres. Ulises Heureauz",
          "Dinner To President Fallieres",
          "Dinner To President Theodore Roosevelt",
          "Dinner To Prince And Princess Of Wales",
          "Dinner To Prince Charles & Princess Maud Of Denmark",
          "Dinner To Prize Winners"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Dinner At The 97th Meeting",
          "Dinner To Admiral Prince Louis Of Battenberg",
          "Dinner To Daniel V. Masterson",
          "Dinner To The American Gynecological Society",
          "Dinner To The English Minister To Cuba, Mr. A.C. Grantduff",
          "Dinner To The Members Of The Republican Editorial Association Of The State Of New York",
          "Dinner To The Membership Of The New York Library Association",
          "Dinner To The Most Hon. Marquess Of Lansdowne, K.G.,p.G., G.G.S.I., G.G.I.E., G.G.M.G.",
          "Dinner To The National Academy Of Sciences",
          "Dinner To The New York State Stenographers Association",
          "Dinner To The Noncommissioned Officers In Recognition Of Their Work June 9th16th 1900",
          "Dinner To Timothy P. Sullivan"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Dinner For 50th Aniversary",
          "Dinner For Dr. G.C.Weber And Friends",
          "Dinner For Rt. Rev. Bishop James Augustin Mc Paul",
          "Dinner For The Admiral Of The Navy",
          "Dinner For The Congress Of The White Ribbon",
          "Dinner For The Dedication Of The Statue Of Ferdinand De Jessips,30 Years After The Opening Of The Suez Canal",
          "Dinner For The Democratic Members Elect From New York To The 56th Congress",
          "Dinner For The Hon. S. W. Dorsey",
          "Dinner For The Inauguration Of Battesimo Of Bandiere",
          "Dinner For The Opening Of Simpson Timber Dry Dock",
          "Dinner Party"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Dinner By Or For Henry Hilton",
          "Dinner For Appleton And Slaven",
          "Dinner For Bartolomeo Bertini And Margherita Andreini Bertini",
          "Dinner For Bond Committee And Officers Of The Colonial Club",
          "Dinner For Boston Commandery, Knights Templar, And Ladies",
          "Dinner For Forefathers Day",
          "Dinner For Frank C. Bone",
          "Dinner For Officers Of The Review Of July 14",
          "Dinner For Visiting Members Of The Governing Board Of The International League Of Press Clubs",
          "Dinner For W.Chamberlain And Sir Charles Tupper Of The Fisheries Commission",
          "Dinner, Farewell To Hon.Henry White, U.S.Minister To Italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Dinner For 150 Guests",
          "Dinner For 50 Guests",
          "Dinner For Guests Of Minnesota Iron Company",
          "Dinner For His Excellency Governor Sir Ambrose Shea, Kcmg",
          "Dinner For His Friends,members Of The New York Committee Of The Southeastern Railroad Co. Of Yucatan",
          "Dinner For Hon John A Kasson",
          "Dinner For Hon. Anthony Howells",
          "Dinner For Hon. John Reilly",
          "Dinner For Hon. Warner Miller Pres. Of Nicaragua Canal Construction Co.",
          "Dinner For King And Queen Of Portugal",
          "Dinner,breakfast And A La Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Dinner To Gen. Horace Porter, Ambassador To France",
          "Dinner To Hon Frederick Carroll Brewster",
          "Dinner To Hon. Chas. F. Fairchild,secretary Of The Treasury",
          "Dinner To Hon. Henry W. Grady And Party",
          "Dinner To Hon. William Rumsey",
          "Dinner To Hon.Ethan Allen Hitchcock,secretary Of The Interior",
          "Dinner To Hon.Isaac H. Terrell",
          "Dinner To Hon.James G. Blaine",
          "Dinner To Hon.John J.Jackson,judge Ofthe District Court Of The United States For The District Of West Virginia",
          "Dinner To Honorable William Potter, United States Minister To Italy",
          "Dinner To Honourable John B.Mcpherson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Dinner Tendered By Members To The Senior Eight In Honor Of Their Victory In The Senior Eightoared Shell Race At The Peoples Regatta Held On The Schuylkill River, Philadelphia On July 4, 1906",
          "Dinner Tendered To Brooklyn Lodge No. 22",
          "Dinner Tendered To Captain John Coooney",
          "Dinner Tendered To Delegates To The Twentieth Annual Meeting Of The Nation Civil Service Reform League",
          "Dinner Tendered To His Excellency",
          "Dinner Tendered To Hon. John Barrett",
          "Dinner Tendered To Judge Henry A. Melvin",
          "Dinner Tendered To Majgen Francis Vinton Greene",
          "Dinner Tendered To R.W. Walter F. Sykes, D.Dgm",
          "Dinner Tendered To Sergt. Howard C. Woodbury",
          "Dinner Tendered To The Captain And Officers Of The U.S.S.Louisiana"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Thanksgiving Dinner",
          "Thanksgiving Day Dinner",
          "Thanksgiving Day Breakfast",
          "Thanksgiving Day Breakfast, Dinner & Supper",
          "Thanksgiving Day Luncheon",
          "Thanksgiving Day Menu",
          "Thanksgiving Day Menu & Program",
          "Thanksgiving Dinner To Beta Theta Pi Fraternity Of Dickinson College, Carlisle Penna",
          "Thanksgiving Lunch",
          "Thanksgiving Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Thanksgiving Dinner"
      },
      {
        "from": [
          "Table Dhote Dinner",
          "Table Dhote",
          "Table Dhote Lunch",
          "Table De Hote Dinner/fish Dinner",
          "Table Dhote Dinner Menu",
          "Table Dhote De Bon Vivant",
          "Table Dhote Dinner  From 12.30 To 2.30 & 5.30 To 8 P.M.",
          "Table Dhote Meal",
          "Table Dhote Menu",
          "Table Dhoter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Table Dhote Dinner"
      },
      {
        "from": [
          "Banquet For F. Barbedienne",
          "Banquet For John Marshall Day",
          "Banquet For John Rooney And Friends",
          "Banquet For L. Pasteur",
          "Banquet For Lieut.Col. Francis G. Ward Of 202 Usv",
          "Banquet For R.M.Littler",
          "Banquet For Tercentenary Celebratin",
          "Banquet For The Opening Of The New Townhall",
          "Banquet For The President Of The Union",
          "Banquet To Porter King Mayor Of Atlanta And The Honorary Atlanta Escort Of The Liberty Bell"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet"
      },
      {
        "from": [
          "Annual Dinner",
          "Annual Dinner In Honor Of Bithday Of Benjamin Franklin",
          "Annual Dinner In Honor Of Mr. Justice David J. Brewer Of The Supreme Court Of The United States",
          "Annual Dinner Of Association Of Alumni",
          "Annual Dinner Of The 3rd Battalion",
          "Annual Dinner Of The Altoona Staff",
          "Annual Dinner Of The New York Alumni",
          "Annual Dinner Of The New York University Alumni Association",
          "Annual Dinner Of The Section On Nervous And Mental Diseases",
          "Annual Dinner To Employees"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "Farewell Dinner",
          "Farewell Dinner For The Japanese Minister,w.Kuki",
          "Farewell Dinner Given By Mr. Thomas Hastings Before His Marriage To Miss Helen Benedict",
          "Farewell Dinner To Captain G.J. Johnston",
          "Farewell Dinner To General Powell Clayton, Ambassador To Mexico",
          "Farewell Dinner To Julian D. Fairchild",
          "Farewell Dinner To Maestro Giacomo Puccini On The Occasion Of His Departure To Europe",
          "Farewell Dinner To Mr. Henry George On The Occasion Of His Departure For Australia",
          "Farewell Dinner To Mr. William Clark",
          "Farewell Dinner To The Retiring Head Master And Members Of The Faculty Of St. Pauls School"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Farewell Dinner"
      },
      {
        "from": [
          "Annual Banquet",
          "Annual Banquet And Reception",
          "Annual Banquet Celebrating The Battles Of Lexington And Concord",
          "Annual Banquet Given On The Fiftieth Anniversary Of Founding",
          "Annual Banquet In Commemoration Of The 98th Anniversary Of The Birth Of Abraham Lincoln",
          "Annual Banquet Of The Commandery",
          "Annual Banquet Tendered To Their Representatives",
          "Annual Banquet To Graduates Of Class Of 1892",
          "Annual Banquet To The Managers"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Dinner For John Marshall Day",
          "Dinner For M. Ferdinand De Lesseps And Capt.Nathan Appleton",
          "Dinner For M.W. Wm. Sherer, Grand Master Of Masons Of Nys",
          "Dinner For Maharaja Scindiya",
          "Dinner For Membres Etrangers Du Congres Des Medecins A Bergen",
          "Dinner For Monsieur Jules Cambon, Ambassadeur De La Republic Francaise Aux Etatsunis",
          "Dinner From 6 To 8",
          "Dinner O Prince And Princess Of Wales"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Dinner To The Agents Of The Frank Jones Brewing Co.",
          "Dinner To The Gridiron Club",
          "Dinner To The Holland Society Of New York On The Occasion Of The Societys Visit To Kingston, Ny",
          "Dinner To The Hon. Edwin S. Stuart",
          "Dinner To The Honorable George Von L. Meyer, Postmaster General Of The United States",
          "Dinner To The Honorable Joseph A. Goulden In Appreciation Of His Long, Faithful And Efficient Service As A School Official Of The Bronx",
          "Dinner To The Kindergarten Club",
          "Dinner To The Queen Regent Of Spain,marie Christine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Banquet In Celebration Of 100th Anniversary Of Founding",
          "Banquet In Celebration Of Above",
          "Banquet In Celebration Of St. Patricks Day",
          "Banquet In Celebration Of Washingtons First Inauguration",
          "Banquet In Commemoration Of The 200th Anniversary Of The Birth Of Dr. Benjamin Franklin",
          "Banquet In Commemoration Of Washingtons Birthday",
          "Banquet In Commemoraton Of Washingtons Inauguration",
          "Banquet On Completion Of Northern Pacific Railroad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet"
      },
      {
        "from": [
          "Launching Of Above",
          "Launching Of Ferryboat Richmond",
          "Launching Of The Saturday Night",
          "Luncheon Given Aboard In Veracruz Harbor In Honor Of Visiting Delegates To The Convention Of The American Public Health Association In Mexico City",
          "Luncheon Given By The Irish Fellowship Club To William Howard Taft",
          "Luncheon Given In Honour Of The President Of The United States",
          "Luncheon Given To Hon. Charles Evans Hughes, Governor Of State Of New York, And Robert B. Brown, Commanderinchief Of G.A.R.",
          "Luncheon Given To Their American Colleagues"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Launching Event"
      },
      {
        "from": [
          "Dinner Ito Governor Thomas M. Campbell",
          "Dinner To Gov. David B. Hill",
          "Dinner To Gov.Myron T.Herrick Of Ohio & Gov.B.B.Brook Of Wyoming",
          "Dinner To Governor Charles E. Magoon",
          "Dinner To Governor Gouls, Lt. Governor Draper, And The Governors Council",
          "Dinner To Governor Hastings",
          "Dinner To Governorelect Edwin S. Stuart",
          "Dinner To Govrrnor Edward Casper Stokes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Reception & Dinner",
          "Reception & Dinner To Mr. William J. Bryan",
          "Reception To Miss Cossio Y. Cisneros On The Occasion Of Her Restoration To Freedom",
          "Reception To President Of Us And Govs. Of States And Terr.",
          "Reception To Sir Edwin B.Anderson,grand Captain General",
          "Reception To Sir James S.Manning,grand Swordbearer,grand Commandern Of The State Of Ny",
          "Reception To The Right Worthy Grand Lodges,lunch And Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reception & Dinner"
      },
      {
        "from": [
          "Annual Meeting",
          "Annual Meeting Luncheon",
          "Annual Meeting & Dinner",
          "Annual Meeting And Banquet",
          "Annual Meeting And Dinner",
          "Annual Meeting Lunch",
          "Annual Meeting On The 169th Anniversary Of The Birth Of George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Meeting"
      },
      {
        "from": [
          "Dinner To Diplomatic Corps",
          "Dinner To The Board Of Officers Of The Catholic Club Of The City Of New York",
          "Dinner To The Franklin Dinner Committee",
          "Dinner To The Pennsylvania Delegation In Congress",
          "Dinner To The President And Board Of Directors Of The Pan American Exposition",
          "Dinner To The President Of The Us & The Inland Waterways Commission",
          "Dinner To The Press At The Opening Of New Club House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Dinner To American Press Humorists",
          "Dinner To Mr. Albert Foster On His Return From Europe",
          "Dinner To Mr. B.F.Martin",
          "Dinner To Mr. Frank Gannon",
          "Dinner To Mr. Joseph B.Witman",
          "Dinner To Mr. R. R. Bringhurst",
          "Dinner To Mr. William T. Evans, By Some Of His Friends To Commemorate His Gift Of American Paintings To The Nation"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Dinner  Tour Of The Pres. To Chicago & The Northwest",
          "Dinner To H.R.H. Prince Louis Of Battenberg",
          "Dinner To Republican Speakers",
          "Dinner To Robert C. Ogden Given By Those Who Worked Under His Leadership",
          "Dinner To Robert T. Lincoln",
          "Dinner To Robert Townsend, Assistant District Attorney, New York County",
          "Dinner Trip Of President Mc Kinley To Paterson For Funeral Of Vice President Hobart"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Lunch/mittagskarte",
          "Luncheon To Gentlemen Who Accompanied Him On The First Train Through The Belmont Tunnel Under The East River On Opening Day Of Irt",
          "Luncheon To George W. Childs",
          "Luncheon To Governor Bushnell And Staff And Ohio Commissioners",
          "Luncheon To Hon.William Jennings Bryan",
          "Luncheon To Hotel Mens Mutual Benefit Association",
          "Luncheon To Hotel Mens Mutual Benefit Association,ladies"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch"
      },
      {
        "from": [
          "Second Annual Dinner",
          "Second Annual Banquet",
          "Second Annual Breakfast",
          "Second Annual Convention",
          "Second Annual Dance",
          "Second Annual Reunion",
          "Second Annual Yale Dinner Complimentary To President Dwight"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "Testimonial Dinner",
          "Testimonial & Reception In Honor Of 25th Anniversary Of George F. Lyon In Journalism",
          "Testimonial Banquet",
          "Testimonial Banquet To Henty Starr Richardson",
          "Testimonial Banquet To Hon. Charles Welde",
          "Testimonial Dinner To Dr. Nicholas Senn, Master Surgeon",
          "Testimonial To M.E. Frederick E. Barnes Past Grand High Priest"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Testimonial Dinner"
      },
      {
        "from": [
          "Banquet To The Foreign Missionary Boards Of Us & Canada",
          "Banquet To The Officers Of The Cruiser Baltimore",
          "Banquet To The Phoenix & Maricopa County Board Of Trade",
          "Banquet To The Visiting Members Of The National Academy Of Sciences",
          "Banquet To The Visiting Press Of The United States For The Grand Lodge Reunion",
          "Banquet To The Western Associaion Of Shoe Wholesalers"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet"
      },
      {
        "from": [
          "Seventh Annual Banquet",
          "Seventh Annual Dinner",
          "Seventh Annual Banquet To The St. Louis Traffic Commission",
          "Seventh Annual Convention Banquet",
          "Seventh Annual Festival",
          "Seventh Annual Reunion Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Dinner For Chairmen Hon.Randolph Guggenheimer And General Daniel Butterfield",
          "Dinner For Class Of 1863",
          "Dinner For Committee For Preliminaries For The Worlds Fair",
          "Dinner For Czar And Czarenna, King And Queen Of Greece, Prince And Princess Of Wales",
          "Dinner For H.E. Sir George White",
          "Dinner For Joseph August"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Banquet Fo Capt. Roald Amundsen",
          "Banquet Of Cornell And Columbia Debating Teams",
          "Banquet Of Seventeenth Annual Convention",
          "Banquet To Visiting Citizens Of Knoxville",
          "Banquet To Visiting Congressmen And Ladies",
          "Banquet To Visiting Grand Masters"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet"
      },
      {
        "from": [
          "Dinner To The California Delegation At The Republican National Convention",
          "Dinner To The Commander & Officers Of Royal Netherlands Van Speyk",
          "Dinner To The Commissioners From England, Germany And Denmark To The Columbian Exposition",
          "Dinner To The Crowned Heads,who Came To The Czars Father Funeral",
          "Dinner To The Stick Together Club",
          "Dinner To Those Who Are About To Leave Us Temporarily"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Dinner To Dr. A. Conan Doyle",
          "Dinner To Dr.L.W.Read Surgeon General Of The State Of Pennsylvania",
          "Dinner To Dr.Otto Nordenskjold",
          "Dinner To The Artillery Officers Of The State Of New York",
          "Dinner To The Rector And Professors Of The University Of Christiania",
          "Dinner To The Right Hon. James Bryce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Dinner To M. Warley Platzek In Honor Of His Election As A Justice Of The Supreme Court",
          "Dinner To M.W.John Stewart,grand Master Of Masons,state Of Ny",
          "Dinner To Newspaper Men Who Participated In The Recent Riot",
          "Dinner To Newspaper Pess Of Philadelphia And Atlantic City",
          "Dinner To Newspaper Publicity Men Of Philadelphia Politics",
          "Dinner,20th Anniversary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Dinner At Quirinel Palace",
          "Dinner To George C. Clark",
          "Dinner To George Gray Ward Of The Commercial Pacific Cable Company",
          "Dinner To George H. Fisher",
          "Dinner To Grover Cleveland",
          "Dinner To Her Bridesmaids"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Christmas Dinner",
          "Christmas Breakfast",
          "Christmas Day Dinner",
          "Christmas Lunch",
          "Christmas Night Dinner And Program",
          "Christmas Supper"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Christmas Dinner"
      },
      {
        "from": [
          "Celebration Banquet",
          "Celebration Of Centennial Of Inaug. Of Washington",
          "Celebration Of Opening",
          "Celebration Of The Evacuation Of The City Of New York",
          "Celebration Of The Sixtyninth Anniversary Of The Formation Of The Regiment And The Thirty Second Anniversary Of Its Departure For Washington At The Outbreak Of The War",
          "Celebration Of Washingtons Birthday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet"
      },
      {
        "from": [
          "Sixth Annual Banquet",
          "Sixth Annual Dinner",
          "Sixth Annual Anniversary Banquet",
          "Sixth Annual Banquet & Ball",
          "Sixth Annual Reunion And Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Seventeenth Annual Banquet",
          "Seventeenth Annual Appomattox Day Banquet",
          "Seventeenth Annual Dinner",
          "Seventeenth Annual Dinner Of The New York Association Of Alumni",
          "Seventeenth Annual Social Session"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Dinner And Breakfast",
          "Dinner And Wine And Birthday",
          "Dinner In Aid Of The Reform Of The Tariff",
          "Dinner On The Eve Of His Departure",
          "Dinner On The Eve Of The Wedding Of Princess Josephine Of Belgium And Prince Carl Von Hohenzollern"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast And Dinner"
      },
      {
        "from": [
          "Dinner To Commemorate The Semicentenniial",
          "Dinner To Commodore Alfred Marshall",
          "Dinner To Count Ferdinand De Lessups",
          "Dinner To Senator William M. Evarts Of Ny",
          "Dinner To U.S. Naval Officers Stationed At League Island, Philadelphia, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Luncheon For 120 Guest",
          "Luncheon For Civil Governmnt Day",
          "Luncheon For Guests Of Minnesota Iron Company",
          "Luncheon For The Universal Postal Congress",
          "Luncheon From 12 To 2.30 Pm."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon"
      },
      {
        "from": [
          "Eleventh Annual Banquet",
          "Eleventh Annual Dinner",
          "Eleventh Annual Convenion",
          "Eleventh Annual Dinner In Commemoration Of Birth Of Thomas Jeffrson",
          "Eleventh Meeting"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Luncheon To The California Promotion Committee On The Occasion Of The Resumption Of Hotel Business In The Burned District",
          "Luncheon To The Millinery Jobbers Association",
          "Luncheon To The President",
          "Luncheon To The President Fallieres Of The Republic",
          "Luncheon To The President Of The United States, The Mississippi Vlley Governors, And Members Of The Inland Waterways Commission"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon"
      },
      {
        "from": [
          "Evening Dinner",
          "Opening Dinner",
          "Evening Dinner Menu",
          "Opening Day Of New Rooms",
          "Opening Dinner Of Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Easter Sunday Dinner",
          "Easter Sunday Lunch",
          "Easter Sunday",
          "Easter Sunday Breakfast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Easter Sunday Dinner"
      },
      {
        "from": [
          "Ninth Annual Banquet",
          "Ninth Annual Banquest And Meeting",
          "Ninth Annual Banquet For The Honorable Honore Mercier",
          "Ninth Annual Lawn Party"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Twentieth Annual Banquet",
          "Twentieth Annual Dinner",
          "Twentieth Anniversary",
          "Twentieth Anniversary Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Twentyfirst Anniversary Dinner",
          "Twentyfirst Annual Banquet",
          "Twentyfirst Annual Dinner",
          "Twentyfirst Annual Dinner And Meeting"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Dinner"
      },
      {
        "from": [
          "Thirteenth Annual Dinner",
          "Thirteenth Annual Banquet",
          "Thirteenth Annual Meeting",
          "Thirteenth Annual Reunion And Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "Anniversary Banquet",
          "Anniversary Banquet Of The Great Swamp Fight",
          "Anniversary Festival",
          "Anniversary Of George Washingtons Birthday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Banquet"
      },
      {
        "from": [
          "Sunday Dinner",
          "Sunday Dinner Evening",
          "Sunday Dinner For The Royal Family And Guests",
          "Sunday Dinner Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sunday Dinner"
      },
      {
        "from": [
          "Banquet Honoring Ight Rev. W.N. Mcvickar",
          "Banquet Honoring Judging Colleagues",
          "Banquet On Reception Of Silver Service Given By The Chamber Of Commerce Of Tampico, Mexico",
          "Banquet To Northwestern Hotel Mens Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet In Honor"
      },
      {
        "from": [
          "Dinner To The Advertising Men Of Washington",
          "Dinner To The Delegates Of The International Marine Conference",
          "Dinner To The Delegates Of The National League Of Musicians",
          "Dinner To The Delegates To The Convention Of The Merchant Tailors National Exchange Of The United States Of America"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Dinner To Crew Of 1906",
          "Dinner To Sir Henry Irving",
          "Dinner To Sir Thomas Lipton",
          "Dinner To Sr. Don Miguel Ahumeda"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Dinner To Capt. Louis Philippe Dorleans, Comte De Paris",
          "Dinner To Capt.T.C.Mclean,u.S.N.,commander U.S.S.Pennsylvania",
          "Dinner To Captain Robert C. Halpin On The Occasion Of The Presentation Of His Portrait",
          "Dinner To Spencer Trask"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Fifteenth Annivrsary Banquet",
          "Fifteenth Annual Banquet",
          "Fifteenth Annual Dinner",
          "Fifteenth Annual Reunion And Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Banquet"
      },
      {
        "from": [
          "Dinner Dance",
          "Dinner & Dance For Daughter",
          "Dinner To Meet Charles Schwab,president Of Carnegie Steel Co.",
          "Dinner To Miss Helen Merrill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Dance"
      },
      {
        "from": [
          "Farewell Banquet To General Horace Porter",
          "Farewell Banquet To Hon. Thomas F. Bayard And Mrs. Bayard",
          "Farewell Banquet To The Earl Of Aberdeen,gov. General Of Canada",
          "Farewell Banquet To The S.A. Bushmens Corps On The Eve Of Their Departure For South Africa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Farewell Banquet"
      },
      {
        "from": [
          "Luncheon To Chicago Agents And John A. Mccall",
          "Luncheon To Commercial Clubs Of Boston, Chicago, And St. Louis",
          "Luncheon To Secretary Taft, Alice Roosevelt, Et Al.",
          "Luncheon To State Hotel Association Of Pennsylvania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon"
      },
      {
        "from": [
          "Opening Ball",
          "Opening Banquet",
          "Opening Of Egyptian Hall",
          "Opening Of The Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Opening Ball"
      },
      {
        "from": [
          "Eighteenth Annual Ball",
          "Eighteenth Annual Convention",
          "Eighteenth Annual Dinner",
          "Eightenth Annual Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Ball"
      },
      {
        "from": [
          "Fourth Annual Banquet",
          "Fourth Annual Banquet Of The Team Owners Association",
          "Fourth Annual White Breakfast",
          "Fourthy Annual Banquet Celebrating The Birth Of St. Patrick"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Inauguration Day",
          "Inauguration Dinner",
          "Inauguration Of Mr. Alderman Alliston & Lieut. Col. Clifford Probyn, V.D.",
          "Inauguration Of The Oklahome Chapter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Inauguration Day"
      },
      {
        "from": [
          "Banquet To Admiral George Dewey",
          "Banquet To The National Association Of Manufacturers",
          "Banquet To The National Cigar Leaf Tobacco Association Of The United States"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet In Honor"
      },
      {
        "from": [
          "Reception And Ball",
          "Reception And Banquet In Honor Of Herman A. Metz",
          "Reception And Banquet Tendered To Mr. George W. Van Allen, Mr. William H. Van Allen And Mr. C. Frank Boughton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reception And Ball"
      },
      {
        "from": [
          "Banquet To Deligates Of City Of London International Commercial Association",
          "Banquet To Dlegates Of The National Municipal League",
          "Banquet To The Old Guard Of New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet In Honor"
      },
      {
        "from": [
          "Banquet To The Earl Of Aberdeen",
          "Banquet To The Earl Of Onslow",
          "Banquet To The Right Honorable George Robert Tyler, Lord Mayor Mr. Alderman & Sheriff Moore Mr. Alderman & Sherriff Dimsdaly"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet In Honor"
      },
      {
        "from": [
          "First Anniversary Banquet Tendered To The Saddlery Buyers Of New York",
          "First Anniversary Dinner",
          "First Anniversary Dinner Of The Inauguration Of George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Banquet"
      },
      {
        "from": [
          "Twelfth Annual Banquet",
          "Twelfth Annual Meeting",
          "Twelfth Annual Reunion"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Twenty Seventh Annual Meeting",
          "Twentyseventh Annual Banquet In Commemoration Of Thomas Jefferson",
          "Twentyseventh Annual Banquet Of The Loyal League"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Meeting"
      },
      {
        "from": [
          "Dining Car Service Meals",
          "Dining Car Service Dinner",
          "Dining Car Service"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dining Car Service Meals"
      },
      {
        "from": [
          "12th Annual Meeting & Banquet",
          "20th Annual Meeting Dinner",
          "25th Annual Meeting & Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Meeting Banquet"
      },
      {
        "from": [
          "Twentyfifth Anniversary",
          "Twentyfifth Annivesay O Founding Of Club",
          "Twentyfifth Annual Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Banquet"
      },
      {
        "from": [
          "10th Annual Banquet Of National Association Of Clothiers",
          "3d Annual Banquet",
          "9th Annual Banquet In Honor Of 76th Birthday Of Ulysses S. Grant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Dinner Of The Fruit Trade Of New York City",
          "Dinner Of The President",
          "Dinner Vaudeville"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Anniversary Dinner",
          "Anniversary Dinner Given To The Staff Of The Postdispatch And Other Friends",
          "Anniversary Dinner Of The Presentation Of Loving Cup"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Dinner"
      },
      {
        "from": [
          "Dinner On Board",
          "Dinner On Board Uss Raleigh",
          "Dinner On Professor Lovering Completing 50 Years Of Service"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "12th Annual Convention Banquet",
          "13th Annual Convention And Banquet",
          "15th Annual Conventin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Banquet On Anniversary Of Washingtons Birthday",
          "Banquet To Members Of Football Team",
          "Banquet To Members Of The Ohio Bankers Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Banquet"
      },
      {
        "from": [
          "Banquet  9th Annual Meeting",
          "Banquet,11th Annual",
          "Banquet,126th Annual For The Relief Of Emigrants From Ireland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Norddeutscher Lloyd Bremen & Dinner",
          "Norddeutscher Lloyd Bremen Lunch And Dinner Menu",
          "Norddeutscher Lloyd Bremen Speise Karte & Breakfast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast,Lunch & Dinner"
      },
      {
        "from": [
          "Dinner Commemorating A New Record, Shipped 2836 Cars January, 1907",
          "Dinner Commemorating The Opening Of The New Hall Of The Board Of Education",
          "Dinner Commemorative Of The Commencement Of The American Army At Valley Forge"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Dinner At The Sudan Club",
          "Dinner To S.T.Wellman",
          "Dinner To Stick Togethr Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Nineteenth Annual Dinner",
          "Nineteenth Annual Banquet",
          "Nineteenth Anniversary Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "Dinner To 2500 Delagates Including Missippi Valley Governors",
          "Dinner To Delegates Of The Grandes Compagnies Francaises De Chemins De Fer",
          "Dinner To Delegates Of The Pennsylvania Bankers Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Dinner To His Excellency Charlemagne Tower, Ambassador Extraordinary And Plenipotentiary",
          "Dinner To His San Francisco Friends",
          "Dinner To Kaiser Wilhelm And Kaiserin Auguste Victoria Of Germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Birthday Dinner",
          "Birthday Dinner To Mr. All. Meritt",
          "Fortieth Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Fortieth Anniversary And Banquet",
          "Fortieth Anniversary Of The Class Of 1865",
          "Fourtieth Anniversary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Banquet"
      },
      {
        "from": [
          "Dinner To Celebrate Thomas Jeffersons Birthday",
          "Dinner To Chilian Officials",
          "Dinner To Soldiers And Sailors Of The Spanish American War"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "175th Regular & Annual Ladies Roof Garden Dinner",
          "257th Regular Meeting And Dinner",
          "95th Regular Meeting"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Regular Meeting"
      },
      {
        "from": [
          "1st Annual Banquet",
          "21st Annual Banquet In Celebration Of The Birth Of George Washington",
          "31st Annual Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Dinner To M. Jean Ch. Guerlain, De Paris",
          "Dinner To Members From Abroad",
          "Dinner To Members Of The Boston Army Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Silver Wedding Anniversary Of Hermann Sengelmann And Therese Rehr Sengelmann",
          "Silver Wedding Dinner",
          "Silver Weding Anniversary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Dinner"
      },
      {
        "from": [
          "Dinner To A.L. Craig",
          "Dinner To Las Delgaciones A La Confercia De Paz Centro Americana",
          "Dinner To Louis Sloss Jr. Prior To His Departure For Cape Nome,alaska"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Lunch A La Carte Held By Nordeutscher Lloyd Bremen At On Board Ss Kaiser Wilhelm Der Grosse",
          "Lunch A La Carte Held By Nordeutscher Lloyd Bremen At On Board Ss Berlin",
          "Lunch A La Carte Held By Nordeutscher Lloyd Bremen At On Board Ss George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A La Carte Lunch"
      },
      {
        "from": [
          "Bill Of Fare  Breakfast & Supper",
          "Bill Of Fare/breakfast One Side Bill Of Fare/lunch Reverse Side",
          "Bill Of Fare/breakfast/dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast And Supper"
      },
      {
        "from": [
          "Fifth Annual Dinner",
          "Fifth Annual Dinner In Honor Of Birth Of Alexander Hamiltion",
          "Fifth Annual Dinner Of The Macdowell Club Of New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "Reception & Banquet To Thirteenth Minnesota U.S.V.",
          "Reception Of Their Royal Highnesses The Prince And Princess Of Wales"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet And Reception"
      },
      {
        "from": [
          "Banquet Commemorating The Boston Tea Party",
          "Banquet Commemorating The Marriage Of S.M. El Rey Don Alfonso Xiii And Victoria Eugenia De Battenberg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet In Honor"
      },
      {
        "from": [
          "Banquet To Commemorate The Evacution Of Ny By The British",
          "Banquet To Committees"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet In Honor"
      },
      {
        "from": [
          "Twelfth Banquet",
          "Twelfth Burns Anniversary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "First Annual Banquet",
          "First Annual Banquet And Cotillon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "17th Annual Reception And Banquet",
          "18th Annual Reception"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet And Reception"
      },
      {
        "from": [
          "Twentysixth Annual Dinner",
          "Twentysixth Annual Reception"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "First Banquet",
          "Festbankett"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Banquet"
      },
      {
        "from": [
          "Ninth Annual Meeting And Banquet",
          "Ninth Annualin Honor Of Crow Charlton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Meeting Banquet"
      },
      {
        "from": [
          "Supper In Honor Of Augustus Thomas",
          "Supper In Honor Of King Frederik Viii Of Denmark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Supper In Honor"
      },
      {
        "from": [
          "Twenty Third Annual Dinner Of The New York Florists Club At The Fifth Avenue Restaurant",
          "Twentythird Annual Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "Souper Offert En Honneur De Lexposition Dagriculture",
          "Supper Offered In Honor Of The Exposition Of Agriculture"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Supper In Honor"
      },
      {
        "from": [
          "Ninth Annual Dinner",
          "Ninth Annual Dinner Of Masters And Past Masters Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "17th Annual Reunion And Dinner",
          "54th Annual Reunion"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "New Years Dinner",
          "New Years Dinner To The Diplomatic Corps And Their Ladies"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Years Dinner"
      },
      {
        "from": [
          "Jubilee Dinner",
          "Jubilee Dinner To Celebrate The Fiftieth Anniversary Of The Founding Of The House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jubilee Dinner"
      },
      {
        "from": [
          "A La Carte Lunch",
          "A La Carte Luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A La Carte Lunch"
      },
      {
        "from": [
          "A La Carte Dinner",
          "A La Carte Dinner Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "A La Carte Dinner"
      },
      {
        "from": [
          "Eighth Annual Dinner In Honor Of Stewart L. Woodford",
          "Eigth Annual Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "Informal Dinner",
          "Informal Beefsteak Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Dinner 11am",
          "Dinner On"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "George Washingtons Birthday",
          "George Washingtons Birthday Reception"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reception In Honor"
      },
      {
        "from": [
          "Room Service",
          "Room Service Luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Room Service"
      },
      {
        "from": [
          "173rd Regular Meeting",
          "93rd Regular Meeting"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Regular Meeting"
      },
      {
        "from": [
          "Forefathers Day",
          "Forefathers Day Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Forefathers Day"
      },
      {
        "from": [
          "Compl. Dinner To English Visitors",
          "Complete Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Bachelor Dinner",
          "Bachelor Dinner To Mr. George Walter Morley, Jr."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Dinner Inspection Trip",
          "Dinner On Special Train For Secy Of War Elihu Root And Party"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner Inspection Trip"
      },
      {
        "from": [
          "Washingtons Birthday Dinner",
          "Washington Trip"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Banquet Foundersday",
          "Banquet Of Naval Officers"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Banquet Of Welcome To Capt. Benjamin P. Lamberton, U.S.N., U.S. Flagship Olympia",
          "Banquet To William Randolf Hearst"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet In Honor"
      },
      {
        "from": [
          "Banquet To H.M. Flagler, Esqr.",
          "Banquet To New Orleans Base Ball Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet In Honor"
      },
      {
        "from": [
          "Quick Luncheon And Afternoon Tea",
          "Quick Luncheon, Afternoon Tea"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon & Afternoon Tea"
      },
      {
        "from": [
          "Dinner To Secretaries Of State",
          "Dinner To Secretary Of State & Mrs. Root"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Tour To Buffaloluncheon",
          "Tour To Buffalo  Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon"
      },
      {
        "from": [
          "Banquet To Celebrate The Inauguration Of The Decade Of The Automobile",
          "Banquet To Colonel William Henry Boyleretired"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet In Honor"
      },
      {
        "from": [
          "Centenial Anniversary Dinner",
          "Centennial Anniversary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Dinner"
      },
      {
        "from": [
          "Personally Conducted Tour Through Mexico & California",
          "Personally Conducted Tour Through Mexico And Calfiornia  Breakfast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breakfast"
      },
      {
        "from": [
          "Dedication Banquet",
          "Dedication Of Mill Of Fall River Iron Works Co. Fall River, Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Banquet In Honor"
      },
      {
        "from": [
          "Luncheon And Dinner",
          "Luncheon On Tour Via Southern Railway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon & Dinner"
      },
      {
        "from": [
          "Luncheon Inspection Trip",
          "Luncheon On Special Train For Secy Of War, Elihu Root And Party"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon Inspection Trip"
      },
      {
        "from": [
          "Luncheon In Honor Of Mrs. Manning",
          "Luncheon In Honor Of Sir Chentung Liangcheng"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon In Honor"
      },
      {
        "from": [
          "Semicentennial Celebration/luncheon",
          "Semicentennial Of Opening"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon In Honor"
      },
      {
        "from": [
          "Dinner To Officers Of U.S.S. Minneapolis",
          "Dinner To Visiting State Editors"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Luncheon  Pullman Dining Car Service",
          "Luncheon,bill Of Fare"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon In Honor"
      },
      {
        "from": [
          "Dinner To Philippe Hebert Sculpteur On His Departure To Europe",
          "Dinner To Welcome Robert Garrett, President Of The Baltimore & Ohio Railroad, To Staten Island"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Third Annual Luncheon",
          "Third Annual Union Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Luncheon"
      },
      {
        "from": [
          "Third Annual Dinner",
          "Third Annual Dinner In Commemoration Of The 98th Anniversary Of The Birth Of Abraham Lincoln"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "Third Annual Convention",
          "Third Annual Subscription Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "Third Annual Banquet",
          "Third Annual Ball"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "10nth Anniversary Dinner",
          "162nd Anniversary Of Washingtons Birthday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary Dinner"
      },
      {
        "from": [
          "Fruhstuckluncheon",
          "Fruhstuck A La Carte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon"
      },
      {
        "from": [
          "Luncheon On Funeral Train Of President Mckinley",
          "Luncheon On Board Uss Raleigh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon In Honor"
      },
      {
        "from": [
          "Lunch For Mrs. Thos. Brady & Daughter In Remembrance Of A Very Pleasant Evening April 1890",
          "Lunch For National Academy Of Sciences"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luncheon In Honor"
      },
      {
        "from": [
          "Dinner  During Excursion To Germanic Museum,cambridge,mass",
          "Dinner To R I John R.Gardner Grand Marshal"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner In Honor"
      },
      {
        "from": [
          "Midnight Supper",
          "Midnight Supper In Honor Of Anna Held And Florenz Ziegfeld"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Supper"
      },
      {
        "from": [
          "Third Class Menu",
          "Third Class Bill Of Fare Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Thirtieth Annual Dinner",
          "Traditional Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      },
      {
        "from": [
          "Special Supper",
          "Specials Of Day"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Supper"
      },
      {
        "from": [
          "Evening Meal",
          "Evening Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Evening Meal"
      },
      {
        "from": [
          "Annual Outing",
          "Annual Outing Of Edward Thompson Co."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Meeting"
      },
      {
        "from": [
          "Cafe Service Meals",
          "Cafe Service"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Service Meals"
      },
      {
        "from": [
          "Lunch & Dinner",
          "Lunch To Mr.William H. Taft & Mrs. Taft"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lunch & Dinner"
      },
      {
        "from": [
          "Special Dinner",
          "Special Dinner Commemorative Of The Visit Of The Italian Cruiser Ettore Fieramosra"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Special Dinner"
      },
      {
        "from": [
          "Second Cabin Dinner  ",
          "Second Cabin Breakfast"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Second Cabin Dinner  "
      },
      {
        "from": [
          "Daily Menu, Dinner Specialities",
          "Daily Menu,dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "Carte Du Jour",
          "Carte Du Jourdiner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Carte Du Jourdiner"
      },
      {
        "from": [
          "Fifth Annual Banquet",
          "Fifth Annual Ball"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Banquet"
      },
      {
        "from": [
          "Fourth Annual Convention",
          "Fourth Annual Summer Outing"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Meeting"
      },
      {
        "from": [
          "Supper Dinner",
          "Supper To Amercican Warehousemens Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Supper & Dinner"
      },
      {
        "from": [
          "Hauptmahlzeitdinner",
          "Hauptmahlzeit"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dinner"
      },
      {
        "from": [
          "2nd Annual Dinner Commemorating The First Centennial Of Rockland County",
          "2nd Annual Dinner To Hon. Richard L. Ashhurst, Postmaster And Mr. George W. Knowles, Assistant Postmaster"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual Dinner"
      }
    ],
    "description": "Mass edit cells in column event"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column venue using expression value.toTitlecase()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Nav",
          "Nav ",
          "Nav."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nav"
      },
      {
        "from": [
          "Mil",
          "Mil ",
          "Mil."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mil"
      },
      {
        "from": [
          "Soc",
          "Soc.",
          "Soc "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "security operations center"
      },
      {
        "from": [
          "Pol Soc",
          "Soc Pol"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "security operations center"
      },
      {
        "from": [
          "Patr",
          "Patr."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Patr"
      },
      {
        "from": [
          "Comm",
          "Comm."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial"
      },
      {
        "from": [
          "Educ",
          "Educ "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Education"
      },
      {
        "from": [
          "Pol",
          "Pol."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "security operations center"
      },
      {
        "from": [
          "Prof",
          "Prof."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "professionals"
      },
      {
        "from": [
          "Otherprivate",
          "Other,private"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Private"
      },
      {
        "from": [
          "Com",
          "Com."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial"
      },
      {
        "from": [
          "Gov",
          "Gov."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Government"
      },
      {
        "from": [
          "Govt",
          "Govt."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Government"
      }
    ],
    "description": "Mass edit cells in column venue"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Soc, Mil",
          "Socmil"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Social Club"
      },
      {
        "from": [
          "Other Club",
          "Other,club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Social Club"
      },
      {
        "from": [
          "Soc Relig",
          "Soc,relig"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Social Club"
      },
      {
        "from": [
          "Foreign,hotel",
          "Foreign Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel"
      },
      {
        "from": [
          "Soc, Com",
          "Soccom"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Social Club"
      },
      {
        "from": [
          "Social Club",
          "Socialclub"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Social Club"
      }
    ],
    "description": "Mass edit cells in column venue"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Other Privately Hosted Dinner Party",
          "Other Privately Hosted Party",
          "Other Privately Hosted Banquet",
          "Other Privately Hosted Dinner",
          "Other Privately Hosted Luncheon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Others"
      },
      {
        "from": [
          "Other Private Party",
          "Other Private Party By Single Host",
          "Other Private Party With Individual Host",
          "Other Private Party, Single Host",
          "Other Private Paty"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Others"
      },
      {
        "from": [
          "Other Private Hosts",
          "Other Private Host",
          "Other Private Hostess"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Others"
      },
      {
        "from": [
          "Commercial",
          "Cmmercial"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial"
      },
      {
        "from": [
          "Other Private Individual Host",
          "Other,private Individual"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Others"
      },
      {
        "from": [
          "Other Private Club",
          "Other Private Group Of Friends"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Others"
      },
      {
        "from": [
          "Other Individual",
          "Other Individually Hosted Party"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Others"
      }
    ],
    "description": "Mass edit cells in column venue"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Mil",
          "Null"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mil"
      }
    ],
    "description": "Mass edit cells in column venue"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Restaurant",
          "Restaurant,lunch Room,coffee Shop",
          "Restaurant,other,urant,other,bar"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant"
      },
      {
        "from": [
          "Other Sport",
          "Other Sporting Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Others"
      },
      {
        "from": [
          "Others",
          "Edus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Others"
      },
      {
        "from": [
          "Other Royal King",
          "Other Royal Host"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Others"
      },
      {
        "from": [
          "Other Single Hostprivate Party",
          "Other Single Tax Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Others"
      },
      {
        "from": [
          "Other Private",
          "Other Private Friends"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Others"
      },
      {
        "from": [
          "Other Group Of Friends",
          "Other Group Of Citizens"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Others"
      },
      {
        "from": [
          "Other Expatriate",
          "Other Hospital "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Others"
      }
    ],
    "description": "Mass edit cells in column venue"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Foreign",
          "Foreigneign"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Foreign"
      },
      {
        "from": [
          "Education",
          "Educational"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Education"
      }
    ],
    "description": "Mass edit cells in column venue"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "venue",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column venue using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column sponsor using expression value.toTitlecase()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "sponsor",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Norddeutscher Lloyd Bremen",
          "Norddeutscher Lloyd  Bremen",
          "Norddeutscher Lloyd, Bremen",
          "Bremen Norddeutscher Lloyd"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Nordeutscher Lloyd Bremen",
          "Nordeutscher Lloyd, Bremen",
          "Nordeutscher Lloyd  Bremen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Norddeutscher Lloyd Bremen"
      },
      {
        "from": [
          "Hotel National",
          "National Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel National"
      },
      {
        "from": [
          "Hotel Marie Antoinette",
          "Marie Antoinette Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Marie Antoinette"
      },
      {
        "from": [
          "Hotel Quisisana",
          "Quisisana Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Quisisana"
      },
      {
        "from": [
          "Copley Plaza Hotel",
          "Hotel Copley Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Copleyplaza"
      },
      {
        "from": [
          "Fifth Avenue Hotel",
          "Fifth Avenue Hotel "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Avenue Hotel"
      },
      {
        "from": [
          "Old Guard Albany Zouave Cadets",
          "Albany Zouave Cadets  Old Guard"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Old Guard Albany Zouave Cadets"
      },
      {
        "from": [
          "New York Central & Hudson River R.R.",
          "New York Central & Hudson River R.R.."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Central & Hudson River R.R."
      },
      {
        "from": [
          "San Remo Hotel",
          "Hotel San Remo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "San Remo Hotel"
      },
      {
        "from": [
          "Le Dome Of The Four Seasons",
          "Le Dôme Of The Four Seasons"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Dome Of The Four Seasons"
      },
      {
        "from": [
          "Nippon Yusen Kaisha  S.S.Nasuga",
          "Nippon Yusen Kaisha S.S.Nasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha  S.S.Nasuga"
      },
      {
        "from": [
          "Cafeteria Lunch",
          "Cafeteria  Lunch"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafeteria Lunch"
      },
      {
        "from": [
          "Hotel St. George",
          "St. George Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. George"
      },
      {
        "from": [
          "Le Café Chambord",
          "Le Cafe Chambord"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Café Chambord"
      },
      {
        "from": [
          "Oceanic Steamship Co.  Sonoma",
          "Oceanic Steamship Co. _ Sonoma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oceanic Steamship Co.  Sonoma"
      },
      {
        "from": [
          "Associated Pioneers Of The Territorial Days Of California",
          "The Associated Pioneers Of The Territorial Days Of California"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Associated Pioneers Of The Territorial Days Of California"
      },
      {
        "from": [
          "Hotel Plaza",
          "Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Plaza"
      },
      {
        "from": [
          "York Hotel",
          "Hotel York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "York Hotel"
      },
      {
        "from": [
          "Hotel Royal",
          "Royal Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Royal"
      },
      {
        "from": [
          "Hotel Vendome",
          "Vendome Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome"
      },
      {
        "from": [
          "Cie Transatlantique",
          "Cie Cie Transatlantique"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compagnie Générale Transatlantique"
      },
      {
        "from": [
          "Us Army  Subsistence Dept.",
          "U.S. Army  Subsistence Dept."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Us Army  Subsistence Dept."
      },
      {
        "from": [
          "Hotel Martinique",
          "Martinique Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Martinique"
      },
      {
        "from": [
          "Hotel New Weston",
          "New Weston Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel New Weston"
      },
      {
        "from": [
          "Copleyplaza Hotel",
          "Hotel Copleyplaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Copleyplaza"
      },
      {
        "from": [
          "Nippon Yusen Kaisha  S.S.Kinshin Maru",
          "Nippon Yusen Kaisha S.S.Kinshin Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha  S.S.Kinshin Maru"
      },
      {
        "from": [
          "Hotel Victoria",
          "Victoria Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Victoria"
      },
      {
        "from": [
          "Ponce De Leon Hotel",
          "Hotel Ponce De Leon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ponce De Leon Hotel"
      },
      {
        "from": [
          "Hotel Pontchartrain",
          "Pontchartrain Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pontchartrain"
      },
      {
        "from": [
          "Hotel Lexington",
          "Lexington Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Lexington"
      },
      {
        "from": [
          "Hotel Revelstoke",
          "Revelstoke Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Revelstoke"
      },
      {
        "from": [
          "Nippon Yusen Kaisha  S.S. Kasuga",
          "Nippon Yusen Kaisha Ss Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nippon Yusen Kaisha  S.S. Kasuga"
      },
      {
        "from": [
          "Hotel Roanoke",
          "Roanoke Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Roanoke"
      },
      {
        "from": [
          "Des Indes Hotel",
          "Hotel Des Indes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Des Indes Hotel"
      },
      {
        "from": [
          "Baltimore Hotel",
          "Hotel Baltimore"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Baltimore"
      },
      {
        "from": [
          "Westminster Hotel",
          "Hotel Westminster"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Westminster"
      },
      {
        "from": [
          "Hotel Statler",
          "Statler Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Statler"
      },
      {
        "from": [
          "U.S.S. New York",
          "U.S.S. New York "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.S. New York "
      },
      {
        "from": [
          "Hofbrau Haus",
          "Hofbräu Haus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hofbrau Haus"
      }
    ],
    "description": "Mass edit cells in column sponsor"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column place using expression value.toTitlecase()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Auditorium Hotel, Chicago, Il",
          "Auditorium Hotel Chicago, Il",
          "Auditorium Hotel , Chicago, Il",
          "Auditorium Hotel Chicago Il",
          "Auditorium Hotel, Chicago Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium Hotel, Chicago, Il"
      },
      {
        "from": [
          "The New Willard, Washington, Dc",
          "New Willard, The, Washington, Dc",
          "The New Willard Washington, Dc",
          "The New Willard, Washington Dc",
          "The New Willard, Washington, D.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The New Willard, Washington, Dc"
      },
      {
        "from": [
          "Old Point Comfort, Va",
          "Old Point Comfort Va",
          "Old Point Comfort, Va.",
          "Old Point, Comfort, Va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Old Point Comfort, Va"
      },
      {
        "from": [
          "Hotel Manhattan, Ny",
          "Hotel Manhattan Ny",
          "Manhattan Hotel Ny",
          "Manhattan Hotel, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan, Ny"
      },
      {
        "from": [
          "En Route Friedrich Der Grosse",
          "En Route  Friedrich Der Grosse",
          "En Route  Friedrich Der Grosse ",
          "En Route Friedrich Der Grosse "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Friedrich Der Grosse"
      },
      {
        "from": [
          "The Auditorium, Chicago, Il",
          "The Auditorium Chicago, Il",
          "Auditorium, The, Chicago, Il",
          "The Auditorium Chicago Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Auditorium, Chicago, Il"
      },
      {
        "from": [
          "Philadelphia, Pa",
          "Philadelphia Pa",
          "Philadelphia, Pa.",
          "Philadelphia. Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia, Pa"
      },
      {
        "from": [
          "Nassau,n.P.Bahamas",
          "Nassau,np,bahamas",
          "Nassau,n.P.,bahamas",
          "Nassau,npbahamas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau,n.P.Bahamas"
      },
      {
        "from": [
          "Delmonicos Ny",
          "Delmonicos, Ny",
          "Delmonicos, N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos Ny"
      },
      {
        "from": [
          "Hotel Pfister, Milwaukee, Wi",
          "Hotel Pfister, Milwaukee Wi",
          "Pfister Hotel, Milwaukee, Wi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pfister, Milwaukee, Wi"
      },
      {
        "from": [
          "Hotel Brunswick Ny",
          "Brunswick Hotel Ny",
          "Hotel Brunswick, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Brunswick Ny"
      },
      {
        "from": [
          "Washington, Dc",
          "Washington, D.C.",
          "Washington Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Washington, Dc"
      },
      {
        "from": [
          "Ss Friesland",
          "S.S. Friesland",
          "Ss. Friesland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Friesland"
      },
      {
        "from": [
          "Long Beach,l.I.,ny",
          "Long Beach,l.I.,ny&",
          "Long Beach,li,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Long Beach,l.I.,ny"
      },
      {
        "from": [
          "Delmonicos, New York, Ny",
          "Delmonicos, New York, N.Y.",
          "Delmonicos. New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos, New York, Ny"
      },
      {
        "from": [
          "Delmonicos, New York City",
          "New York City Delmonicos",
          "New York City, Delmonicos"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos, New York City"
      },
      {
        "from": [
          "Lakewood, Nj",
          "Lakewood Nj",
          "Lakewood, N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lakewood, Nj"
      },
      {
        "from": [
          "Mercantile Club St Louis, Mo",
          "Mercantile Club, St Louis Mo",
          "Mercantile Club, St. Louis, Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mercantile Club St Louis, Mo"
      },
      {
        "from": [
          "Marlborough Hotel, ",
          "Hotel Marlborough",
          "Hotel Marlborough, "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Marlborough Hotel, "
      },
      {
        "from": [
          "Long Beach, L.I, Ny",
          "Long Beach, Li, Ny",
          "Long Beach, L.I., Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Long Beach, L.I, Ny"
      },
      {
        "from": [
          "Hotel Savoy",
          "Savoy Hotel",
          "Savoy Hotel, "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy"
      },
      {
        "from": [
          "New York, Ny",
          "New York Ny",
          "New York, Ny "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York, Ny"
      },
      {
        "from": [
          "Bellevuestratford Hotel, Philadelphia, Pa",
          "Hotel Bellevuestratford, Philadelphia, Pa",
          "Hotel Bellevuestratford Philadelphia, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevuestratford Hotel, Philadelphia, Pa"
      },
      {
        "from": [
          "R.M.S. Campania",
          "Rms Campania",
          "R.M.S.  Campania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Campania"
      },
      {
        "from": [
          "En Route  Ss Lahn",
          "En Route Ss Lahn",
          "En Route _ Ss Lahn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route  Ss Lahn"
      },
      {
        "from": [
          "St. Denis Hotel",
          "Hotel St. Denis",
          "St. Denis Hotel, "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "The Hollenden Cleveland Oh",
          "The Hollenden, Cleveland Oh",
          "The Hollenden, Cleveland, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Hollenden Cleveland Oh"
      },
      {
        "from": [
          "Hotel Majestic Philadelphia, Pa",
          "Hotel Majestic, Philadelphia, Pa",
          "Majestic Hotel, Philadelphia. Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Majestic Philadelphia, Pa"
      },
      {
        "from": [
          "Brunswick Hotel, Boston, Ma",
          "Hotel Brunswick, Boston, Ma",
          "Hotel Brunswick, Boston Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brunswick Hotel, Boston, Ma"
      },
      {
        "from": [
          "Clinton County, Ny",
          "Clinton County Ny",
          "Clinton County, Ny."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clinton County, Ny"
      },
      {
        "from": [
          "Hotel Vendome, Boston, Ma",
          "Hotel Vendome Boston, Ma",
          "Vendome Hotel, Boston, Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome, Boston, Ma"
      },
      {
        "from": [
          "Providence, Ri",
          "Providence, R.I.",
          "Providence Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Providence, Ri"
      },
      {
        "from": [
          "The Arlington, Washington, D.C.",
          "The Arlington Washington Dc",
          "The Arlington, Washington, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Arlington, Washington, D.C."
      },
      {
        "from": [
          "Astor Hotel, New York, Ny",
          "Hotel Astor, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Astor Hotel, New York, Ny"
      },
      {
        "from": [
          "Parker House Boston,mass ",
          "Parker House, Boston,mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House Boston,mass "
      },
      {
        "from": [
          "En Route H.H.Meier",
          "En Route  H.H.Meier"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route H.H.Meier"
      },
      {
        "from": [
          "Berlin, Germany",
          "Berlin Germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Berlin, Germany"
      },
      {
        "from": [
          "New Algonquin Club, Boston, Ma",
          "New Algonquin Club Boston, Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Algonquin Club, Boston, Ma"
      },
      {
        "from": [
          "Hotel Savoy New York",
          "Hotel Savoy, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy New York"
      },
      {
        "from": [
          "Savoy Hotel, New York, Ny",
          "Hotel Savoy, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Savoy Hotel, New York, Ny"
      },
      {
        "from": [
          "En Route S.S.Barbarossa",
          "En Route  S.S.Barbarossa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S.Barbarossa"
      },
      {
        "from": [
          "Sherrys Ny",
          "Sherrys, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherrys Ny"
      },
      {
        "from": [
          "66 St. & Bway. Ny",
          "66 St. & Bway Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66 St. & Bway. Ny"
      },
      {
        "from": [
          "Lincoln Club  Ny",
          "Lincoln Club Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lincoln Club  Ny"
      },
      {
        "from": [
          "St. Augustine, Fla",
          "St. Augustine, Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Augustine, Fla"
      },
      {
        "from": [
          "Gramercy Park Hotel",
          "Hotel Gramercy Park"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gramercy Park Hotel"
      },
      {
        "from": [
          "Nassau, N.P.",
          "Nassau, Np"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau, N.P."
      },
      {
        "from": [
          "Chicago, Il",
          "Chicago Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Il"
      },
      {
        "from": [
          "Hoffman House New York, Ny",
          "Hoffman House, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hoffman House New York, Ny"
      },
      {
        "from": [
          "Brooklyn,ny",
          "Brooklynny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brooklyn,ny"
      },
      {
        "from": [
          "Hotel Jefferson, St. Louis, Mo",
          "Jefferson Hotel, St. Louis Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Jefferson, St. Louis, Mo"
      },
      {
        "from": [
          "Quebec, Canada",
          "Quebec Canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Quebec, Canada"
      },
      {
        "from": [
          "Hotel Stenton Philadelphia Pa",
          "Hotel Stenton, Philadelphia, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Stenton Philadelphia Pa"
      },
      {
        "from": [
          "R.M.S. Empress Of China",
          "Rms Empress Of China"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Empress Of China"
      },
      {
        "from": [
          "Ss Trinidad",
          "S.S. Trinidad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Trinidad"
      },
      {
        "from": [
          "Liverpool England",
          "Liverpool, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Liverpool England"
      },
      {
        "from": [
          "Ss Westernland",
          "S.S. Westernland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Westernland"
      },
      {
        "from": [
          "Portland, Me",
          "Portland Me"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland, Me"
      },
      {
        "from": [
          "Youngs Hotel",
          "Youngs Hotel "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Youngs Hotel"
      },
      {
        "from": [
          "Queen City Club, Cincinnati, Oh",
          "Queen City Club Cincinnati Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Queen City Club, Cincinnati, Oh"
      },
      {
        "from": [
          "Eagle Hotel Gettysburg, Pa",
          "Eagle Hotel, Gettysburg, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eagle Hotel Gettysburg, Pa"
      },
      {
        "from": [
          "Hotel Del Campidoglio, New York, Ny",
          "Hotel Del Campidoglio, New York, N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Del Campidoglio, New York, Ny"
      },
      {
        "from": [
          "Clinton County,ny",
          "Clinton County.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clinton County,ny"
      },
      {
        "from": [
          "Hotel Gramercy Park 52 Gramercy Park North",
          "Gramercy Park Hotel Hotel Gramercy Park 52 Gramercy Park North"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Gramercy Park 52 Gramercy Park North"
      },
      {
        "from": [
          "Delmonicos,ny",
          "Delmonicosny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos,ny"
      },
      {
        "from": [
          "Tacoma Wa",
          "Tacoma, Wa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tacoma Wa"
      },
      {
        "from": [
          "The Auditorium,chicago,ill",
          "The Auditorium,chicago,ill."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Auditorium,chicago,ill"
      },
      {
        "from": [
          "Ss City Of Rio De Janeiro",
          "S.S. City Of Rio De Janeiro"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss City Of Rio De Janeiro"
      },
      {
        "from": [
          "Baltimore,md",
          "Baltimore,md."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baltimore,md"
      },
      {
        "from": [
          "En Route Aboard Ss Kasuga Maru",
          "En Route Aboard Ss. Kasuga Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss Kasuga Maru"
      },
      {
        "from": [
          "At Sea",
          "At Sea "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "At Sea"
      },
      {
        "from": [
          "Hotel Zinzendorf, Winstonsalem, Nc",
          "Zinzendorf Hotel, Winstonsalem, Nc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Zinzendorf, Winstonsalem, Nc"
      },
      {
        "from": [
          "Cleveland, Ohio",
          "Cleveland. Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland, Ohio"
      },
      {
        "from": [
          "The Ten Eyck, Albany, Ny",
          "Ten Eyck, The, Albany, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Ten Eyck, Albany, Ny"
      },
      {
        "from": [
          "Butler, Pa",
          "Butler, Pa."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Butler, Pa"
      },
      {
        "from": [
          "Chicago, Ill",
          "Chicago ,ill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Ill"
      },
      {
        "from": [
          "Hotel Majestic",
          "Majestic Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Majestic"
      },
      {
        "from": [
          "Chicago,il",
          "Chicago,il."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago,il"
      },
      {
        "from": [
          "Hotel Astor",
          "Astor Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Astor"
      },
      {
        "from": [
          "Virginia Beach, Va",
          "Virginia Beach Va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Virginia Beach, Va"
      },
      {
        "from": [
          "Hotel Savoy, Ny",
          "Hotel Savoy Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy, Ny"
      },
      {
        "from": [
          "Manila, P.I.",
          "Manila, Pi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manila, P.I."
      },
      {
        "from": [
          "Bellevue Hotel, Philadelphia, Pa",
          "Hotel Bellevue, Philadelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue Hotel, Philadelphia, Pa"
      },
      {
        "from": [
          "St. Petersburg,russia",
          "St. Petersburg.Russia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Petersburg,russia"
      },
      {
        "from": [
          "Grand Pacific Hotel, Chicago, Il",
          "Grand Pacific Hotel Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Pacific Hotel, Chicago, Il"
      },
      {
        "from": [
          "Delmonicos New York,ny",
          "Delmonicos, New York,n.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos New York,ny"
      },
      {
        "from": [
          "Montreal Canada",
          "Montreal, Canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Montreal Canada"
      },
      {
        "from": [
          "Nassau, N.P. Bahamas",
          "Nassau, N.P., Bahamas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau, N.P. Bahamas"
      },
      {
        "from": [
          "Tampa, Fl",
          "Tampa Fl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa, Fl"
      },
      {
        "from": [
          "Manhattan Hotel, New York, Ny",
          "Hotel Manhattan, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Hotel, New York, Ny"
      },
      {
        "from": [
          "Union League Philadelphia Pa",
          "Union League, Philadelphia, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League Philadelphia Pa"
      },
      {
        "from": [
          "Narragansett Hotel, Providence Ri",
          "Narragansett Hotel, Providence, Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Narragansett Hotel, Providence Ri"
      },
      {
        "from": [
          "The Raleigh, Washington, Dc",
          "The Raleigh, Washington Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Raleigh, Washington, Dc"
      },
      {
        "from": [
          "Horticultural Hall, Philadelphia, Pa",
          "Horticultural Hall, Philadelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Horticultural Hall, Philadelphia, Pa"
      },
      {
        "from": [
          "Commercial Club, Portland, Or",
          "Portland Commercial Club, Portland, Or"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial Club, Portland, Or"
      },
      {
        "from": [
          "Boston, Ma",
          "Boston Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston, Ma"
      },
      {
        "from": [
          "The Wellington, Providence Ri",
          "Wellington, The, Providence, Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Wellington, Providence Ri"
      },
      {
        "from": [
          "Fla",
          "Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fla"
      },
      {
        "from": [
          "New York Athletic Club",
          "New York Athletic Club, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Athletic Club"
      },
      {
        "from": [
          "Tampa,fla.",
          "Tampa.Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa,fla."
      },
      {
        "from": [
          "Boston, Mass",
          "Boston, Mass."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston, Mass"
      },
      {
        "from": [
          "Hotel St. George, Nyack, Ny",
          "St. George Hotel, Nyack, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. George, Nyack, Ny"
      },
      {
        "from": [
          "En Route Aboard Ss Kobe Maru",
          "En Route Aboard Ss. Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss Kobe Maru"
      },
      {
        "from": [
          "Melbourne, Australia",
          "Melbourne Australia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Melbourne, Australia"
      },
      {
        "from": [
          "Delmonicos New York",
          "Delmonicos, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos New York"
      },
      {
        "from": [
          "Nos. 667 To 677 Broadway, Opposite Bond Street, Midway Between Battery And Central Park, New York Ny",
          "Nos. 667 To 677 Broadway, Opposite Bond Street, Midway Between Battery And Central Park, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nos. 667 To 677 Broadway, Opposite Bond Street, Midway Between Battery And Central Park, New York Ny"
      },
      {
        "from": [
          "U.S.M.S. New York",
          "Usms New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "U.S.M.S. New York"
      },
      {
        "from": [
          "Washington,d.C.",
          "Washington,dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Washington,d.C."
      },
      {
        "from": [
          "Copenhagen, Denmark",
          "Copenhagen Denmark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copenhagen, Denmark"
      },
      {
        "from": [
          "Ny",
          "N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ny"
      },
      {
        "from": [
          "Denver, Colo.",
          "Denver, Colo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Denver, Colo."
      },
      {
        "from": [
          "S.S. Nacoochee",
          "Ss Nacoochee"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Nacoochee"
      },
      {
        "from": [
          "Rms Oceanic",
          "R.M.S. Oceanic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rms Oceanic"
      },
      {
        "from": [
          "Argyle, The, Brooklyn, Ny",
          "The Argyle, Brooklyn, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Argyle, The, Brooklyn, Ny"
      },
      {
        "from": [
          "Chamberlins Washington,dc",
          "Chamberlins, Washington,d.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chamberlins Washington,dc"
      },
      {
        "from": [
          "Union League Club Ny",
          "Union League Club, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League Club Ny"
      },
      {
        "from": [
          "Hotel St. Denis, Ny",
          "St. Denis Hotel Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. Denis, Ny"
      },
      {
        "from": [
          "Tontine Hotel, New Haven, Ct",
          "New Tontine Hotel, New Haven Ct"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tontine Hotel, New Haven, Ct"
      },
      {
        "from": [
          "The Argyle",
          "The Argyle "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Argyle"
      },
      {
        "from": [
          "Manhattan Beach, Long Island Ny",
          "Manhattan Beach, Long Island, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Beach, Long Island Ny"
      },
      {
        "from": [
          "Germantown Pa",
          "Germantown, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Germantown Pa"
      },
      {
        "from": [
          "Ss Coptic",
          "S.S. Coptic"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Coptic"
      },
      {
        "from": [
          "Omaha Nebraska",
          "Omaha, Nebraska"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Omaha Nebraska"
      },
      {
        "from": [
          "New Willard Washington, Dc",
          "New Willard, Washington, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Willard Washington, Dc"
      },
      {
        "from": [
          "Chicago,ill.",
          "Chicago,ill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago,ill."
      },
      {
        "from": [
          "Cincinnati , Ohio",
          "Cincinnati, Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati , Ohio"
      },
      {
        "from": [
          "Brunswick,the,boston,mass",
          "Brunswick,the,bostonmass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brunswick,the,boston,mass"
      },
      {
        "from": [
          "Philadelphia,pa.",
          "Philadelphia,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia,pa."
      },
      {
        "from": [
          "Waldorfastoria Ny",
          "Waldorfastoria, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorfastoria Ny"
      },
      {
        "from": [
          "Ascot England",
          "Ascot, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ascot England"
      },
      {
        "from": [
          "Logan House, Altoona, Pa",
          "Logan House Altoona, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Logan House, Altoona, Pa"
      },
      {
        "from": [
          "Penn",
          "Penn."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Penn"
      },
      {
        "from": [
          "Narragansett Pier R.I.",
          "Narragansett Pier, Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Narragansett Pier R.I."
      },
      {
        "from": [
          "Union Club",
          "Union Club, "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Club"
      },
      {
        "from": [
          "Adelaide, Australia",
          "Adelaide Australia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adelaide, Australia"
      },
      {
        "from": [
          "Grand Hotel, Cincinnati Oh",
          "Grand Hotel, Cincinnati, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel, Cincinnati Oh"
      },
      {
        "from": [
          "Delmonicos,new York Ny",
          "Delmonicos,new York, N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos,new York Ny"
      },
      {
        "from": [
          "En Route S.S Vaderland",
          "En Route S.S. Vaderland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S Vaderland"
      },
      {
        "from": [
          "Academy Of Music Brooklyn, Ny",
          "Academy Of Music, Brooklyn, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Academy Of Music Brooklyn, Ny"
      },
      {
        "from": [
          "San Francisco,ca",
          "San Francisco,ca."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "San Francisco,ca"
      },
      {
        "from": [
          "St. Louis, Mo",
          "St. Louis Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Louis, Mo"
      },
      {
        "from": [
          "Fairmont Hotel San Francisco, Ca",
          "Fairmont Hotel, San Francisco, Ca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fairmont Hotel San Francisco, Ca"
      },
      {
        "from": [
          "Zermatt, Switzerland",
          "Zermatt Switzerland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Zermatt, Switzerland"
      },
      {
        "from": [
          "Park Row Bldg. Ny",
          "Park Row Bldg., Ny, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row Bldg. Ny"
      },
      {
        "from": [
          "St.Denis Hotel,ny",
          "St.Denis Hotelny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Denis Hotel,ny"
      },
      {
        "from": [
          "The Plaza",
          "Plaza, The"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Plaza"
      },
      {
        "from": [
          "Saratoga Springs, Ny",
          "Saratoga Springs, Ny."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saratoga Springs, Ny"
      },
      {
        "from": [
          "Auditorium",
          "Auditorium, "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium"
      },
      {
        "from": [
          "Hotel Iroquois,buffalo,n.Y.",
          "Hotel Iroquois,buffalo,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Iroquois,buffalo,n.Y."
      },
      {
        "from": [
          "Waldorfastoria, New York",
          "Waldorfastoria New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorfastoria, New York"
      },
      {
        "from": [
          "Hotel Continental Paris, France",
          "Hotel Continental, Paris, France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Continental Paris, France"
      },
      {
        "from": [
          "New York",
          "New York "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York"
      },
      {
        "from": [
          "R.M.S. Etruria",
          "Rms Etruria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Etruria"
      },
      {
        "from": [
          "Pawling, Ny",
          "Pawling Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pawling, Ny"
      },
      {
        "from": [
          "R.M.S.Rotterdam",
          "Rmsrotterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S.Rotterdam"
      },
      {
        "from": [
          "Buffalo, Ny",
          "Buffalo Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Buffalo, Ny"
      },
      {
        "from": [
          "Ss Kaiser Wilhelm Der Grosse",
          "S.S. Kaiser Wilhelm Der Grosse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Kaiser Wilhelm Der Grosse"
      },
      {
        "from": [
          "Ss City Of Para",
          "S.S. City Of Para"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss City Of Para"
      },
      {
        "from": [
          "En Route Aboard Above",
          "En Route Aboard Above "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Above"
      },
      {
        "from": [
          "Russell House, Detroit, Mi",
          "Russell House Detroit, Mi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Russell House, Detroit, Mi"
      },
      {
        "from": [
          "Youngs Hotel, Boston, Ma",
          "Youngs Hotel, Boston Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Youngs Hotel, Boston, Ma"
      },
      {
        "from": [
          "Bar Harbor Me",
          "Bar Harbor, Me"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bar Harbor Me"
      },
      {
        "from": [
          "Ss Doric",
          "S.S. Doric"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Doric"
      },
      {
        "from": [
          "Delmonicos,new York",
          "Delmonicos.New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos,new York"
      },
      {
        "from": [
          "S.S. Zealandia",
          "Ss Zealandia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Zealandia"
      },
      {
        "from": [
          "En Route S.S. Zeeland",
          "En Route S.S Zeeland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S. Zeeland"
      },
      {
        "from": [
          "The Arlington,wash.Dc",
          "The Arlington,wash.Dc."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Arlington,wash.Dc"
      },
      {
        "from": [
          "Miramar",
          "Miramar "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miramar"
      },
      {
        "from": [
          "57 Broad Street, Ny",
          "57 Broad Street  Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 Broad Street, Ny"
      },
      {
        "from": [
          "Cincinnati, Oh",
          "Cincinnati Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati, Oh"
      },
      {
        "from": [
          "En Route Aboard Ss. Kasuga",
          "En Route Aboard Ss Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss. Kasuga"
      },
      {
        "from": [
          "Minneapolis Club Minneapolis, Mn",
          "Minneapolis Club, Minneapolis, Mn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Minneapolis Club Minneapolis, Mn"
      },
      {
        "from": [
          "En Route Aboard S.S. Friesland",
          "En Route Aboard Ss Friesland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. Friesland"
      },
      {
        "from": [
          "Atlantic City, Nj",
          "Atlantic City, N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Atlantic City, Nj"
      },
      {
        "from": [
          "Syracuse Ny",
          "Syracuse, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Syracuse Ny"
      },
      {
        "from": [
          "Adirondacks, Ny",
          "Adirondacks Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Adirondacks, Ny"
      },
      {
        "from": [
          "Franconia Notch Nh",
          "Franconia Notch Nh,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Franconia Notch Nh"
      },
      {
        "from": [
          "139 Eighth Street Bet. Broadway And 4th Ave., New York Ny",
          "139 Eighth Street, Bet. Broadway And 4th Ave., New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "139 Eighth Street Bet. Broadway And 4th Ave., New York Ny"
      },
      {
        "from": [
          "Brooklyn, Ny",
          "Brooklyn Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brooklyn, Ny"
      },
      {
        "from": [
          "Windsor Hotel,ny",
          "Windsor Hotelny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Windsor Hotel,ny"
      },
      {
        "from": [
          "Naples Italy",
          "Naples, Italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Naples Italy"
      },
      {
        "from": [
          "Krueger Auditorium Newark Nj",
          "Krueger Auditorium, Newark, Nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Krueger Auditorium Newark Nj"
      },
      {
        "from": [
          "R.M.S. Lucania",
          "Rms Lucania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Lucania"
      },
      {
        "from": [
          "Rome, Italy",
          "Rome Italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rome, Italy"
      },
      {
        "from": [
          "St. Denis Hotel New York",
          "St. Denis Hotel, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel New York"
      },
      {
        "from": [
          "Terrace Garden",
          "Terrace Garden,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Terrace Garden"
      },
      {
        "from": [
          "66th St. & Bway Ny",
          "66th St & Bway, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66th St. & Bway Ny"
      },
      {
        "from": [
          "Hotel Marlborough, New York, Ny",
          "Marlborough Hotel, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Marlborough, New York, Ny"
      },
      {
        "from": [
          "66th St And Broadway,new York,ny",
          "66th St. And Broadwaynew York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66th St And Broadway,new York,ny"
      },
      {
        "from": [
          "St. Charles Hotel, New Orleans La",
          "St. Charles Hotel, New Orleans, La"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel, New Orleans La"
      },
      {
        "from": [
          "Ellicott Club, Buffalo, Ny",
          "Ellicott Club Buffalo Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ellicott Club, Buffalo, Ny"
      },
      {
        "from": [
          "Campobello Island",
          "Campobello Island,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Campobello Island"
      },
      {
        "from": [
          "Hotel Bellevue",
          "Bellevue Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Bellevue"
      },
      {
        "from": [
          "Cecil Hotel, London, England",
          "Hotel Cecil, London, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cecil Hotel, London, England"
      },
      {
        "from": [
          "Ss Kasuga",
          "S.S. Kasuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Kasuga"
      },
      {
        "from": [
          "Nashville, Tenn",
          "Nashville, Tenn."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nashville, Tenn"
      },
      {
        "from": [
          "Hotel Willard, Washington, Dc",
          "Willard Hotel, Washington, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Willard, Washington, Dc"
      },
      {
        "from": [
          "The Waldorf Astoria",
          "Waldorf Astoria, The"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorf Astoria"
      },
      {
        "from": [
          "Ss Westernland, En Route",
          "Ss Westernland  En Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Westernland, En Route"
      },
      {
        "from": [
          "Narragansett Pier,r.I.",
          "Narragansett Pier,ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Narragansett Pier,r.I."
      },
      {
        "from": [
          "Cleveland, Oh",
          "Cleveland Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland, Oh"
      },
      {
        "from": [
          "156 Second Avenue Ny",
          "156 Second Avenue, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "156 Second Avenue Ny"
      },
      {
        "from": [
          "Taylors Hotel, Jersey City Nj",
          "Taylors Hotel, Jersey City, N.J."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Taylors Hotel, Jersey City Nj"
      },
      {
        "from": [
          "Whitehall Rooms, The Hotel Metropole, London England",
          "Whitehall Rooms, The Hotel Metropole, London, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Whitehall Rooms, The Hotel Metropole, London England"
      },
      {
        "from": [
          "Chicago Beach Hotel Chicago, Il",
          "Chicago Beach Hotel, Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago Beach Hotel Chicago, Il"
      },
      {
        "from": [
          "Park Row Building Ny",
          "Park Row Building, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row Building Ny"
      },
      {
        "from": [
          "London,england",
          "London,england "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "London,england"
      },
      {
        "from": [
          "Grand Pacific Hotel",
          "Grand Pacific Hotel,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Pacific Hotel"
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "St. Louis, Mo",
          "St.Louis,mo",
          "St Louis,mo",
          "St.Louis, Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Louis, Mo"
      },
      {
        "from": [
          "Planters Hotel, St. Louis, Mo",
          "Planters Hotel, St. Louis,mo",
          "Planters Hotel, St.Louis, Mo",
          "Planters Hotel, St.Louis,mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Planters Hotel, St. Louis, Mo"
      },
      {
        "from": [
          "Delmonicos, New York, Ny",
          "Delmonicos,new York,ny",
          "Delmonicos New York,ny",
          "Delmonicos,new York Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos, New York, Ny"
      },
      {
        "from": [
          "Hotel Iroquois, Buffalo, Ny",
          "Hotel Iroquois, Buffalo,ny",
          "Hotel Iroquois,buffalo,n.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Iroquois, Buffalo, Ny"
      },
      {
        "from": [
          "Waldorfastoria, New York, Ny",
          "Waldorf Astoria, New York, Ny",
          "Waldorf Astoria,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorfastoria, New York, Ny"
      },
      {
        "from": [
          "Nassau, N.P.",
          "Nassau,n.P.",
          "Nassau, N. P.,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau, N.P."
      },
      {
        "from": [
          "Miami Biscayne Bay,fla.",
          "Miami Biscayne Bay, Fla.",
          "Miami,biscayne Bay,fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miami Biscayne Bay,fla."
      },
      {
        "from": [
          "Waldorfastoria, The, New York, Ny",
          "Waldorf Astoria,the, New York, Ny",
          "Waldorfastoria,the,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorfastoria, The, New York, Ny"
      },
      {
        "from": [
          "Putinbay Island, Oh",
          "Put In Bay Island, Oh",
          "Putinbayisland, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Putinbay Island, Oh"
      },
      {
        "from": [
          "En Route, Expresssteamer Furst Bismarck",
          "Enroute Express Steamer Furst Bismarck",
          "Enroute Expresssteamer Furst Bismarck"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route, Expresssteamer Furst Bismarck"
      },
      {
        "from": [
          "St.Augustine,fla.",
          "St. Augustine, Fla",
          "St.Augustine, Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Augustine,fla."
      },
      {
        "from": [
          "Southern Hotel, St. Louis, Mo",
          "Southern Hotel,st. Louis,mo.",
          "Southern Hotel,st.Louis,mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Southern Hotel, St. Louis, Mo"
      },
      {
        "from": [
          "Narragansett Pier R.I.",
          "Narragansett Pier,r.I.",
          "Naragansett Pier, Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Narragansett Pier R.I."
      },
      {
        "from": [
          "Faneuil Hall, Boston, Mass",
          "Faneuil Hall, Boston,mass",
          "Faneuil Hall,boston,mass."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Faneuil Hall, Boston, Mass"
      },
      {
        "from": [
          "Waldorfastoria,ny",
          "Waldorf Astoria, Ny",
          "Waldorfastoria Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorfastoria,ny"
      },
      {
        "from": [
          "Chicago,ill.",
          "Chicago, Ill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago,ill."
      },
      {
        "from": [
          "Hoboken, Nj",
          "Hoboken,nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hoboken, Nj"
      },
      {
        "from": [
          "57 Broad Street, New York, Ny",
          "57 Broad Street,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 Broad Street, New York, Ny"
      },
      {
        "from": [
          "Copenhagen, Denmark",
          "Copenhagen,denmark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copenhagen, Denmark"
      },
      {
        "from": [
          "En Route  S.S.H.H.Meier",
          "En Route S.S. H.H.Meier"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route  S.S.H.H.Meier"
      },
      {
        "from": [
          "Chicago Beach Hotel Chicago, Il",
          "Chicago Beach Hotel, Chicago.Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago Beach Hotel Chicago, Il"
      },
      {
        "from": [
          "Buckingham Palace,  London,england",
          "Buckingham Palace, London, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Buckingham Palace,  London,england"
      },
      {
        "from": [
          "En Route Aboard S.S.Zeeland",
          "En Route Aboard S.S. Zeeland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S.Zeeland"
      },
      {
        "from": [
          "St. Nicholas Hotel, St.Louis, Mo",
          "St.Nicholas Hotel,st. Louis,mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Nicholas Hotel, St.Louis, Mo"
      },
      {
        "from": [
          "En Route Aboard Schnelldampfer Express Steamer Auguste Victoria",
          "En Route Aboard Schnelldampfer Express Steamer Augustevictoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Schnelldampfer Express Steamer Auguste Victoria"
      },
      {
        "from": [
          "White Mountains, Nh",
          "White Mountains,n.H."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "White Mountains, Nh"
      },
      {
        "from": [
          "Parker House Boston,mass ",
          "Parker House,boston,mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House Boston,mass "
      },
      {
        "from": [
          "Cincinnati , Ohio",
          "Cincinnati,ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati , Ohio"
      },
      {
        "from": [
          "The Waldorfastoria",
          "The Waldorf Astoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorfastoria"
      },
      {
        "from": [
          "New Orleans, La",
          "New Orleans,la"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Orleans, La"
      },
      {
        "from": [
          "St. George Hotel",
          "St.George Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. George Hotel"
      },
      {
        "from": [
          "En Route Aboard S.S. Zealandia",
          "En Route Aboard S.S.Zealandia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. Zealandia"
      },
      {
        "from": [
          "Grand Hotel, London, England",
          "Grand Hotel,london, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel, London, England"
      },
      {
        "from": [
          "En Route Aboard Dampfer Friedrich Der Grosse",
          "En Route Aboard Dampfer Friedrich Der Grosser"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Dampfer Friedrich Der Grosse"
      },
      {
        "from": [
          "Cleveland,ohio",
          "Cleveland, Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland,ohio"
      },
      {
        "from": [
          "R.M.S. Campania",
          "R.M.S.Campania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Campania"
      },
      {
        "from": [
          "Roanoke, Va",
          "Roanoke,va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Roanoke, Va"
      },
      {
        "from": [
          "Coronada Beach, Ca.",
          "Coronada Beach,ca."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coronada Beach, Ca."
      },
      {
        "from": [
          "Hotel St. Denis, Ny",
          "Hotel St. Denis,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. Denis, Ny"
      },
      {
        "from": [
          "Ocean House, Newport, Ri",
          "Ocean House,newport,r.I."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ocean House, Newport, Ri"
      },
      {
        "from": [
          "Mercantile Club St Louis, Mo",
          "Mercantile Club, St.Louis Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mercantile Club St Louis, Mo"
      },
      {
        "from": [
          "Hotel St George,nyackonhudson,ny",
          "Hotel St.George,nyackonhudson,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St George,nyackonhudson,ny"
      },
      {
        "from": [
          "Morellos, New York, Ny",
          "Morellos,new York, N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Morellos, New York, Ny"
      },
      {
        "from": [
          "Old Point Comfort, Va",
          "Old Point Comfort,va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Old Point Comfort, Va"
      },
      {
        "from": [
          "Palace Hotel, San Francisco, Ca",
          "Palace Hotel, San Francisco, Cal"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel, San Francisco, Ca"
      },
      {
        "from": [
          "Syracuse Ny",
          "Syracuse,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Syracuse Ny"
      },
      {
        "from": [
          "The Arlington, Washington, D.C.",
          "The Arlington, Washington,dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Arlington, Washington, D.C."
      },
      {
        "from": [
          "London, England",
          "London,england"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "London, England"
      },
      {
        "from": [
          "Luzern, Switzerland",
          "Luzern,switzerland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Luzern, Switzerland"
      },
      {
        "from": [
          "Portland, Or",
          "Portland,or."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland, Or"
      },
      {
        "from": [
          "Hotel Cochran, Washington Dc",
          "Hotel Cochran, Washington,d.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Cochran, Washington Dc"
      },
      {
        "from": [
          "South Poland, Me",
          "South Poland,me."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "South Poland, Me"
      },
      {
        "from": [
          "Quebec, Canada",
          "Quebec,canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Quebec, Canada"
      },
      {
        "from": [
          "Nassau, N.P. Bahamas",
          "Nassau,n.P.Bahamas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau, N.P. Bahamas"
      },
      {
        "from": [
          "En Route Aboard Ss Kobe Maru",
          "En Route Aboard Ss.Kobe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss Kobe Maru"
      },
      {
        "from": [
          "San Francisco, Ca",
          "San Francisco,ca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "San Francisco, Ca"
      },
      {
        "from": [
          "Hotel Brunswick Ny",
          "Hotel Brunswick,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Brunswick Ny"
      },
      {
        "from": [
          "Park Row Bldg. Ny",
          "Park Row Bldg.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row Bldg. Ny"
      },
      {
        "from": [
          "Hoffman House New York, Ny",
          "Hoffman House,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hoffman House New York, Ny"
      },
      {
        "from": [
          "Chattanooga, Tn",
          "Chattanooga,tn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chattanooga, Tn"
      },
      {
        "from": [
          "En Route Steamer Furst Bismarck",
          "Enroute Steamer Furst Bismarck"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Steamer Furst Bismarck"
      },
      {
        "from": [
          "Aboard U.S.M.S. St. Louis",
          "Aboard U.S.M.S.St. Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard U.S.M.S. St. Louis"
      },
      {
        "from": [
          "Waco, Tx",
          "Waco,tx"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waco, Tx"
      },
      {
        "from": [
          "Clinton County, Ny",
          "Clinton County,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clinton County, Ny"
      },
      {
        "from": [
          "Delmonicos New York",
          "Delmonicos,new York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos New York"
      },
      {
        "from": [
          "Toronto, Canada",
          "Toronto,canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Toronto, Canada"
      },
      {
        "from": [
          "R.M.S. Etruria",
          "R. M. S. Etruria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Etruria"
      },
      {
        "from": [
          "Los Angeles,ca",
          "Los Angeles, Ca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Los Angeles,ca"
      },
      {
        "from": [
          "Waldorfastoria, New York",
          "Waldorf Astoria, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorfastoria, New York"
      },
      {
        "from": [
          "Amsterdam, Holland ",
          "Amsterdam,holland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Amsterdam, Holland "
      },
      {
        "from": [
          "Argyle, The, Brooklyn, Ny",
          "Argyle,the,brooklyn,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Argyle, The, Brooklyn, Ny"
      },
      {
        "from": [
          "Baltimore, Md",
          "Baltimore,md"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baltimore, Md"
      },
      {
        "from": [
          "Helena, Mt",
          "Helena,mt"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Helena, Mt"
      },
      {
        "from": [
          "St. Augustine, Fl",
          "St.Augustine,fl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Augustine, Fl"
      },
      {
        "from": [
          "Union Square, Ny",
          "Union Square,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Square, Ny"
      },
      {
        "from": [
          "Philadelphia, Pa",
          "Philadelphia,pa."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia, Pa"
      },
      {
        "from": [
          "En Route Steamer Auguste Victoria",
          "Enroute Steamer Auguste Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Steamer Auguste Victoria"
      },
      {
        "from": [
          "Waldorfastoria Hotel, New York, Ny",
          "Waldorf Astoria Hotel, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorfastoria Hotel, New York, Ny"
      },
      {
        "from": [
          "En Route Aboard S.S. Southwark",
          "Enroute Aboard S.S. Southwark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. Southwark"
      },
      {
        "from": [
          "New York, Ny",
          "New York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York, Ny"
      },
      {
        "from": [
          "137 E. Madison St. Chicago, Ill.",
          "137 E. Madison St.,chicago,ill."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "137 E. Madison St. Chicago, Ill."
      },
      {
        "from": [
          "Broadway, Ny",
          "Broadway,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broadway, Ny"
      },
      {
        "from": [
          "St.Louis Club, St.Louis,mo.",
          "St. Louis Club, St. Louis, Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Louis Club, St.Louis,mo."
      },
      {
        "from": [
          "57 Broad St. Ny",
          "57 Broad St.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 Broad St. Ny"
      },
      {
        "from": [
          "Chattanooga,tenn.",
          "Chattanooga, Tenn."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chattanooga,tenn."
      },
      {
        "from": [
          "Boston, Ma",
          "Boston,ma."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston, Ma"
      },
      {
        "from": [
          "Steamship Kaiser Wilhelm Der Grosse",
          "Steamship Kaiser Wilhelm Der Grosser"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Steamship Kaiser Wilhelm Der Grosse"
      },
      {
        "from": [
          "Windsor Hotel,ny",
          "Windsor Hotel, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Windsor Hotel,ny"
      },
      {
        "from": [
          "Murray Hill Hotel,ny",
          "Murray Hill Hotel Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Murray Hill Hotel,ny"
      },
      {
        "from": [
          "Cecil Hotel, London, England",
          "Cecil Hotel,london,england"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cecil Hotel, London, England"
      },
      {
        "from": [
          "Springfield,mass.",
          "Springfield, Mass."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Springfield,mass."
      },
      {
        "from": [
          "Albany, Ny",
          "Albany,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albany, Ny"
      },
      {
        "from": [
          "Denver, Colo.",
          "Denver,colo."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Denver, Colo."
      },
      {
        "from": [
          "Auditorium, Chicago, Il",
          "Auditorium,chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium, Chicago, Il"
      },
      {
        "from": [
          "Virginia Beach, Va",
          "Virginia Beach,va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Virginia Beach, Va"
      },
      {
        "from": [
          "Delmonicos Ny",
          "Delmonicos,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos Ny"
      },
      {
        "from": [
          "Palace Hotel, Denver, Col",
          "Palace Hoteldenver, Col"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel, Denver, Col"
      },
      {
        "from": [
          "St. Petersburg,russia",
          "St. Petersburg Russia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Petersburg,russia"
      },
      {
        "from": [
          "Columbus, Ohio",
          "Columbus,ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Columbus, Ohio"
      },
      {
        "from": [
          "Delmonico, New York, Ny",
          "Delmonico,new York Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico, New York, Ny"
      },
      {
        "from": [
          "Naples Italy",
          "Naples,italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Naples Italy"
      },
      {
        "from": [
          "Union League Philadelphia Pa",
          "Union League,philadelphia,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League Philadelphia Pa"
      },
      {
        "from": [
          "Hoffman House, Madison Square, Ny",
          "Hoffman House,madison Square,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hoffman House, Madison Square, Ny"
      },
      {
        "from": [
          "Tremont Temple, Boston, Mass.",
          "Tremont Temple,boston Mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tremont Temple, Boston, Mass."
      },
      {
        "from": [
          "Deeming Hall, Ithaca, Ny",
          "Deeming Hall,ithaca,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Deeming Hall, Ithaca, Ny"
      },
      {
        "from": [
          "Lincoln Club Brooklyn, Ny",
          "Lincoln Club,brooklyn,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lincoln Club Brooklyn, Ny"
      },
      {
        "from": [
          "Washington, Dc",
          "Washington,d.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Washington, Dc"
      },
      {
        "from": [
          "Tokyo, Japan",
          "Tokyo,japan"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tokyo, Japan"
      },
      {
        "from": [
          "En Route Aboard Ss.Kohe Maru",
          "En Route Aboard Ss. Kohe Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss.Kohe Maru"
      },
      {
        "from": [
          "Brooklyn, Ny",
          "Brooklyn,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brooklyn, Ny"
      },
      {
        "from": [
          "Fargo, North Dakota",
          "Fargo,north Dakota"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fargo, North Dakota"
      },
      {
        "from": [
          "Steamship North West",
          "Steamship Northwest"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Steamship North West"
      },
      {
        "from": [
          "374 Fifth Avenue, Ny, Ny",
          "374 Fifth Avenue, Ny,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "374 Fifth Avenue, Ny, Ny"
      },
      {
        "from": [
          "Portland, Me",
          "Portland,me"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland, Me"
      },
      {
        "from": [
          "Bohemian Club, San Francisco, Ca",
          "Bohemian Club, San Francisco,ca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bohemian Club, San Francisco, Ca"
      },
      {
        "from": [
          "St. Nicholas Hotel, Cincinnati, Oh",
          "St.Nicholas Hotel, Cincinnati, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Nicholas Hotel, Cincinnati, Oh"
      },
      {
        "from": [
          "Bergen, Norway",
          "Bergen,norway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bergen, Norway"
      },
      {
        "from": [
          "The Cochran, Washington, Dc",
          "The Cochran, Washington,d.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Cochran, Washington, Dc"
      },
      {
        "from": [
          "Arcanum Hall,elizabeth Nj",
          "Arcanum Hall,elizabeth,nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Arcanum Hall,elizabeth Nj"
      },
      {
        "from": [
          "En Route Aboard Dampfer H.H. Meier",
          "En Route Aboard Dampfer H.H.Meier"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Dampfer H.H. Meier"
      },
      {
        "from": [
          "Youngs Hotel, Boston, Ma",
          "Youngs Hotel,boston,ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Youngs Hotel, Boston, Ma"
      },
      {
        "from": [
          "Atlantic City, Nj",
          "Atlantic City,nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Atlantic City, Nj"
      },
      {
        "from": [
          "Berlin, Germany",
          "Berlin,germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Berlin, Germany"
      },
      {
        "from": [
          "The Walnut Rooms, The Grand Hotel, Trafalgar Square, London, England",
          "The Walnut Rooms The Grand Hotel, Trafalgar Square, London,england"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Walnut Rooms, The Grand Hotel, Trafalgar Square, London, England"
      },
      {
        "from": [
          "Tampa, Fl",
          "Tampa,fl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa, Fl"
      },
      {
        "from": [
          "En Route Aboard Ss. Kinshin Maru",
          "En Route Aboard Ss.Kinshin Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss. Kinshin Maru"
      },
      {
        "from": [
          "Altoona, Pa",
          "Altoona,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Altoona, Pa"
      },
      {
        "from": [
          "Grand Hotel, Melbourne",
          "Grand Hotel,melbourne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel, Melbourne"
      },
      {
        "from": [
          "Saratoga Springs, Ny",
          "Saratoga Springs,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Saratoga Springs, Ny"
      },
      {
        "from": [
          "Aboard S S Vaderland",
          "Aboard S.S. Vaderland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard S S Vaderland"
      },
      {
        "from": [
          "Miami Biscayne Bay, Fl",
          "Miami Biscayne Bay,fl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miami Biscayne Bay, Fl"
      },
      {
        "from": [
          "Dwlmonicos Ny",
          "Dwlmonicos,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dwlmonicos Ny"
      },
      {
        "from": [
          "West End Hotel, New Orleans, La",
          "West End Hotel, New Orleans,la."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "West End Hotel, New Orleans, La"
      },
      {
        "from": [
          "Shanleys, Ny",
          "Shanleys,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shanleys, Ny"
      },
      {
        "from": [
          "Palais Royal  Christiania,norway",
          "Palais Royal, Christiania, Norway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palais Royal  Christiania,norway"
      },
      {
        "from": [
          "Manila, P.I.",
          "Manila,p.I."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manila, P.I."
      },
      {
        "from": [
          "Albany Club Albany,ny",
          "Albany Club, Albany, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albany Club Albany,ny"
      },
      {
        "from": [
          "Pinehurst,n.C.",
          "Pinehurst, Nc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pinehurst,n.C."
      },
      {
        "from": [
          "Hotel St. George, Nyack, Ny",
          "Hotel St. George,nyack,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. George, Nyack, Ny"
      },
      {
        "from": [
          "Buffalo, Ny",
          "Buffalo,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Buffalo, Ny"
      },
      {
        "from": [
          "Rome, Italy",
          "Rome,italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rome, Italy"
      },
      {
        "from": [
          "383 6th Ave.,1212 Bway.,& 1476 Bway. Ny",
          "383 6th Ave.,1476 Bway.,1212 Bway., Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "383 6th Ave.,1212 Bway.,& 1476 Bway. Ny"
      },
      {
        "from": [
          "Cincinnati, Oh",
          "Cincinnati,oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati, Oh"
      },
      {
        "from": [
          "Cataract House, Niagara Falls, Ny",
          "Cataract House,niagara Falls,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cataract House, Niagara Falls, Ny"
      },
      {
        "from": [
          "Providence, Ri",
          "Providence,ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Providence, Ri"
      },
      {
        "from": [
          "En Route S.S.Vaderland",
          "En Route S.S Vaderland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S.Vaderland"
      },
      {
        "from": [
          "Tampa, Florida",
          "Tampa,florida"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa, Florida"
      },
      {
        "from": [
          "En Route S.S.Barbarossa",
          "En Route S.S Barbarossa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S.Barbarossa"
      },
      {
        "from": [
          "Melbourne, Australia",
          "Melbourne,australia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Melbourne, Australia"
      },
      {
        "from": [
          "Montreal Canada",
          "Montreal,canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Montreal Canada"
      },
      {
        "from": [
          "Sixtysixth Street & Broadway, New York, Ny",
          "Sixty Sixth Street & Broadway, New York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sixtysixth Street & Broadway, New York, Ny"
      },
      {
        "from": [
          "Rectors ,ny",
          "Rectors,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rectors ,ny"
      },
      {
        "from": [
          "Long Beach, L.I, Ny",
          "Long Beach,l.I.,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Long Beach, L.I, Ny"
      },
      {
        "from": [
          "Belmar,nj",
          "Belmar, Nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Belmar,nj"
      },
      {
        "from": [
          "En Route S.S. Zeeland",
          "En Route S.S.Zeeland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S. Zeeland"
      },
      {
        "from": [
          "Hamburg, Germany",
          "Hamburg,germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hamburg, Germany"
      },
      {
        "from": [
          "Baker City, Oregon",
          "Baker City,oregon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baker City, Oregon"
      },
      {
        "from": [
          "Paris,france",
          "Paris, France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paris,france"
      },
      {
        "from": [
          "St. Louis",
          "St.Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Louis"
      },
      {
        "from": [
          "Niagara Falls, Ny",
          "Niagara Falls,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Niagara Falls, Ny"
      },
      {
        "from": [
          "Hotel Victory, Putinbayisland, Lake Erie, Oh.",
          "Hotel Victory,putinbay Island,lake Erie,oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Victory, Putinbayisland, Lake Erie, Oh."
      },
      {
        "from": [
          "Park Row Building New York,ny",
          "Park Row Building, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row Building New York,ny"
      },
      {
        "from": [
          "R.M.S. Rotterdam",
          "R.M.S.Rotterdam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Rotterdam"
      },
      {
        "from": [
          "Delmonico,ny",
          "Delmonico Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico,ny"
      },
      {
        "from": [
          "New York City, Ny",
          "New York City,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York City, Ny"
      },
      {
        "from": [
          "Union Square, New York, Ny",
          "Union Square,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Square, New York, Ny"
      },
      {
        "from": [
          "The Bourse, Philadelphia Pa",
          "The Bourse,philadelphia,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Bourse, Philadelphia Pa"
      },
      {
        "from": [
          "Parker House, Boston, Ma",
          "Parker House,boston,ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House, Boston, Ma"
      },
      {
        "from": [
          "117 West 34th Street,new York,ny",
          "117west 34th Street,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "117 West 34th Street,new York,ny"
      },
      {
        "from": [
          "Palm Beach, Fl",
          "Palm Beach,fl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palm Beach, Fl"
      },
      {
        "from": [
          "Hotel Savoy, Ny",
          "Hotel Savoy,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy, Ny"
      },
      {
        "from": [
          "Krueger Auditorium Newark Nj",
          "Krueger Auditorium,newarknj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Krueger Auditorium Newark Nj"
      },
      {
        "from": [
          "Ss Westernland",
          "S.S.Westernland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Westernland"
      },
      {
        "from": [
          "Cleveland, Oh",
          "Cleveland,oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland, Oh"
      },
      {
        "from": [
          "En Route Aboard S.S. Westernland",
          "Enroute Aboard S.S. Westernland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard S.S. Westernland"
      },
      {
        "from": [
          "Putinbayisland, Lake Erie, Oh",
          "Putinbay Island, Lake Erie, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Putinbayisland, Lake Erie, Oh"
      },
      {
        "from": [
          "Munich, Germany",
          "Munich,germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Munich, Germany"
      },
      {
        "from": [
          "Boston,mass",
          "Boston, Mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston,mass"
      },
      {
        "from": [
          "Waldorf Ny",
          "Waldorfny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorf Ny"
      },
      {
        "from": [
          "Revere House, Boston,mass",
          "Revere House,boston,mass."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Revere House, Boston,mass"
      },
      {
        "from": [
          "Milwaukee, Wi",
          "Milwaukee,wi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Milwaukee, Wi"
      },
      {
        "from": [
          "Auditorium Hotel, Chicago, Il",
          "Auditorium Hotel,chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium Hotel, Chicago, Il"
      },
      {
        "from": [
          "Nassau,bahamas",
          "Nassau, Bahamas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nassau,bahamas"
      },
      {
        "from": [
          "Havana, Cuba",
          "Havana,cuba"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Havana, Cuba"
      },
      {
        "from": [
          "Ellicott Square, Buffalo, Ny",
          "Ellicott Square,buffalo,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ellicott Square, Buffalo, Ny"
      },
      {
        "from": [
          "En Route Aboard Express Steamer Auguste Victoria",
          "Enroute Aboard Expresssteamer Auguste Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Express Steamer Auguste Victoria"
      },
      {
        "from": [
          "Ellicott Club, Buffalo, Ny",
          "Ellicott Club,buffalo,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ellicott Club, Buffalo, Ny"
      },
      {
        "from": [
          "Chicago, Il",
          "Chicago,il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Il"
      },
      {
        "from": [
          "Hotel Manhattan, Ny",
          "Hotel Manhattan,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan, Ny"
      },
      {
        "from": [
          "Queen City Club, Cincinnati ,ohio",
          "Queen City Club, Cincinnati,ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Queen City Club, Cincinnati ,ohio"
      },
      {
        "from": [
          "Hotel Vendome, Boston, Ma",
          "Hotel Vendome,boston.Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome, Boston, Ma"
      },
      {
        "from": [
          "Asheville,nc",
          "Asheville, Nc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Asheville,nc"
      },
      {
        "from": [
          "Logan House, Altoona, Pa",
          "Logan House,altoona,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Logan House, Altoona, Pa"
      },
      {
        "from": [
          "Malone, Ny",
          "Malone,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Malone, Ny"
      },
      {
        "from": [
          "Hotel Vendome Boston, Mass",
          "Hotel Vendome, Boston,mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome Boston, Mass"
      },
      {
        "from": [
          "Fargo, Nd",
          "Fargo,nd"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fargo, Nd"
      },
      {
        "from": [
          "Magdeburg, Germany",
          "Magdeburg,germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Magdeburg, Germany"
      },
      {
        "from": [
          "Hotel Walton,philadelphia,pa",
          "Hotel Walton, Philadelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Walton,philadelphia,pa"
      },
      {
        "from": [
          "Watson House, Bablon, L.I., N.Y.",
          "Watson House,bablon, L.I. N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Watson House, Bablon, L.I., N.Y."
      },
      {
        "from": [
          "Mobile Al",
          "Mobile,al."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mobile Al"
      },
      {
        "from": [
          "Tampa,fla.",
          "Tampa, Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa,fla."
      },
      {
        "from": [
          "American Inn, Portland Or",
          "American Inn, Portland,or"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "American Inn, Portland Or"
      },
      {
        "from": [
          "Lake George,ny",
          "Lake George, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lake George,ny"
      },
      {
        "from": [
          "En Route",
          "Enroute"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route"
      },
      {
        "from": [
          "Whitehall Rooms, The Hotel Metropole, London England",
          "Whitehall Rooms,the Hotel Metropole, London,england"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Whitehall Rooms, The Hotel Metropole, London England"
      },
      {
        "from": [
          "St. Charles Hotel, New Orleans La",
          "St. Charles Hotel,new Orleans,la"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel, New Orleans La"
      },
      {
        "from": [
          "Parker House, Mass",
          "Parker House,mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House, Mass"
      },
      {
        "from": [
          "Brunswick Me",
          "Brunswick,me."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brunswick Me"
      },
      {
        "from": [
          "Colorado Springs, Co",
          "Colorado Springs,colo."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colorado Springs, Co"
      },
      {
        "from": [
          "Faneuil Hall, Boston, Ma",
          "Faneuil Hall,boston,ma."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Faneuil Hall, Boston, Ma"
      },
      {
        "from": [
          "Detroit, Mi",
          "Detroit,mi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Detroit, Mi"
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "En Route Aboard Ss. Kasuga",
          "En Route Aboard Ss Hong Kong Maru",
          "En Route Aboard Sonoma",
          "En Route Aboard Ss Kobe Maru",
          "En Route Aboard Ss. Kamakura Maru",
          "En Route Aboard S.S. Zealandia",
          "En Route Aboard Ss.K0be Maru",
          "En Route Aboard S.S. Westernland",
          "En Route Aboard S.S.Zeeland",
          "En Route Aboard Ss Friedrich Der Grosse",
          "En Route Aboard S.S. Friesland",
          "En Route Aboard S.S. Doric",
          "En Route Aboard City Of Para",
          "En Route Aboard S.S. Coptic",
          "En Route Aboard Scnelldampfer Express Steamer Auguste Victoria",
          "En Route Aboard S.S. Southwark",
          "En Route Aboard S.S.Vaderland",
          "En Route Aboard Ss.Kohe Maru",
          "En Route Aboard Sierra",
          "En Route Aboard Ss Kasuga Maru",
          "En Route Aboard Ss Sierra",
          "En Route Aboard Ss Ventura",
          "En Route Aboard S.S. Kobe Waru",
          "En Route Aboard Ss. Barbarossa",
          "En Route Aboard Ss. Kasufa",
          "En Route Aboard Ss. Kinshin Maru",
          "En Route Aboard City Of Rio De Janeiro",
          "En Route Aboard S.S. Rosetta Maru",
          "En Route Aboard S.S.Trinidad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss. Kasuga"
      },
      {
        "from": [
          "Schnelldampfer Auguste Victoria",
          "Schnelldampfer Hohenzollern",
          "Schnelldampfer Express Steamer August Victoria",
          "Schnelldampfer Deutschland Commodore Albers",
          "Schnelldampfer Furst Bismarck",
          "Schnelldampfer Daiser Wilhelm Der Grosse",
          "Schnelldampfer Victoria Luise",
          "Schnelldampfer Columbia",
          "Schnelldampfer Kaiser Wilhelm Der Grosse",
          "Schnelldampfers August Victoria",
          "Shnelldampfer Auguste Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schnelldampfer Auguste Victoria"
      },
      {
        "from": [
          "Waldorfastoria, New York",
          "Waldorfastoria",
          "Waldorfastoria,ny",
          "Waldorfastoria Hotel, New York, Ny",
          "Waldorfastoria, New York City",
          "Waldorfastoria, New York, Ny",
          "Waldorfastoria, The, New York, Ny",
          "Waldorfastoria Hotel",
          "Waldorf Astoria, The, Ny,ny",
          "Waldorfastoria Hotel, The, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorfastoria, New York"
      },
      {
        "from": [
          "117 West 34th Street,new York,ny",
          "236 West 116th Street, New York",
          "108110 West 38th Street, New York, Ny",
          "16 East 16th Street, New York",
          "32 West 28th Street And 551 West Broadway, Half Block From Bleecker L Station, New York, Ny",
          "323 West 57th Street, New York, N.Y.",
          "48 East 14th Street, Union Square, Ny",
          "48 East 14th Street,new York,ny",
          "50 West 17th Street, Nyc",
          "5961 West 24th Street, New York Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "117 West 34th Street,new York,ny"
      },
      {
        "from": [
          "En Route Aboard Dampfer Friedrich Der Grosse",
          "En Route Aboard Dampfer Lahn",
          "En Route Aboard Dampfer Kronprinz Wilhelm",
          "En Route Aboard Dampfer Barbarossa",
          "En Route Aboard Dampfer H.H. Meier",
          "En Route Aboard Dampfer Necker",
          "En Route Aboard Dining Cars",
          "En Route Aboard Yacht Prinzessin Victoria Victoria Luise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Dampfer Friedrich Der Grosse"
      },
      {
        "from": [
          "Aboard Paquebot La Lorraine",
          "Aboard Paquebot La Provence",
          "Aboard Paquebot La Touraine",
          "Aboard Paquebot La Champagne",
          "Aboard Paquebot La Savoie",
          "Aboard Paquebot La Bretagne",
          "Aboard Paquebot La Gascogne",
          "Aboard Paquebot La Loraine"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Paquebot La Lorraine"
      },
      {
        "from": [
          "En Route Aboard Express Steamer Furst Bismarck",
          "En Route Aboard Kaiser Wilhelm Der Grosse",
          "En Route Aboard Konigin Luise",
          "En Route Aboard Express Steamer Auguste Victoria",
          "En Route Aboard Coptic",
          "En Route Aboard Kamakura Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Express Steamer Furst Bismarck"
      },
      {
        "from": [
          "Restaurant La Corvette",
          "Restaurant La Gousse Dail",
          "Restaurant Le Carlton",
          "Restaurant Lucas Carton, 9 Place De La Madeleine, France",
          "Restaurant, Lexcuse, 14 Rue Charles V 75004, France",
          "Ristorante Al Graspo De Uci"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant La Corvette"
      },
      {
        "from": [
          "Bleecker, Thompson And Sullivan Streets, Entrance On Bleecker Street, New York, Ny",
          "Bleecker, Thompson And Sullivan Streets",
          "Bleecker, Thompson And Sullivan Streets Entrance On Bleecker Street",
          "Bleecker, Thompson And Sullivan Streets, New York",
          "Bleecker,thompson & Sullivan Streets,ny",
          "Bleecker,thompson,and Sullivan Streets,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bleecker, Thompson And Sullivan Streets, Entrance On Bleecker Street, New York, Ny"
      },
      {
        "from": [
          "San Francisco, Ca",
          "San Francisco Overland Limited",
          "San Francisco",
          "San Francisco Commercial Club",
          "San Francisco Commerical Club",
          "San Francisco, Calif"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "San Francisco, Ca"
      },
      {
        "from": [
          "Broadway, Ny",
          "1484 Broadwa,ny",
          "13 Broadway, Ny",
          "178 Broadway, Ny",
          "663 Broadway,ny",
          "726 Broadway, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broadway, Ny"
      },
      {
        "from": [
          "University Club",
          "University Club Ny",
          "University Club, Chicago, Il",
          "University Club, Denver, Co",
          "University Club, Providence, Ri",
          "University Cluyb, Boston, Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "University Club"
      },
      {
        "from": [
          "Madison Square Garden",
          "Madison Square Garden, New York City",
          "Madison Square Garden, New York, Ny",
          "Madison Square Concet Hall, New York, Ny",
          "Madison Square Garden Ny",
          "Madison Square Garder, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Madison Square Garden"
      },
      {
        "from": [
          "Union League Club, New York, Ny",
          "Union League Club",
          "Union League Club Ny",
          "Union League Club , New York",
          "Union League Club, 39th Street And Fifth Avenue",
          "Union League Club,chicago,ill."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union League Club, New York, Ny"
      },
      {
        "from": [
          "Broadway And 10th Street, New York, Ny",
          "Broadway And 36th St,new York,ny",
          "Broadway And 38th St., New York City",
          "Broadway And 44th St,new York,ny",
          "Broadway And 44th Street, Ny, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broadway And 10th Street, New York, Ny"
      },
      {
        "from": [
          "454456458 Sixth Avenue, Near 28th Street, New York, Ny ",
          "203205 Sixth Avenue,new York,ny",
          "602 Sixth Avenue, New York",
          "738 Sixth Avenue,new York,ny",
          "Sixth Avenue, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "454456458 Sixth Avenue, Near 28th Street, New York, Ny "
      },
      {
        "from": [
          "Hotel Marlborough, New York, Ny",
          "Hotel Marlborough Hoboken Ny",
          "Hotel Marlborough, New York",
          "Hotel Marlborough, New York City",
          "Hotel Marlborough,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Marlborough, New York, Ny"
      },
      {
        "from": [
          "2035 Sixth Ave. Ny",
          "213 Sixth Ave. Ny",
          "362 Sixth Ave. Ny",
          "527 Sixth Ave. Ny",
          "600 Sixth Ave. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2035 Sixth Ave. Ny"
      },
      {
        "from": [
          "En Route Aboard R.M.S. Empress Of China",
          "En Route Aboard R.M.S. Lucania",
          "En Route Aboard R.M.S. Etruria",
          "En Route Aboard Railroad",
          "En Route Aboard Herzogin Sophie Charlotte"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard R.M.S. Empress Of China"
      },
      {
        "from": [
          "En Route Aboard Schnelldampfer Auguste Victoria",
          "Enroute Aboard Schnelldampfer Expresssteamer Furst Bismarck",
          "En Route Aboard Schnelldampfer Express Steamer Auguste Victoria",
          "En Route Aboard Schnelldampfer Express Steamer Columbia",
          "En Route Aboard Schnelldampmer Express Steamer Auguste Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Schnelldampfer Auguste Victoria"
      },
      {
        "from": [
          "Pullman Dining Car Service En Route",
          "Pullman Dining Car Enroute Mexicocalifornia",
          "Pullman Dining Car",
          "Pullman Dining Car Casa Monica",
          "Pullman Dining Car Service"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pullman Dining Car Service En Route"
      },
      {
        "from": [
          "Restaurant La Perigourdine, France",
          "Restaurant Laperouse, 51 Quai Des Grandsaugustins, France",
          "Restaurant Le Bourgogne At Lhotel De Bourgogne Et Montana, 3 Rue De Bourgogne, France",
          "Restaurant Le Pavillon Du Lac Du Parc Montsouris Le Jardin De La Paresse, 20 Rue Gazan, France",
          "Restaurant Le Prince De Galles, Un Hotel Marriott, 33 Avenue George V, France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant La Perigourdine, France"
      },
      {
        "from": [
          "Restaurant Allard, 41 Rue Saintandredesarts, France",
          "Restaurant La Residence, France",
          "Restaurant Larchestrate, 84 Rue De Varenne, France",
          "Restaurant Laurent 111 East 56th Street",
          "Restaurant Le Restaurant Lyonnais Et Ses Vieilles Traditions, 32 Rue Sain Marc, France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Allard, 41 Rue Saintandredesarts, France"
      },
      {
        "from": [
          "Restaurant Kronenhalle",
          "Restaurant Kervansaray",
          "Restaurant Kroepels",
          "Restaurant, Oak Room, The Plaza Hotel, Usa",
          "Ristorante Grand Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Kronenhalle"
      },
      {
        "from": [
          "Mercantile Club St Louis, Mo",
          "Mercantile Club",
          "Mercantile Club House, St. Louis Mo",
          "Mercantile Club St. Louis",
          "Mercantile Club,st.Louis, Missouri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mercantile Club St Louis, Mo"
      },
      {
        "from": [
          "St. Nicholas Hotel, Cincinnati, Oh",
          "St. Nicholas Hotel, St.Louis, Mo",
          "St. Nicholas Hotel",
          "St. Nicholas Hotel, New York, Ny",
          "St. Nicholas Hotel,cincinnati,ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Nicholas Hotel, Cincinnati, Oh"
      },
      {
        "from": [
          "Broadway And 73rd Street, New York",
          "Broadway And 23rd Street, Ny",
          "Broadway And 63rd St,ny",
          "Broadway And 63rd St., New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broadway And 73rd Street, New York"
      },
      {
        "from": [
          "St. Augustine, Fl",
          "St.Augustine,fla.",
          "St.Aaugustine,fla.",
          "St.Augustine,florida"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Augustine, Fl"
      },
      {
        "from": [
          "Bellevuestratford Hotel, Philadelphia, Pa",
          "Bellevuestratford, Philadelphia, Pa",
          "Bellevuestratford Hotel",
          "Bellevuestratford, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevuestratford Hotel, Philadelphia, Pa"
      },
      {
        "from": [
          "Palais Royal  Christiania,norway",
          "Palais Royal, Christiania, Norway Now Oslo",
          "Palais Royal, Christiana",
          "Palais Royal, Christiana, Norway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palais Royal  Christiania,norway"
      },
      {
        "from": [
          "En Route From Washington To Richmond & Return",
          "En Route From Washington To Richmond And Return",
          "Enroute From Wash To Philadelphia And Return",
          "Enroute From Wash. To Philadelphia & Return"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route From Washington To Richmond & Return"
      },
      {
        "from": [
          "Hotel Brunswick Ny",
          "Hotel Brunswick",
          "Hotel Brunswick, New York",
          "Hotel Brunswick, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Brunswick Ny"
      },
      {
        "from": [
          "En Route Steamer August Victoria",
          "En Route Steamer Auguste Victoria",
          "En Route Steamer Furst Bismarck",
          "Enroute Steamer Kaiser Willhelm Der Grosser"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Steamer August Victoria"
      },
      {
        "from": [
          "116 West 14 St. Ny",
          "1 West 57 St.Ny",
          "32 West 28 St. Ny",
          "6 East 23 St. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "116 West 14 St. Ny"
      },
      {
        "from": [
          "On Board S.S. Kronprinzessin Cecilie",
          "On Board S.S.Kronprinzessin Cecile",
          "On Board S.S. Kroonland",
          "On Board S.S. Kaiser Wilhelm D. Grosse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board S.S. Kronprinzessin Cecilie"
      },
      {
        "from": [
          "Konigen Luise At Sea",
          "Konigen Louise At Sea",
          "Konigin Luise At Sea",
          "Konigin Luse At Sea"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Konigen Luise At Sea"
      },
      {
        "from": [
          "St. Denis Hotel New York",
          "St.Denis Hotel,ny",
          "St. Denis Hotel, New York City",
          "St. Denis Hotel, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel New York"
      },
      {
        "from": [
          "Gramercy Park Hotel",
          "Gramercy Park Hotel 2 Lexington Avenue At 21st Street",
          "Gramercy Park Hotel 21st Street And Lexington",
          "Gramercy Park Hotel Room Serive"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gramercy Park Hotel"
      },
      {
        "from": [
          "En Route Aboard Panama Line Steamship City Of Para",
          "En Route Aboard Above",
          "En Route Aboard Barbarossa",
          "En Route Aboard Postdampfer Mail Steamer Graf Waldersee"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Panama Line Steamship City Of Para"
      },
      {
        "from": [
          "Delmonicos, New York, Ny",
          "Delmonicos New York",
          "Delmonicos, New York City",
          "Delmonic0s, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos, New York, Ny"
      },
      {
        "from": [
          "Restaurant Lassere, France",
          "Restaurant Les Caves De Touraine",
          "Restaurant, Le Souffle, 36 Rue Du Montthabor, France",
          "Restaurant, Les Grandes Marches, Place De La Bastille, France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Lassere, France"
      },
      {
        "from": [
          "Restaurant Ritz",
          "Restaurant Rotisserie De La Table Du Roy Le Chef Georges, 10 Cite Dantin, France",
          "Restaurant Wriedt",
          "Restaurant, Rotisserie Perigourdine, 2 Place Saintmichel, France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Ritz"
      },
      {
        "from": [
          "Grand Central Lunch Rooms, New York,ny",
          "Grand Central Palace",
          "Grand Central Palace, New York Ny",
          "Grand Central Palace, Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Central Lunch Rooms, New York,ny"
      },
      {
        "from": [
          "Restaurant Royal",
          "Restaurant Erholung",
          "Restaurant, Relais De Le Belle Aurore, 6 Rue Gomboust, France",
          "Restaurant, Relais Plaza, 21 Avenue Montaigne, France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Royal"
      },
      {
        "from": [
          "66th Street And Broadway Ny",
          "66th Street And Broadway,new York,ny",
          "59th Street And Broadway, New York Ny",
          "66th Street And Br6adway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66th Street And Broadway Ny"
      },
      {
        "from": [
          "Madison Square, New York",
          "Madison Square, Ny",
          "Madison Square New York City Ny",
          "Madison Square, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Madison Square, New York"
      },
      {
        "from": [
          "Hotel Restaurant Schutzer Hof",
          "Hotel Restaurant Troisgros, France",
          "Hotel U. Restaurant Goldener Hirsch",
          "Hotelrestaurant Du Montblanc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Restaurant Schutzer Hof"
      },
      {
        "from": [
          "Central Restaurant & Roof Garden,143 Liberty St.Ny",
          "Central Restaurant, 143 Liberty Street, New York, Ny",
          "Central Restaurant,liberty St.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Central Restaurant & Roof Garden,143 Liberty St.Ny"
      },
      {
        "from": [
          "Diner Car 372, San Francisco Overland Limited",
          "Diner Car 374, San Francisco Overland Limited",
          "Diner Car 385, San Francisco Overland Limited"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Diner Car 372, San Francisco Overland Limited"
      },
      {
        "from": [
          "Summerville, S.C.",
          "Sommerville, S.C.",
          "Sumerville,s.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Summerville, S.C."
      },
      {
        "from": [
          "408 East 34 Street,new York,ny",
          "373375 West Street, New York, Ny",
          "6163 East 59 Street,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "408 East 34 Street,new York,ny"
      },
      {
        "from": [
          "New York Press Club Nyc",
          "New York Press Club, 34 West 23rd St. Ny",
          "New York Press Clubmorton Buildingny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Press Club Nyc"
      },
      {
        "from": [
          "144 E.86 St.Ny",
          "48 . 14 St. Ny",
          "55 W.27 St. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "144 E.86 St.Ny"
      },
      {
        "from": [
          "The Waldorfastoria",
          "The Waldorfastora",
          "The Waldorfastoria, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorfastoria"
      },
      {
        "from": [
          "On Board The Ss Prinz Friedrich Wilhelm",
          "On Board The Ss Barbarossa",
          "On Board The Ss Berlin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board The Ss Prinz Friedrich Wilhelm"
      },
      {
        "from": [
          "Merchants Club",
          "Merchants Club, New Yrok",
          "Merchants Club,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Merchants Club"
      },
      {
        "from": [
          "The Auditorium, Chicago, Il",
          "The Auditorium,chicago,ill",
          "The Auditoriaum, Chicago Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Auditorium, Chicago, Il"
      },
      {
        "from": [
          "Portland Commercial Club, Portlnd, Or",
          "Portland Commerical Club",
          "Portland Commerical Club, Portland, Or"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland Commercial Club, Portlnd, Or"
      },
      {
        "from": [
          "The Bellevue, Philadelphia, Pa",
          "The Bellevue, Phildelphia Pa",
          "The Bellevue, Phladelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Bellevue, Philadelphia, Pa"
      },
      {
        "from": [
          "374 Fifth Avenue, New York, Ny",
          "684 Fifth Avenue, New York, Ny",
          "833 Fifth Avenue, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "374 Fifth Avenue, New York, Ny"
      },
      {
        "from": [
          "Chicago, Il",
          "Chicago,ill.",
          "Chcago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago, Il"
      },
      {
        "from": [
          "Hotel Manhattan Madison Ave. And 42nd St., Ny",
          "Hotel Manhattan, Madison Ave. & 42nd St., New York, Ny",
          "Hotel Manhattan, Madison Avenue And 42nd St. Nyc, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan Madison Ave. And 42nd St., Ny"
      },
      {
        "from": [
          "Hotel Manhattan, Ny",
          "Hotel Manhattan, New York",
          "Hotel Manhattan,new York Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan, Ny"
      },
      {
        "from": [
          "Hotel St. George, Nyack, Ny",
          "Hotel St George,nyackonhudson,ny",
          "Hotel St. George,nyackonhudson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. George, Nyack, Ny"
      },
      {
        "from": [
          "Panamerican Exposition, Buffalo, Ny",
          "Pan Merican Exposition",
          "Panamerican Exposition"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Panamerican Exposition, Buffalo, Ny"
      },
      {
        "from": [
          "Hotel Continental Paris, France",
          "Hotel Continental, Christiania, Norway Oslo",
          "Hotel Continental,paris"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Continental Paris, France"
      },
      {
        "from": [
          "Hotel Washington, Jersey City, Nj",
          "Hotel Washington",
          "Hotel Washington, Jersey City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Washington, Jersey City, Nj"
      },
      {
        "from": [
          "Hotel Somerset, Boston, Ma",
          "Hotel Somerset",
          "Hotel Somerset, Commonwealth Avenue, Boston, Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Somerset, Boston, Ma"
      },
      {
        "from": [
          "199 Washington Street New York",
          "199 Washington Street, Ny, Ny",
          "301309 Washington Street Brooklyn Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "199 Washington Street New York"
      },
      {
        "from": [
          "Metropolitan Opera House",
          "Metropolitan Opera House Assembly Room Ny",
          "Metropolitan Opera House,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropolitan Opera House"
      },
      {
        "from": [
          "Metropolitan Club, New York, Ny",
          "Metropolitan Club",
          "Metropolitan Club Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropolitan Club, New York, Ny"
      },
      {
        "from": [
          "New Algonquin Club, Boston, Ma",
          "New Algonquin Club",
          "New Algonquin Club,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Algonquin Club, Boston, Ma"
      },
      {
        "from": [
          "57 Broad St. Ny",
          "Bway & 63rd St. Ny",
          "Broadway & 63 St. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 Broad St. Ny"
      },
      {
        "from": [
          "1515 Broadway, New York, Ny",
          "21 Broadway,new York,ny",
          "779 Broadway, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "1515 Broadway, New York, Ny"
      },
      {
        "from": [
          "On Board,steamer Puritanfall River Line",
          "On Board Steamboat Alton",
          "On Board Steamer Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board,steamer Puritanfall River Line"
      },
      {
        "from": [
          "St. Denis Hotel, Broadway And Eleventh Street, New York",
          "St. Denis Hotel, Bway & 11 St. Ny",
          "St.Denis Hotel,bway & 10th St. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel, Broadway And Eleventh Street, New York"
      },
      {
        "from": [
          "The Arlington, Washington, D.C.",
          "The Arlington,wash.Dc",
          "The Arlington Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Arlington, Washington, D.C."
      },
      {
        "from": [
          "Democratic Club",
          "Democratic Club, New York, Ny",
          "Democratic Club,new York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Democratic Club"
      },
      {
        "from": [
          "Central Park West, 72nd & 71st Sts., New York, Ny",
          "Central Park,new York,ny",
          "Central Park,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Central Park West, 72nd & 71st Sts., New York, Ny"
      },
      {
        "from": [
          "En Route Aboard Ventura",
          "En Route Aboard Furst Bismarck",
          "En Route Aboard Fust Bismarck"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ventura"
      },
      {
        "from": [
          "Arkwright Club, New York City",
          "Arkwright Club, New York, Ny",
          "Arkwright Club. 320 Broadway, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Arkwright Club, New York City"
      },
      {
        "from": [
          "Aboard Steamer Horicon, Lake George Ny",
          "Aboard Steamer Newport News",
          "Aboard Steamer Richard Peck"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Steamer Horicon, Lake George Ny"
      },
      {
        "from": [
          "Algonquin Club",
          "Algonquin Club New York, Ny",
          "Algonquin Club, Boston, Mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Algonquin Club"
      },
      {
        "from": [
          "259 Bowery, New York",
          "161 Bowery, New York",
          "300 Bowery, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "259 Bowery, New York"
      },
      {
        "from": [
          "Hotel Frankfurter Hof",
          "Hotel Frankfurter Hof, Beer Room",
          "Hotel Frankfurter, Franfurt Am Main, Germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Frankfurter Hof"
      },
      {
        "from": [
          "Fifth Avenue Hotel Ny",
          "Fifth Avenue Hotel, New York",
          "Fifth Avenue Hotel, New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Avenue Hotel Ny"
      },
      {
        "from": [
          "Penn",
          "1289 Bway Ny",
          "12891291 Bway Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Penn"
      },
      {
        "from": [
          "Restaurant Walterspiel",
          "Restaurant Alt Nuernberg",
          "Restaurant La Tour De Lyon, 1 Rue De Lyon 75012, France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Walterspiel"
      },
      {
        "from": [
          "Putinbayisland, Lake Erie, Oh",
          "Putinbay Island, Oh",
          "Put In Bay Island, Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Putinbayisland, Lake Erie, Oh"
      },
      {
        "from": [
          "Teuotinia Assembly Rooms, New York, Ny",
          "Teutonia Assembly Rooms",
          "Teutonia Assembly Rooms, New York, N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Teuotinia Assembly Rooms, New York, Ny"
      },
      {
        "from": [
          "Hotel Gramercy Park 52 Gramercy Park North",
          "Hotel Gramercy Park 52 Gamercy Park North",
          "Hotel Gramercy Park 52 Gramercy Park North, Lexington Avenue At 21st Street"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Gramercy Park 52 Gramercy Park North"
      },
      {
        "from": [
          "En Bord Paquebot La Touraine",
          "On Board Paquebot La Lorraine",
          "On Board Paquebot La Savoie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Bord Paquebot La Touraine"
      },
      {
        "from": [
          "Masonic Temple, Philadelphia, Pa",
          "Masonic Temple,boston Ma",
          "Masonic Temple,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Masonic Temple, Philadelphia, Pa"
      },
      {
        "from": [
          "Manhattan Beach Hotel, Coney Island, Ny",
          "Manhattan Beach Hotel,brooklyn, N.Y.",
          "Manhattan Beach Hotel,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Beach Hotel, Coney Island, Ny"
      },
      {
        "from": [
          "25 Barclay St., New York, Ny",
          "96 & 98 Barclay St., New York, Ny",
          "98 Barclay St., New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "25 Barclay St., New York, Ny"
      },
      {
        "from": [
          "Youngs Hotel, Boston, Ma",
          "Youngs Hotel, Boston,mass",
          "Youngs Hotel,boston"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Youngs Hotel, Boston, Ma"
      },
      {
        "from": [
          "Dining Car Service",
          "Dining Car Service, Car Holland",
          "Dining Car Service, Train 19"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dining Car Service"
      },
      {
        "from": [
          "Miami Biscayne Bay, Fl",
          "Miami Biscayne Bay,fla.",
          "Miaami Biscayne Bay,fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Miami Biscayne Bay, Fl"
      },
      {
        "from": [
          "Plankinton House",
          "Plankinton House, Milwaukee County, Wi",
          "Plankinton House, Milwaukee, Wi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plankinton House"
      },
      {
        "from": [
          "Grand Pacific Hotel, Chicago, Il",
          "Grand Pacific Hotel",
          "Grand Pacific Hotel,chicago,ill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Pacific Hotel, Chicago, Il"
      },
      {
        "from": [
          "S.S. Zeeland",
          "S.S. Zealandia",
          "S.S.Waesland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Zeeland"
      },
      {
        "from": [
          "Hotel Majestic Philadelphia, Pa",
          "Hotel Majestic",
          "Hotel Majestic, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Majestic Philadelphia, Pa"
      },
      {
        "from": [
          "156 Second Avenue Ny",
          "45 Second Avenue Ny",
          "83 Second Avenue, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "156 Second Avenue Ny"
      },
      {
        "from": [
          "Park Row Building New York,ny",
          "Park Row Building Ny",
          "Park Row Building, Opposite Post Office New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row Building New York,ny"
      },
      {
        "from": [
          "Republican Club, New York",
          "Republican Club, New York City",
          "Republican Club, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Republican Club, New York"
      },
      {
        "from": [
          "Auditorium Annex",
          "Auditorium Annex Chicago, Il",
          "Auditorium Annex Hotel, Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium Annex"
      },
      {
        "from": [
          "102 Madison St. ",
          "178 & 180 Madison St."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "102 Madison St. "
      },
      {
        "from": [
          "Ny",
          "Nh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ny"
      },
      {
        "from": [
          "16 & 18 Park Place, New York",
          "6 Park Place, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "16 & 18 Park Place, New York"
      },
      {
        "from": [
          "Savini",
          "Savoy Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Savini"
      },
      {
        "from": [
          "Lotos Club, New York City",
          "Lotos Club, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lotos Club, New York City"
      },
      {
        "from": [
          "On Board Ss North West",
          "On Board Ss North Land"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board Ss North West"
      },
      {
        "from": [
          "Atlantic Hotel",
          "Atlantic Hotel, Ocean City, Md"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Atlantic Hotel"
      },
      {
        "from": [
          "Hotel Flanders",
          "Hotel Flanders,philadelphia,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Flanders"
      },
      {
        "from": [
          "Park Lane 299 Park Avenue",
          "Park Lane Park Lounge"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Lane 299 Park Avenue"
      },
      {
        "from": [
          "160 Sixth Ave,new York,ny",
          "456 Sixth Ave,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "160 Sixth Ave,new York,ny"
      },
      {
        "from": [
          "Martinellis, New York City",
          "Martinellis, New York, Ny."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Martinellis, New York City"
      },
      {
        "from": [
          "Hansagesellschaftshaus, Hamburggermany",
          "Hansagesellschaftshaussteindamm No.9hamburg,germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hansagesellschaftshaus, Hamburggermany"
      },
      {
        "from": [
          "Ss Westernland",
          "Ss Westernland, En Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Westernland"
      },
      {
        "from": [
          "Hotel Victory, Putinbayisland, Lake Erie, Oh.",
          "Hotel Victory Putinbay, Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Victory, Putinbayisland, Lake Erie, Oh."
      },
      {
        "from": [
          "Coronado Beach, Ca",
          "Coronada Beach, Ca."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coronado Beach, Ca"
      },
      {
        "from": [
          "Cincinnati, Oh",
          "Cincinnati, 0h"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati, Oh"
      },
      {
        "from": [
          "Portland, Me",
          "Portland,ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland, Me"
      },
      {
        "from": [
          "S.S. Southwark",
          "S.S. Southwork"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Southwark"
      },
      {
        "from": [
          "Rome, Italy",
          "Rome, Itally"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rome, Italy"
      },
      {
        "from": [
          "Frankfurt A.M.Germany",
          "Frankfurt Am Main, Germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frankfurt A.M.Germany"
      },
      {
        "from": [
          "Frankfurt, Germany",
          "Frankfort, Germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frankfurt, Germany"
      },
      {
        "from": [
          "Frankfurter Stubb",
          "Frankfurter Gesellschaft Fur Handel Industrie Und Wissenschaft"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frankfurter Stubb"
      },
      {
        "from": [
          "Augusta, Me",
          "August, Me"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Augusta, Me"
      },
      {
        "from": [
          "Southern Hotel, St. Louis, Mo",
          "Southern Hotel,st.Louis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Southern Hotel, St. Louis, Mo"
      },
      {
        "from": [
          "The Palace Hotel",
          "The Plaza Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Palace Hotel"
      },
      {
        "from": [
          "Park Avenue Hotel, New York, Ny",
          "Park Avenue Hotel,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Avenue Hotel, New York, Ny"
      },
      {
        "from": [
          "Ss Furst Bismarck",
          "Ss Furst Bismark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Furst Bismarck"
      },
      {
        "from": [
          "Fort Orange Club",
          "Fort Orange Club, Albany, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fort Orange Club"
      },
      {
        "from": [
          "Hotel Pfister, Milwaukee, Wi",
          "Hotel Pfister"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pfister, Milwaukee, Wi"
      },
      {
        "from": [
          "Springfield,mass.",
          "Springfield, Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Springfield,mass."
      },
      {
        "from": [
          "259 & 261 Bowery, New York City",
          "358 Bowery, New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "259 & 261 Bowery, New York City"
      },
      {
        "from": [
          "13 Montgomery Street Jersey City, Nj",
          "90 Montgomery Street, Jersey City, Nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "13 Montgomery Street Jersey City, Nj"
      },
      {
        "from": [
          "149 Bleecker St.Ny",
          "Bleecker St. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "149 Bleecker St.Ny"
      },
      {
        "from": [
          "Rauschers, Washingon, D.C.",
          "Rauschers, Washington, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Rauschers, Washingon, D.C."
      },
      {
        "from": [
          "Parker House Boston,mass ",
          "Parker House, Boston, Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House Boston,mass "
      },
      {
        "from": [
          "Hotel Chamberlain, Old Point Comfort, Va",
          "Hotel Chamberlin, Ft Monroe, Ky"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Chamberlain, Old Point Comfort, Va"
      },
      {
        "from": [
          "Government House Calcutta, India",
          "Government House, Malabar Point, Bombay, India"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Government House Calcutta, India"
      },
      {
        "from": [
          "Hotel Astor, New York",
          "Hotel Astor, New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Astor, New York"
      },
      {
        "from": [
          "Fifth Avenue And 59th Street, New York, Ny",
          "Fifth Avenue And 59th St., Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Avenue And 59th Street, New York, Ny"
      },
      {
        "from": [
          "Riverside Drive, New York City, Ny",
          "Riverside Drive, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Riverside Drive, New York City, Ny"
      },
      {
        "from": [
          "Bleecker Street, New York",
          "149 Bleecker Street, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bleecker Street, New York"
      },
      {
        "from": [
          "Nashville, Tn",
          "Nashville, Tenn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nashville, Tn"
      },
      {
        "from": [
          "Hotel Ryan, St. Paul, Mn",
          "Hotel Ryan, St.Paul,minn."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Ryan, St. Paul, Mn"
      },
      {
        "from": [
          "127 Fourth Ave. Ny",
          "141 Fourth Ave. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "127 Fourth Ave. Ny"
      },
      {
        "from": [
          "St.Louis Club, St.Louis,mo.",
          "St.Louis Club,st.Louis,missouri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Louis Club, St.Louis,mo."
      },
      {
        "from": [
          "En Route  Ss Kairga",
          "Enroute  Ss Hgairga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route  Ss Kairga"
      },
      {
        "from": [
          "En Route Washingtonatlanta",
          "En Route Washington,richmond & Florida Limited"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Washingtonatlanta"
      },
      {
        "from": [
          "393 Fulton Street,ny",
          "90 Fulton Street, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "393 Fulton Street,ny"
      },
      {
        "from": [
          "Hotel Stenton Philadelphia Pa",
          "Hotel Stenton"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Stenton Philadelphia Pa"
      },
      {
        "from": [
          "Great Northern Ry. Line",
          "Great Northern Hotel , Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Great Northern Ry. Line"
      },
      {
        "from": [
          "Parkers",
          "Parker House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parkers"
      },
      {
        "from": [
          "25 Park Row, Ny",
          "Park Row, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "25 Park Row, Ny"
      },
      {
        "from": [
          "Watson House, Bablon, L.I., N.Y.",
          "Watson House, Babylon, L.I., N.Y."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Watson House, Bablon, L.I., N.Y."
      },
      {
        "from": [
          "Grand Orient Restaurant",
          "Grand Orient Restaurant, Tampa, Fl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Orient Restaurant"
      },
      {
        "from": [
          "Markel Cafe, Omaha, Nebraska",
          "Markel Cafe, Omaha,ne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Markel Cafe, Omaha, Nebraska"
      },
      {
        "from": [
          "Metropolitan Hotel, New York, Ny",
          "Metropolitan Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropolitan Hotel, New York, Ny"
      },
      {
        "from": [
          "Hotel Savoy New York",
          "Hotel Savoy,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy New York"
      },
      {
        "from": [
          "Special Pullman Vestibuled Train En Route To Boston And Return",
          "Special Pullman Vestibuled Train"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Special Pullman Vestibuled Train En Route To Boston And Return"
      },
      {
        "from": [
          "Sunset Ogden & Shasta Routes",
          "Sunset Ogden & Shasta Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sunset Ogden & Shasta Routes"
      },
      {
        "from": [
          "Lincoln Club  Ny",
          "Lincoln Club New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lincoln Club  Ny"
      },
      {
        "from": [
          "Williss Rooms Almacks, London England ",
          "Williss Rooms Almanaks London, England "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Williss Rooms Almacks, London England "
      },
      {
        "from": [
          "Hotel Iroquois, Buffalo, Ny",
          "Hotel Iroguois,buffalo,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Iroquois, Buffalo, Ny"
      },
      {
        "from": [
          "Hotel Metropole, Manila, P.I.",
          "Hotel Metropole, Philadelphia, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Metropole, Manila, P.I."
      },
      {
        "from": [
          "Hotel St. Francis",
          "Hotel St. Francis, San Francisco, Ca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. Francis"
      },
      {
        "from": [
          "On Board S.S.Amerika",
          "On Board S.S.Amerikas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board S.S.Amerika"
      },
      {
        "from": [
          "On Board S.S. Barbarossa",
          "On Board S.S. Berlin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board S.S. Barbarossa"
      },
      {
        "from": [
          "Sixtysixth Street & Broadway, New York, Ny",
          "Sixtysixth Street & Broadway"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sixtysixth Street & Broadway, New York, Ny"
      },
      {
        "from": [
          "Steamer Auguste Victoria",
          "Steamerauguste Victoria En Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Steamer Auguste Victoria"
      },
      {
        "from": [
          "Plaza Hotel, Ny",
          "Palace Hotel,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plaza Hotel, Ny"
      },
      {
        "from": [
          "Commercial Club, Portland, Or",
          "Commercial Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commercial Club, Portland, Or"
      },
      {
        "from": [
          "Academy Of Music Brooklyn, Ny",
          "Academy Of Music, Irving & Nisson Halls, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Academy Of Music Brooklyn, Ny"
      },
      {
        "from": [
          "En Route, Danville  Washington",
          "En Route, Danville, Va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route, Danville  Washington"
      },
      {
        "from": [
          "En Route S.S. Zeeland",
          "Enroute S.S.Zeeland  East Bound"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S. Zeeland"
      },
      {
        "from": [
          "Statler Hilton",
          "Statler Hilton The Pen And Sword"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Statler Hilton"
      },
      {
        "from": [
          "Broadway & 10th Street, New York, Ny",
          "Broadway & Eighth Street, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broadway & 10th Street, New York, Ny"
      },
      {
        "from": [
          "Broadway And 52nd Street, New York",
          "Broadway And 42nd Street, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broadway And 52nd Street, New York"
      },
      {
        "from": [
          "Grand Hotel, Melbourne",
          "Grand Hotel, Melbourne, Australia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel, Melbourne"
      },
      {
        "from": [
          "Cafe Boulevard New York",
          "Cafe Boulevard,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Boulevard New York"
      },
      {
        "from": [
          "Mackinac Island, Mi",
          "Mackinac Island, Mich."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mackinac Island, Mi"
      },
      {
        "from": [
          "Faneuil Hall, Boston, Ma",
          "Faneuil Hall, Boston, Mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Faneuil Hall, Boston, Ma"
      },
      {
        "from": [
          "Lawyers Club, New York",
          "Lawyers Club, New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lawyers Club, New York"
      },
      {
        "from": [
          "Grand Hotel,paris,france",
          "Grand Hotel,pariser Hof,frankfurt A.M.,germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel,paris,france"
      },
      {
        "from": [
          "Chamberlins Washington,dc",
          "Chamberlins Wash.D.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chamberlins Washington,dc"
      },
      {
        "from": [
          "Steamship City Of Rio De Janeiro",
          "Steamship City Of Para"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Steamship City Of Rio De Janeiro"
      },
      {
        "from": [
          "En Route Aboard The Ss Westernland",
          "En Route Aboard The R.M.S. Etruria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard The Ss Westernland"
      },
      {
        "from": [
          "Gelbs Parlors, Providence, Ri",
          "Gelbs Parlors, Providence, Ro"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gelbs Parlors, Providence, Ri"
      },
      {
        "from": [
          "Palm Beach, Fl",
          "Palm Beach,fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palm Beach, Fl"
      },
      {
        "from": [
          "En Route Aboard Hong Kong Maru",
          "En Route Aboard New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Hong Kong Maru"
      },
      {
        "from": [
          "Delmonicos New Yok City",
          "Delmonicos Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos New Yok City"
      },
      {
        "from": [
          "Ss Kamakura Maru",
          "Ss Kamkura Maru"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Kamakura Maru"
      },
      {
        "from": [
          "Manchester, Eng.",
          "Manchester,england"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manchester, Eng."
      },
      {
        "from": [
          "Lucerne,switzerland",
          "Luzern, Switzerland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lucerne,switzerland"
      },
      {
        "from": [
          "Revere House, Boston,mass",
          "Revere House,boston,ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Revere House, Boston,mass"
      },
      {
        "from": [
          "Hotel Bristol Italy",
          "Hotel Bristol, Carlsbad, Germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Bristol Italy"
      },
      {
        "from": [
          "Ss City Of Rio De Janeiro",
          "Ss City Of Rio De Janerio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss City Of Rio De Janeiro"
      },
      {
        "from": [
          "Milan, Italy",
          "Milano, Italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Milan, Italy"
      },
      {
        "from": [
          "The Richelieu, Chicago, Il",
          "The Richelieu,chicago,ill."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Richelieu, Chicago, Il"
      },
      {
        "from": [
          "Palais Du Quirinal,italy",
          "Palais Du Quirinal,rome,italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palais Du Quirinal,italy"
      },
      {
        "from": [
          "Cedar Park Driving Club",
          "Cedar Park Driving Club Philadelphia, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cedar Park Driving Club"
      },
      {
        "from": [
          "Nyc",
          "New Yok"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nyc"
      },
      {
        "from": [
          "Charley Browns",
          "Charlie Browns"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Charley Browns"
      },
      {
        "from": [
          "Manhattan Club, New York City",
          "Manhattan Club, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Club, New York City"
      },
      {
        "from": [
          "Jacksonville, Fl",
          "Jacksonville, Fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jacksonville, Fl"
      },
      {
        "from": [
          "New State House, Waco, Tx",
          "New State House, Waco,texas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New State House, Waco, Tx"
      },
      {
        "from": [
          "137 E. Madison St. Chicago, Ill.",
          "137 E. Madison St. Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "137 E. Madison St. Chicago, Ill."
      },
      {
        "from": [
          "Royal Blue Line,waldorf",
          "Royal Blue Linewaldorf Car"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Royal Blue Line,waldorf"
      },
      {
        "from": [
          "En Route, Expresssteamer Furst Bismarck",
          "Enroute Express Steamer Auguste Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route, Expresssteamer Furst Bismarck"
      },
      {
        "from": [
          "The Brunswick, Boston, Ma",
          "The Brunswick, Boston,mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Brunswick, Boston, Ma"
      },
      {
        "from": [
          "Hotel Bellevue, Philadephia, Pa",
          "Hotel Bellvue,philadelphia,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Bellevue, Philadephia, Pa"
      },
      {
        "from": [
          "R.M.S. Empress Of China",
          "R.M.S. Empress Of India"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Empress Of China"
      },
      {
        "from": [
          "Restaurant Cafe Winkler",
          "Restaurant Cova, Milan, Italy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Cafe Winkler"
      },
      {
        "from": [
          "Old Point Comfort, Va",
          "Old Point Comfort,virginia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Old Point Comfort, Va"
      },
      {
        "from": [
          "On Board La Bretagne",
          "On Board La Provence"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board La Bretagne"
      },
      {
        "from": [
          "Restaurant Egoisten",
          "Restaurant Excelsior"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Egoisten"
      },
      {
        "from": [
          "Hotel Vier Jahreszeiten",
          "Hotel Vier Jahreszeiten, Jahreszeiten Suite"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vier Jahreszeiten"
      },
      {
        "from": [
          "Ristorante Alfredo Alla Scrofa",
          "Restaurant, Le Vieux Galion, France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ristorante Alfredo Alla Scrofa"
      },
      {
        "from": [
          "Delmonicos Ny",
          "Dwlmonicos Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos Ny"
      },
      {
        "from": [
          "The San Francisco Challenger, Southern Pacific",
          "The San Francisco Commercial Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The San Francisco Challenger, Southern Pacific"
      },
      {
        "from": [
          "119121 La Salle St.,chicago,il",
          "La Salle St. Chicago, Ill."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "119121 La Salle St.,chicago,il"
      },
      {
        "from": [
          "Madison Ave & 42nd St,ny",
          "Madison Ave & 42nd St., New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Madison Ave & 42nd St,ny"
      },
      {
        "from": [
          "Red Room, Bohemian Club, San Francisco,ca.",
          "Red Room,bohemian Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Red Room, Bohemian Club, San Francisco,ca."
      },
      {
        "from": [
          "Restaurant Die Blau Terrasse",
          "Restaurante Tipico"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Die Blau Terrasse"
      },
      {
        "from": [
          "Marlboroughblenheim Hotel, Atlantic City, Nj",
          "Marlboroughblenheim, Atlantic City, Nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Marlboroughblenheim Hotel, Atlantic City, Nj"
      },
      {
        "from": [
          "En Route",
          "On Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route"
      },
      {
        "from": [
          "Southern Pacific",
          "Southern Pacific Company, Sunset Ogden & Shasta Routes"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Southern Pacific"
      },
      {
        "from": [
          "Manhattan Beach, Long Island Ny",
          "Manhattan Beach, L.I. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Beach, Long Island Ny"
      },
      {
        "from": [
          "Restaurant Zum Alten Rathaus",
          "Restaurant Zum Hanseaten"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Zum Alten Rathaus"
      },
      {
        "from": [
          "Narragansett Hotel, Providence Ri",
          "Narragansett Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Narragansett Hotel, Providence Ri"
      },
      {
        "from": [
          "Queen City Club, Cincinnati, Oh",
          "Queen City Club, Cincinnati ,ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Queen City Club, Cincinnati, Oh"
      },
      {
        "from": [
          "Place Viger Hotel, Montreal, Canada",
          "Place Viger Hotel, Province Of Quebec,canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Place Viger Hotel, Montreal, Canada"
      },
      {
        "from": [
          "Switzerland",
          "Swiitzerland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Switzerland"
      },
      {
        "from": [
          "Fifth Avenue & Fiftyninth Street, New York, Ny",
          "Fifth Avenue & Fiftyninth Street"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Avenue & Fiftyninth Street, New York, Ny"
      },
      {
        "from": [
          "Murray Hill Hotel, New York City",
          "Murray Hill Hotel, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Murray Hill Hotel, New York City"
      },
      {
        "from": [
          "Oriental Hotel, Dallas, Tx",
          "Oriental Hotel,dallas,texas"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Oriental Hotel, Dallas, Tx"
      },
      {
        "from": [
          "Shelter Island Hartford, Ct.",
          "Shelter Island, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shelter Island Hartford, Ct."
      },
      {
        "from": [
          "Washington Building, New York, Ny",
          "Washington Place And Mercer Street, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Washington Building, New York, Ny"
      },
      {
        "from": [
          "Ss Konigin Luise",
          "Ss Konigen Luise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Konigin Luise"
      },
      {
        "from": [
          "57 Broad Street, Ny",
          "57 Broad Street, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 Broad Street, Ny"
      },
      {
        "from": [
          "Philadelphia Bourse",
          "Philadelphia Bourse,philadelphia,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia Bourse"
      },
      {
        "from": [
          "Hotel Del Coronado",
          "Hotel Del Coronado, San Diego County, Ca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Del Coronado"
      },
      {
        "from": [
          "Cincinnati , Ohio",
          "Cincinati, Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati , Ohio"
      },
      {
        "from": [
          "Westminster Hotel",
          "Westminster Hotel, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Westminster Hotel"
      },
      {
        "from": [
          "Expresssteamer Auguste Victoria",
          "Expresssteamer Auguste Victoria En Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Expresssteamer Auguste Victoria"
      },
      {
        "from": [
          "61 Cortlandt St.,ny",
          "88 Cortlandt Street, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "61 Cortlandt St.,ny"
      },
      {
        "from": [
          "St. Denis Hotel",
          "St. Dennis Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "New York Athletic Club",
          "New York Athletic Club, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Athletic Club"
      },
      {
        "from": [
          "St. Charles Hotel, New Orleans La",
          "St. Charles Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Charles Hotel, New Orleans La"
      },
      {
        "from": [
          "Hot Springs, Ar",
          "Hot Springs, N.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hot Springs, Ar"
      },
      {
        "from": [
          "Cleveland, Oh",
          "Clevelyand Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland, Oh"
      },
      {
        "from": [
          "National Arts Club, New York",
          "National Arts Club, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "National Arts Club, New York"
      },
      {
        "from": [
          "En Route, Greensboro  Washington",
          "En Route, Greensboro, Nc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route, Greensboro  Washington"
      },
      {
        "from": [
          "New Yok, Ny",
          "Nyack, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Yok, Ny"
      },
      {
        "from": [
          "Transportation Club Ny",
          "Transportation Club, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Transportation Club Ny"
      },
      {
        "from": [
          "Asheville,nc",
          "Ashville, Nc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Asheville,nc"
      },
      {
        "from": [
          "38th St. & 6th Ave. Ny",
          "59th St.& 5th Ave.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "38th St. & 6th Ave. Ny"
      },
      {
        "from": [
          "Ss Kasuga",
          "Ss Casuga"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Kasuga"
      },
      {
        "from": [
          "Bohemian Club, San Francisco, Ca",
          "Bohemian Club,san Fransisco,ca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bohemian Club, San Francisco, Ca"
      },
      {
        "from": [
          "Fraunces Tavern, Ny",
          "Frauncestavern, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fraunces Tavern, Ny"
      },
      {
        "from": [
          "Hotel Vendome, Boston, Ma",
          "Hotel Vendome Boston, Mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome, Boston, Ma"
      },
      {
        "from": [
          "5th Ave. & 15 St. Ny",
          "6th Ave.,i8&19 St.,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "5th Ave. & 15 St. Ny"
      },
      {
        "from": [
          "Chattanooga,tenn.",
          "Chattanooga, Tn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chattanooga,tenn."
      },
      {
        "from": [
          "114 West Fourteenth Street, New York",
          "114 West Fourteenth Street, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "114 West Fourteenth Street, New York"
      },
      {
        "from": [
          "Plymouth, Ma",
          "Plymouth, Mi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Plymouth, Ma"
      },
      {
        "from": [
          "Tilleys Restaurant, England",
          "Tilleys Restaurant, Newcastleontyne, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tilleys Restaurant, England"
      },
      {
        "from": [
          "Tampa, Fl",
          "Tampa,fla."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa, Fl"
      },
      {
        "from": [
          "Aboard Kronprinzessin Cecilie",
          "Aboard Kronprinsessin Cecilie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Kronprinzessin Cecilie"
      },
      {
        "from": [
          "143 Liberty Street, Ny",
          "69 Liberty Street Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "143 Liberty Street, Ny"
      },
      {
        "from": [
          "Mount Washington, Nh",
          "Mount Washington,new Hampshire"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Mount Washington, Nh"
      },
      {
        "from": [
          "Madison Square West, Nyc Ny",
          "Madison Square, West, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Madison Square West, Nyc Ny"
      },
      {
        "from": [
          "Bway & 32 St.Ny",
          "Bway & 44st.,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bway & 32 St.Ny"
      },
      {
        "from": [
          "Akbar",
          "Oak Bar"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Akbar"
      },
      {
        "from": [
          "119 Fifth Ave,ny",
          "642 Fifth Ave,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "119 Fifth Ave,ny"
      },
      {
        "from": [
          "Dampfer Konigen Luise",
          "Dampfer Konigin Luise"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dampfer Konigen Luise"
      },
      {
        "from": [
          "Chicago Athletic Association",
          "Chicago Athletic Association, Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago Athletic Association"
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Ss Sonoma",
          "Sonoma",
          "S.S. San Juan"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Sonoma"
      },
      {
        "from": [
          "Cleveland, Oh",
          "Cleveland,ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cleveland, Oh"
      },
      {
        "from": [
          "Sonoma  Second Cabin",
          "Ss Sonoma,second Cabin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sonoma  Second Cabin"
      },
      {
        "from": [
          "The Arena",
          "Troy, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Arena"
      },
      {
        "from": [
          "Shauls Inn",
          "Ss Louisiana"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shauls Inn"
      },
      {
        "from": [
          "Jersey City, Nj",
          "Jersey City, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jersey City, Nj"
      },
      {
        "from": [
          "22 West 20th St. Nyc",
          "West 46 St.Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "22 West 20th St. Nyc"
      },
      {
        "from": [
          "Jumers",
          "O. Henrys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jumers"
      },
      {
        "from": [
          "Pinehurst,n.C.",
          "Pinehurssst, N.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pinehurst,n.C."
      },
      {
        "from": [
          "On Board The Ss George Washington",
          "On Board S.S. George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board The Ss George Washington"
      },
      {
        "from": [
          "Jahreszeiten Eck",
          "Jareszeiten Eck"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Jahreszeiten Eck"
      },
      {
        "from": [
          "Delmonicos Ny",
          "Delmomicos,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos Ny"
      },
      {
        "from": [
          "Az",
          "J.Cs"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Az"
      },
      {
        "from": [
          "Djawah",
          "The Ivy"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Djawah"
      },
      {
        "from": [
          "Hotel Manhattan, Ny",
          "Hotel Manhattan"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan, Ny"
      },
      {
        "from": [
          "Schweiserhof,lucerne,switzerland",
          "Schwitzerhof Luzern Switzerland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schweiserhof,lucerne,switzerland"
      },
      {
        "from": [
          "St.Denis",
          "Stammhaus"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St.Denis"
      },
      {
        "from": [
          "Paris,france",
          "Biarritz, France"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paris,france"
      },
      {
        "from": [
          "Depew,ny",
          "Die Pfanne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Depew,ny"
      },
      {
        "from": [
          "Hotel Antigua",
          "Atlanta, Ga."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Antigua"
      },
      {
        "from": [
          "Malone, Nj",
          "Malone, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Malone, Nj"
      },
      {
        "from": [
          "New York, Ny",
          "Newark,nj"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York, Ny"
      },
      {
        "from": [
          "Cincinnati, Oh",
          "Cincinnati , Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cincinnati, Oh"
      },
      {
        "from": [
          "Broadway And 52nd Street, New York",
          "Broadway And Tenth Street, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broadway And 52nd Street, New York"
      },
      {
        "from": [
          "Brooklyn, Ny",
          "Park Lane"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brooklyn, Ny"
      },
      {
        "from": [
          "37 John Street, Ny",
          "Amsterdam, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "37 John Street, Ny"
      },
      {
        "from": [
          "Columbus, Ohio",
          "Columbus, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Columbus, Ohio"
      },
      {
        "from": [
          "Gibraltar, Spain",
          "Gibralter, Spain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gibraltar, Spain"
      },
      {
        "from": [
          "117 West 34th Street,new York,ny",
          "West 125th Street,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "117 West 34th Street,new York,ny"
      },
      {
        "from": [
          "Le Duc",
          "Lutèce"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Duc"
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Restaurant La Corvette",
          "Restaurant Kronenhalle",
          "Restaurant Allard, 41 Rue Saintandredesarts, France",
          "Restaurant La Perigourdine, France",
          "Restaurant Ritz",
          "Restaurant Royal",
          "Restaurant Lassere, France",
          "Restaurant Walterspiel",
          "Ristorante Alfredo Alla Scrofa",
          "Restaurant Die Blau Terrasse",
          "Restaurant Egoisten",
          "Restaurant Lamazere, 23 Rue De Ponthieu, France",
          "Restaurant, Marius Et Janette, 4 Avenue George V, France",
          "Restaurant & Bierstube Zum Stadtheller",
          "Restaurant Antoine",
          "Restaurant Des Artistes, Rue Lepic, France",
          "Restaurant Drei Baren",
          "Restaurant Faberhof",
          "Restaurant Friedrichshof,3 Wilmersdorfer Strasse,charlottenburg",
          "Restaurant Joseph, 56 Rue Pierre Charron, France",
          "Restaurant Konighof",
          "Restaurant Moulin, France",
          "Restaurant Taillevent, France",
          "Restaurant Viking",
          "Restaurant, Bistrot Gould, France",
          "Restaurant, Chiberto, 3 Rue Arsene Houssaye, France",
          "Restaurant, Maxims,",
          "Restaurant, Palais Royal, France",
          "Restaurant, Ramponneau, 21 Avenue Marceau, France",
          "Restaurant, Vivarois, 192 Avenue Victor Hugo, France",
          "Restaurante Aviz",
          "Restaurante Tavares",
          "Resturant, Le Vert Galant, France",
          "Ristorante 21",
          "Ristorante Bianchi",
          "Ristorante Giannino"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant La Corvette"
      },
      {
        "from": [
          "En Route Aboard Ss. Kasuga",
          "En Route Aboard Dampfer Friedrich Der Grosse",
          "En Route Aboard Hong Kong Maru",
          "En Route Aboard Express Steamer Furst Bismarck",
          "En Route Aboard Ventura",
          "En Route Aboard R.M.S. Empress Of China",
          "En Route Aboard Schnelldampfer Auguste Victoria",
          "En Route Friedrich Der Grosse",
          "En Route Aboard Panama Line Steamship City Of Para",
          "En Route From Washington To Richmond & Return",
          "En Route Aboard The Ss Westernland",
          "En Route  Parlor Car",
          "En Route Aboard Mail Steamer Graf Waldersee",
          "En Route From Ny To Philadelphia",
          "En Route From Port Victoria To Trondhjem On Board H.M.Y.Victoria & Albert",
          "En Routebremen To Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Aboard Ss. Kasuga"
      },
      {
        "from": [
          "Grand Hotel, Cincinnati Oh",
          "Grand Hotel, London, England",
          "Grand Hotel, Melbourne",
          "Grand Hotel,paris,france",
          "Grand Hotel",
          "Grand Hotel Baglioni",
          "Grand Hotel Restaurant Central",
          "Grand Hotel, S. Pellegrino, Italy",
          "Grand Hotel, The, London,england",
          "Grand Hotel,trafalgar Square,london,england"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Hotel, Cincinnati Oh"
      },
      {
        "from": [
          "Dining Car",
          "Dining Car, Southern Pacific",
          "Dining Car Palmer",
          "Dining Car, Fred Harvey",
          "Dining Car, The Milwaukee Road",
          "Dining Car, Boston & Albany Railroad",
          "Dining Car, Missouri Pacific Lines",
          "Dining Car, New York Central System",
          "Dining Car, Richmond Fredericksburg And Potomac Railroad",
          "Dining Car, Union Pacific Railroad"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dining Car"
      },
      {
        "from": [
          "Broadway And 73rd Street, New York",
          "Broadway And 10th Street, New York, Ny",
          "Broadway And 52nd Street, New York",
          "Broadway And Sixtythird Street, New York, Ny",
          "481 Broadway And 54 Mercer Street Ny",
          "Broadway And 36th And 37th St,new York,ny",
          "Broadway And 41st St,ny",
          "Broadway And 63rd Atreet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broadway And 73rd Street, New York"
      },
      {
        "from": [
          "On Board The Ss Prinz Friedrich Wilhelm",
          "On Board The Ss Vaderland",
          "On Board The Kronprinzessin Cecilie",
          "On Board The Ss George Washington",
          "On Board Kaiserin Auguste Victoria",
          "On Board The Amerika",
          "On Board The S.S. St. Marys",
          "On Board The Twinscrew Steamship Amerika"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board The Ss Prinz Friedrich Wilhelm"
      },
      {
        "from": [
          "Hoffman House",
          "Hoffman House New York, Ny",
          "Hoffman House, Madison Square, Ny",
          "Hoffman House Cafe, 7 Beaver St.Ny",
          "Hoffman House Cafe, New York, Ny",
          "Hoffman House Cafe,steamboat Grand Republic, New York",
          "Hoffman House Moorish Room, New York",
          "Hoffman House, The, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hoffman House"
      },
      {
        "from": [
          "En Route  S.S.H.H.Meier",
          "En Route  Sonoma",
          "En Route  Sunset Ogden & Shasta Route",
          "En Route Shanghai, China",
          "En Route  Sonoma Second Cabin",
          "En Route  Ss Nectar",
          "Enroute Syeamer Auguste Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route  S.S.H.H.Meier"
      },
      {
        "from": [
          "Washington, Dc",
          "199 Washington Street New York",
          "Washington And Southwestern Limited",
          "Washington Building, New York, Ny",
          "Washington",
          "Washington Hall,2157 Amst. Ave. Ny",
          "Washington Park On The Delaware"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Washington, Dc"
      },
      {
        "from": [
          "Postdampfer Mail Steamer Waldersee",
          "Postdamfer Graf Waldersee",
          "7 West 34 St.New York,ny",
          "Per Se  Time Warner Building",
          "Postdampfer Graf Waldersee",
          "West New Brighton, Staten Island, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Postdampfer Mail Steamer Waldersee"
      },
      {
        "from": [
          "Murray Hill Hotel,ny",
          "Murray Hill Hotel, New York City",
          "Murray Hill Hotel",
          "Murray Hill Hotel Nyc",
          "Murray Hill Hotel, The, New York, Ny",
          "Murray Hill Hotel,the,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Murray Hill Hotel,ny"
      },
      {
        "from": [
          "Portland, Me",
          "Portland Commercial Club, Portlnd, Or",
          "Portland, Or",
          "Portland, Oregon",
          "Portland,maine",
          "Portland,the, Portland, Oregon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Portland, Me"
      },
      {
        "from": [
          "Auditorium Hotel, Chicago, Il",
          "Auditorium Hotel",
          "Auditorium Hoel",
          "Auditorium Hoel, Chicao, Il",
          "Auditorium Hotel Annex, , Il",
          "Auditorium, Hamilton Club, Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Auditorium Hotel, Chicago, Il"
      },
      {
        "from": [
          "Palace Hotel",
          "Palace Hotel, San Francisco, Ca",
          "Plaza Hotel, Ny",
          "Palace Hotel, Denver, Col",
          "Palace Hotel Restaurant",
          "Palace Hotel, Cincinnati, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palace Hotel"
      },
      {
        "from": [
          "Delmonicos, New York, Ny",
          "Delmonicos Ny",
          "Delmonicos",
          "Delmonicos New Yok City",
          "Delmonicos, Fifth Avenue And Forty Forth Street, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonicos, New York, Ny"
      },
      {
        "from": [
          "Restaurant Cafe Winkler",
          "Restaurant Zum Alten Rathaus",
          "Restaurant Charles & Biggles Bar",
          "Restaurant Cuttelin",
          "Restaurants Bahnhoffbuffet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Restaurant Cafe Winkler"
      },
      {
        "from": [
          "On Board La Bretagne",
          "On Board Alton",
          "On Board La Lorraine",
          "On Board La Touraine",
          "On Board Liner La Provence"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board La Bretagne"
      },
      {
        "from": [
          "454456458 Sixth Avenue, Near 28th Street, New York, Ny ",
          "2035 Sixth Ave. Ny",
          "160 Sixth Ave,new York,ny",
          "Sixth Ave And 18th & 19th Sts., Ny",
          "Sixth Avenue Between 18th And 19th Streets, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "454456458 Sixth Avenue, Near 28th Street, New York, Ny "
      },
      {
        "from": [
          "Union Club",
          "Union Club, Cleveland, Oh",
          "Union Club Ny",
          "Union Club, New York, N.Y.",
          "Union Club, Pittsburgh, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Club"
      },
      {
        "from": [
          "Little Hungary 257 East Houston Street, New York, Ny",
          "Little Hungary Nyc",
          "Little Hungary, ",
          "Little Hungary, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Little Hungary 257 East Houston Street, New York, Ny"
      },
      {
        "from": [
          "16 & 18 Park Place, New York",
          "6 Park Place",
          "6 Park Place, Nyc",
          "Park Place Tapestry Room 299 Park Avenue"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "16 & 18 Park Place, New York"
      },
      {
        "from": [
          "The Waldorfastoria",
          "The Waldorf, New York, Ny",
          "The Waldorf",
          "The Waldorf Hotel, London England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Waldorfastoria"
      },
      {
        "from": [
          "En Route S.S. Zeeland",
          "En Route  Ss Lahn",
          "En Route Colonial Express Washington To Boston",
          "En Route, Salisbury, Nc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S. Zeeland"
      },
      {
        "from": [
          "Marlborough Hotel, ",
          "Marlboroughblenheim Hotel, Atlantic City, Nj",
          "Marlborough Hotel, Ny",
          "Marlborough House"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Marlborough Hotel, "
      },
      {
        "from": [
          "On Board C.F. Tietgen",
          "On Board,steamer Puritanfall River Line",
          "En Board Cobra",
          "On Board, 24th Street, East River"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board C.F. Tietgen"
      },
      {
        "from": [
          "St. Denis Hotel",
          "St. Denis Hotel New York",
          "St. Denis Hotel, Broadway And Eleventh Street, New York",
          "St. Denis Hotel, Flushing, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Denis Hotel"
      },
      {
        "from": [
          "25 Park Row, Ny",
          "25 Park Row, New York, Ny",
          "33 Park Row, New York City",
          "Park Row, Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "25 Park Row, Ny"
      },
      {
        "from": [
          "New York Athletic Club",
          "Navarre Hotel, New York, Ny",
          "New York Hotel,n.Y.",
          "Newyork Hotel And Restaurant Co. Ltd., Cortlandt St. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Athletic Club"
      },
      {
        "from": [
          "Madison Square, New York",
          "Madison Square Garden",
          "Madison Square West, Nyc Ny",
          "Madison Sq. Garden, New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Madison Square, New York"
      },
      {
        "from": [
          "Hotel Pfister, Milwaukee, Wi",
          "Hotel Victory, Putinbayisland, Lake Erie, Oh.",
          "Hotel Woodstock, Minneapolis, Mn",
          "Hotel Woodstock, Woodstock, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pfister, Milwaukee, Wi"
      },
      {
        "from": [
          "Hotel Pontchartrain, Detroit, Mi",
          "Hotel Windsor Montreal, Canada",
          "Hotel Windsor, Atlantic City, Nj",
          "Hotel Windsor, Fifth Avenue, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Pontchartrain, Detroit, Mi"
      },
      {
        "from": [
          "Hotel Vendome, Boston, Ma",
          "Hotel Vendome",
          "Hotel Vendome,mass",
          "Hotel Vendome,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Vendome, Boston, Ma"
      },
      {
        "from": [
          "Providence, Ri",
          "Forbidden City",
          "Providence Art Club, Rhode Island",
          "Providence Athletic Association"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Providence, Ri"
      },
      {
        "from": [
          "Savoy Hotel, New York, Ny",
          "Savoy Hotel, London, England",
          "Savoy Hotel.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Savoy Hotel, New York, Ny"
      },
      {
        "from": [
          "Clarks, New York, Ny",
          "Clarks Ny",
          "Clarks Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clarks, New York, Ny"
      },
      {
        "from": [
          "139 Eighth Street Bet. Broadway And 4th Ave., New York Ny",
          "139 Eighth Street, New York",
          "139 Eighth Street, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "139 Eighth Street Bet. Broadway And 4th Ave., New York Ny"
      },
      {
        "from": [
          "Metropolitan Opera House",
          "Metropolitan Hotel, New York, Ny",
          "Metropolitan Club, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropolitan Opera House"
      },
      {
        "from": [
          "15 And 17 West Houston Street",
          "384 And 385 West Street Newyork, Ny",
          "70 And 72 West 46th Street, New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "15 And 17 West Houston Street"
      },
      {
        "from": [
          "Birmingham",
          "Birmingham, Al",
          "Birmingham,alabama"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Birmingham"
      },
      {
        "from": [
          "Sherrys",
          "Curazao",
          "Zurich"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherrys"
      },
      {
        "from": [
          "Martinellis, New York City",
          "Martinellis",
          "Martinellis,136 Fifth Ave.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Martinellis, New York City"
      },
      {
        "from": [
          "Colonial Club",
          "Colonial Club Ny",
          "Colonial Club Of Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colonial Club"
      },
      {
        "from": [
          "156 Second Avenue Ny",
          "156 Second Ave,ny",
          "156 Second Avenue,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "156 Second Avenue Ny"
      },
      {
        "from": [
          "Hotel Ryan, St. Paul, Mn",
          "Hotel Ryan, Saint Paul, Mn",
          "Hotel Ryan, So. Paul, Minn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Ryan, St. Paul, Mn"
      },
      {
        "from": [
          "Newcastle, Nh",
          "Newcastle, Ri",
          "Newcastleontyne, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Newcastle, Nh"
      },
      {
        "from": [
          "Hotel Rennert",
          "Hotel Rennert, Baltimore, Md",
          "Hotel Rennert, Md"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Rennert"
      },
      {
        "from": [
          "Hartford Golf Club, Hartford, Ct",
          "Hartford, Ct",
          "Hartford,conn."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hartford Golf Club, Hartford, Ct"
      },
      {
        "from": [
          "The Brunswick",
          "The Brunswick, Boston, Ma",
          "The Brunswick, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Brunswick"
      },
      {
        "from": [
          "Dyker Meadow Golf Club, Ny",
          "The Grand Pacific Hotelchicago,ill.",
          "The Ground Floor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Dyker Meadow Golf Club, Ny"
      },
      {
        "from": [
          "Reisenwebers",
          "Reisenwebers Circle Hotel Eighth Avenue And 58th Street, New York",
          "Reisenwebers, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Reisenwebers"
      },
      {
        "from": [
          "En Route S.S.Barbarossa",
          "En Route S.S.Vaderland",
          "En Route Special Train"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route S.S.Barbarossa"
      },
      {
        "from": [
          "Lincoln Club  Ny",
          "Lincoln Club Brooklyn, Ny",
          "Lincoln Club, The, Brooklyn, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lincoln Club  Ny"
      },
      {
        "from": [
          "En Route To Wilmington",
          "En Route To Buffalo",
          "En Route To Paterson"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route To Wilmington"
      },
      {
        "from": [
          "En Route To Canton",
          "En Route To Australia",
          "En Route To Shanghi,china"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route To Canton"
      },
      {
        "from": [
          "Amsterdam, Holland ",
          "20 Ann Street, 149 Fulton St, 454 Sixth Avenue",
          "21 Ann Street"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Amsterdam, Holland "
      },
      {
        "from": [
          "Aboard S.S. Friesland",
          "Aboard S.S. Berlin",
          "Everetts, Brooklyn,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard S.S. Friesland"
      },
      {
        "from": [
          "Narragansett Pier R.I.",
          "Narragansett Hotel, Providence Ri",
          "Narragansett, Ri"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Narragansett Pier R.I."
      },
      {
        "from": [
          "Bellevuestratford Hotel, Philadelphia, Pa",
          "Belfast, Ireland",
          "Bellevue Straford, Philadelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevuestratford Hotel, Philadelphia, Pa"
      },
      {
        "from": [
          "Madison Ave & 42nd St,ny",
          "1822 Madison Avenue, New York, Ny",
          "Madison Ave. And 59th St."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Madison Ave & 42nd St,ny"
      },
      {
        "from": [
          "Youngs Hotel, Boston, Ma",
          "Youngs Hotel",
          "Youngs Hotel, Mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Youngs Hotel, Boston, Ma"
      },
      {
        "from": [
          "Central Park West, 72nd & 71st Sts., New York, Ny",
          "8 Central Avenue, Newark, Nj",
          "Central Opera House,67th St. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Central Park West, 72nd & 71st Sts., New York, Ny"
      },
      {
        "from": [
          "Brunswick Hotel, Boston, Ma",
          "Brunswick Me",
          "Brunswick,the,boston,mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brunswick Hotel, Boston, Ma"
      },
      {
        "from": [
          "41 West 23rd Street, New York",
          "13 West 33rd St., New York, Ny",
          "Victoria St. Westminster England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "41 West 23rd Street, New York"
      },
      {
        "from": [
          "On Board S.S. Barbarossa",
          "On Board S.S. Friedrich Der Grosse",
          "On Board Ship, Manila"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board S.S. Barbarossa"
      },
      {
        "from": [
          "On Board Ss North West",
          "On Board S.S.Amerika",
          "On Board Sonoma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board Ss North West"
      },
      {
        "from": [
          "Hotel Savoy New York",
          "Hotel Savoy, Ny",
          "Hotel Savoy, Nes York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy New York"
      },
      {
        "from": [
          "Pfister Hotel,milwaukee,wis.",
          "Victoria Hotel, Ny",
          "Victoria Hotel,new York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pfister Hotel,milwaukee,wis."
      },
      {
        "from": [
          "Parker House Boston,mass ",
          "Parker House, Mass",
          "Parker House,worcester"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Parker House Boston,mass "
      },
      {
        "from": [
          "An Bord Der Amerika",
          "On Board R.M.S.Mauretania",
          "On Board Train"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "An Bord Der Amerika"
      },
      {
        "from": [
          "New York City",
          "New York City, Ny",
          "New York City, Madison Square"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York City"
      },
      {
        "from": [
          "New York Zoological Park",
          "New York Club, New York, Ny",
          "New York Yacht Club, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Zoological Park"
      },
      {
        "from": [
          "Manhattan Beach Hotel, Coney Island, Ny",
          "Manhattan Beach, Long Island Ny",
          "Manhattan Beach, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Beach Hotel, Coney Island, Ny"
      },
      {
        "from": [
          "Schnelldampfer Auguste Victoria",
          "Schnelidamfer Auguste Victoria",
          "Schnelldamfers Auguste Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schnelldampfer Auguste Victoria"
      },
      {
        "from": [
          "Hotel Colombo",
          "Hotel Colombo, 149 Bleecker Street Ny",
          "Hotel Colombo,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Colombo"
      },
      {
        "from": [
          "Hotel Washington, Jersey City, Nj",
          "Hotel Jefferson, St. Louis, Mo",
          "Hotel Bachmair"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Washington, Jersey City, Nj"
      },
      {
        "from": [
          "Union Square, New York, Ny",
          "Union Square, Ny",
          "Union Square Hotel New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Union Square, New York, Ny"
      },
      {
        "from": [
          "Templebar No. 1 Tillman Place",
          "The Mayflower Coffee Shop And Coffee Deck",
          "The Mayflower Rib Room Connecticut Avenue At Desales Street"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Templebar No. 1 Tillman Place"
      },
      {
        "from": [
          "Hotel Bellevue",
          "Hotel Bellevue, Philadephia, Pa",
          "Hotel Philipot,santo Domingo City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Bellevue"
      },
      {
        "from": [
          "Hotel Brunswick Ny",
          "Hotel Frankfurter Hof",
          "Hotel Bronxland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Brunswick Ny"
      },
      {
        "from": [
          "Camthon Hotel, Mobile, Al",
          "Sinton Hotel",
          "Sinton Hotel, The, Cincinnati, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Camthon Hotel, Mobile, Al"
      },
      {
        "from": [
          "Frankfurter Stubb",
          "Frankfurt, Germany",
          "Frankfurt A.M.Germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frankfurter Stubb"
      },
      {
        "from": [
          "393 Fulton Street,ny",
          "190 Fulton St.Ny",
          "90 Fulton St., New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "393 Fulton Street,ny"
      },
      {
        "from": [
          "Windsor Hotel,ny",
          "Windsor Hotel, Jacksonville, Fl",
          "Windsor Hotel, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Windsor Hotel,ny"
      },
      {
        "from": [
          "Kronenhalle",
          "Harmonie Hall",
          "Harmonie Hall, New Haven, Ct"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Kronenhalle"
      },
      {
        "from": [
          "Windsor Castle, England",
          "Windsor Castle",
          "Windsor Castle  London,england"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Windsor Castle, England"
      },
      {
        "from": [
          "New Willard Hotel, Washington, Dc",
          "New Willard Hotel, The, Washington, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Willard Hotel, Washington, Dc"
      },
      {
        "from": [
          "Harrisburg, Pa",
          "Harrisburg Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Harrisburg, Pa"
      },
      {
        "from": [
          "Lucerne",
          "La Couronne"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lucerne"
      },
      {
        "from": [
          "Boston,mass",
          "Westminster Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Boston,mass"
      },
      {
        "from": [
          "Los Angeles,ca",
          "Los Angeles, Cal"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Los Angeles,ca"
      },
      {
        "from": [
          "Hotel Manhattan, Ny",
          "Hotel Manhattan Madison Ave. And 42nd St., Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Manhattan, Ny"
      },
      {
        "from": [
          "Le Bristol",
          "Le Pre Catelan"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Bristol"
      },
      {
        "from": [
          "Hotel Imperial",
          "Hotel New Yorker"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Imperial"
      },
      {
        "from": [
          "West End Hotel, New Orleans, La",
          "West End Hotel, Coney Island, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "West End Hotel, New Orleans, La"
      },
      {
        "from": [
          "116 West 14 St. Ny",
          "Bway & 32 St.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "116 West 14 St. Ny"
      },
      {
        "from": [
          "66th Street And Broadway Ny",
          "75th Street And Columbus Ave,new York,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66th Street And Broadway Ny"
      },
      {
        "from": [
          "The Hollenden Cleveland Oh",
          "The Hall, London, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Hollenden Cleveland Oh"
      },
      {
        "from": [
          "259 Bowery, New York",
          "259 & 261 Bowery, New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "259 Bowery, New York"
      },
      {
        "from": [
          "Nuremberg, Germany",
          "Nurnberger Bratwurstglockl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nuremberg, Germany"
      },
      {
        "from": [
          "Metropole Hotel Chicago Il",
          "Metropole Hotel,manila,p.I."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Metropole Hotel Chicago Il"
      },
      {
        "from": [
          "Fairmont Hotel",
          "Fairmont Hotel San Francisco, Ca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fairmont Hotel"
      },
      {
        "from": [
          "He Maxwell Nashville Tn",
          "Kings Palace,denmark"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "He Maxwell Nashville Tn"
      },
      {
        "from": [
          "Holland House Ny",
          "Holland House, New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Holland House Ny"
      },
      {
        "from": [
          "Hollenden Hotel, Cleveland, Oh",
          "Hollenden House, Cleveland, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hollenden Hotel, Cleveland, Oh"
      },
      {
        "from": [
          "Masonic Building, Providence, Ri",
          "Mechanics Building,boston,mass."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Masonic Building, Providence, Ri"
      },
      {
        "from": [
          "Odd Fellows Hall",
          "Odd Fellows Hall, Albany Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Odd Fellows Hall"
      },
      {
        "from": [
          "Brighton Beach Hotel,coney Island,ny",
          "Brighton Beach, C.I. New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brighton Beach Hotel,coney Island,ny"
      },
      {
        "from": [
          "Masonic Hall Ny",
          "Masonic Hall, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Masonic Hall Ny"
      },
      {
        "from": [
          "Frigate La Flore, New York",
          "Park Hotel, Williamsport, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Frigate La Flore, New York"
      },
      {
        "from": [
          "Queens Hotel",
          "Queens Hotel, Eastbourne, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Queens Hotel"
      },
      {
        "from": [
          "Cecil Hotel, London, England",
          "Cecil Hotel,strand,w.C."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cecil Hotel, London, England"
      },
      {
        "from": [
          "Delmonico,ny",
          "Delmonico, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Delmonico,ny"
      },
      {
        "from": [
          "Waldof Astoria",
          "Waldofastoria, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldof Astoria"
      },
      {
        "from": [
          "Transport",
          "Transportation Club Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Transport"
      },
      {
        "from": [
          "The Arlington, Washington, D.C.",
          "The Arlington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Arlington, Washington, D.C."
      },
      {
        "from": [
          "Cafe Alte Bastion",
          "Chapultepec,mexico"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Alte Bastion"
      },
      {
        "from": [
          "37 John Street, Ny",
          "23 John Street, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "37 John Street, Ny"
      },
      {
        "from": [
          "Worcester, Ma",
          "Worcester, Mass"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Worcester, Ma"
      },
      {
        "from": [
          "R.M.S. Rotterdam",
          "R.M.S. Rotterman"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "R.M.S. Rotterdam"
      },
      {
        "from": [
          "Chambers Steet And Broadway,new York,ny",
          "Chambers Street, Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chambers Steet And Broadway,new York,ny"
      },
      {
        "from": [
          "New Haven Ct",
          "New Haven, Conn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Haven Ct"
      },
      {
        "from": [
          "St. Regis Hotel",
          "St. Regis Hotel, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Regis Hotel"
      },
      {
        "from": [
          "Schnellpostdampfer Kronprinz Wilhelm",
          "Shun Lee West"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schnellpostdampfer Kronprinz Wilhelm"
      },
      {
        "from": [
          "The Bellevue, Philadelphia, Pa",
          "The Bellevue, Phila,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Bellevue, Philadelphia, Pa"
      },
      {
        "from": [
          "Steamship Kaiser Wilhelm Der Grosse",
          "Steamship Auguste Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Steamship Kaiser Wilhelm Der Grosse"
      },
      {
        "from": [
          "At Sea",
          "Az"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "At Sea"
      },
      {
        "from": [
          "Sunset Ogden & Shasta Routes",
          "Sunset Ogden And Shasta Routes  Dining Car"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sunset Ogden & Shasta Routes"
      },
      {
        "from": [
          "Ss Kaiser Wilhelm Der Grosse",
          "Ss Kaiser Wlhelm Ii"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ss Kaiser Wilhelm Der Grosse"
      },
      {
        "from": [
          "Hotel Iroquois, Buffalo, Ny",
          "Hotel Iroquois, Valley Of Buffalo Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Iroquois, Buffalo, Ny"
      },
      {
        "from": [
          "Schlosshotel Gehrhus",
          "Schlosshotel Kronberg"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Schlosshotel Gehrhus"
      },
      {
        "from": [
          "The Grand Hotel, Brighton, England",
          "The Grand Hotel, Trafalgar Square, London, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Grand Hotel, Brighton, England"
      },
      {
        "from": [
          "Residencepalais, Copenhagen, Denmark",
          "Residence Of Allison Nailor, Jr. Fifteenth Street And Rhode Island Avenue, Washington, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Residencepalais, Copenhagen, Denmark"
      },
      {
        "from": [
          "Bohemian Club, San Francisco, Ca",
          "Bohemian Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bohemian Club, San Francisco, Ca"
      },
      {
        "from": [
          "Palmer House Boston Ma",
          "Palmer House, Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palmer House Boston Ma"
      },
      {
        "from": [
          "Havana, Cuba",
          "Habana, Cuba"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Havana, Cuba"
      },
      {
        "from": [
          "En Route Washingtonatlanta",
          "En Route, Pittsburgh To Ormond"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Washingtonatlanta"
      },
      {
        "from": [
          "The Assembly, 308 Fulton Street, Brooklyn, Ny",
          "The Assembly, Brooklyn, Hew York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Assembly, 308 Fulton Street, Brooklyn, Ny"
      },
      {
        "from": [
          "En Route In Dining Car",
          "En Route Ny To Denverdining Car Aberlin"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route In Dining Car"
      },
      {
        "from": [
          "Salters Hall, London, England",
          "Salters Hall, St. Swithins Lane, E.C. London, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Salters Hall, London, England"
      },
      {
        "from": [
          "Alexandra Bay,ny",
          "Alexandra Hotel, Hyde Park Corner S.W. London, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Alexandra Bay,ny"
      },
      {
        "from": [
          "Atlantic City, Nj",
          "Atlantic Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Atlantic City, Nj"
      },
      {
        "from": [
          "Albany Club Albany,ny",
          "Albany Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Albany Club Albany,ny"
      },
      {
        "from": [
          "Wellington Room",
          "Wellington, The, Chicago, Il"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Wellington Room"
      },
      {
        "from": [
          "4th Ave. & 18th St, New York Ny",
          "5th Ave. & 15th St. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "4th Ave. & 18th St, New York Ny"
      },
      {
        "from": [
          "En Route Steamer August Victoria",
          "En Route Statendam"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Steamer August Victoria"
      },
      {
        "from": [
          "Romantik Hotel",
          "Romantik Hotel Rose"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Romantik Hotel"
      },
      {
        "from": [
          "Elks Club, New Haven, Conn.",
          "Elks Club,brooklyn Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Elks Club, New Haven, Conn."
      },
      {
        "from": [
          "Brown Palace Hotel,denver,co",
          "Brown Palace, The, Denver, Co"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Brown Palace Hotel,denver,co"
      },
      {
        "from": [
          "En Route Atlanta  Birmingham",
          "En Route To Old Point Comfort By Special Train Of Pullman Cars"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route Atlanta  Birmingham"
      },
      {
        "from": [
          "Hillman Hotel",
          "Hillman Hotel, Birmingham, Al"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hillman Hotel"
      },
      {
        "from": [
          "Munich, Germany",
          "Mainz, Germany"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Munich, Germany"
      },
      {
        "from": [
          "Tontine Hotel, New Haven, Ct",
          "Tontine Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tontine Hotel, New Haven, Ct"
      },
      {
        "from": [
          "Claudes",
          "Schultheiss"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Claudes"
      },
      {
        "from": [
          "Philadelphia, Pa",
          "Philadelphia Bourse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Philadelphia, Pa"
      },
      {
        "from": [
          "Indianapolis",
          "Indianapolis, In"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Indianapolis"
      },
      {
        "from": [
          "Breidenbacher Eck",
          "Breidenbacher Hof"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Breidenbacher Eck"
      },
      {
        "from": [
          "Powers Hotel Palmyra Ny",
          "Powers Hotel Rochester, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Powers Hotel Palmyra Ny"
      },
      {
        "from": [
          "Bierhalle Kropf",
          "Brookly Germania Club Brooklyn, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bierhalle Kropf"
      },
      {
        "from": [
          "Lexington Avenue Opera House, 58th St., Ny",
          "Lexington Opera House Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Lexington Avenue Opera House, 58th St., Ny"
      },
      {
        "from": [
          "Guildhall, London, England",
          "Guild Hall,england"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Guildhall, London, England"
      },
      {
        "from": [
          "2nd Cabin, Ss Sierra",
          "2nd Cabin, Ss Sonoma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "2nd Cabin, Ss Sierra"
      },
      {
        "from": [
          "Stratford Hotel,philadelphia,pa.",
          "Stratford, Philadelphia, Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Stratford Hotel,philadelphia,pa."
      },
      {
        "from": [
          "Anthonys Fish Grottos",
          "Anthonys Pier 4 140 Northern Avenue"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anthonys Fish Grottos"
      },
      {
        "from": [
          "66th St. & Bway Ny",
          "38th St. & 6th Ave. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "66th St. & Bway Ny"
      },
      {
        "from": [
          "117 West 34th Street,new York,ny",
          "60 West 55th Street"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "117 West 34th Street,new York,ny"
      },
      {
        "from": [
          "Old Orchard Beach, Me",
          "Old Orchard, Me"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Old Orchard Beach, Me"
      },
      {
        "from": [
          "284 Greenwich St.,ny",
          "284 Greenwich Street, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "284 Greenwich St.,ny"
      },
      {
        "from": [
          "Tampa Bay Hotel, Tampa, Fl",
          "Tampa Bay Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Tampa Bay Hotel, Tampa, Fl"
      },
      {
        "from": [
          "Aboard Ss Kobe Maru",
          "Aboard Ss Kobe"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Ss Kobe Maru"
      },
      {
        "from": [
          "Chicago Beach Hotel Chicago, Il",
          "Chicago Beach Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chicago Beach Hotel Chicago, Il"
      },
      {
        "from": [
          "Hotel St. Denis, Ny",
          "Hotel Stenton Philadelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel St. Denis, Ny"
      },
      {
        "from": [
          "Hotel Cadillac, Detroit, Mi",
          "Hotel Cadillac, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Cadillac, Detroit, Mi"
      },
      {
        "from": [
          "Canlis",
          "Shanleys"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Canlis"
      },
      {
        "from": [
          "Broadway & 10th Street, New York, Ny",
          "Broadway & 14th St. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broadway & 10th Street, New York, Ny"
      },
      {
        "from": [
          "42nd St. & Mad. Ave, Ny",
          "42nd St. And Broadway, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "42nd St. & Mad. Ave, Ny"
      },
      {
        "from": [
          "Savini",
          "Chipen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Savini"
      },
      {
        "from": [
          "White Mountains, Nh",
          "Wheaton, Md"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "White Mountains, Nh"
      },
      {
        "from": [
          "Midland Hotel, Kansas City, Mo",
          "Midland Hotel, Oasis Kansas City, Mo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Midland Hotel, Kansas City, Mo"
      },
      {
        "from": [
          "Chamberlins Washington,dc",
          "Chamberlins Wa Or Ca"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Chamberlins Washington,dc"
      },
      {
        "from": [
          "3 Pell Street, New York",
          "Fleet Street 729 Third Avenue"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "3 Pell Street, New York"
      },
      {
        "from": [
          "Putinbayisland, Lake Erie, Oh",
          "Putinbay Isand, Lake Erie, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Putinbayisland, Lake Erie, Oh"
      },
      {
        "from": [
          "Eagle Hotel Gettysburg, Pa",
          "Eagle Hotel, Concord, Nh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Eagle Hotel Gettysburg, Pa"
      },
      {
        "from": [
          "St. Paul, Minn",
          "St. Paul, Mn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "St. Paul, Minn"
      },
      {
        "from": [
          "Club House, Bedford Avenue, Brooklyn, Ny",
          "Club House, Brooklyn, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Club House, Bedford Avenue, Brooklyn, Ny"
      },
      {
        "from": [
          "S.S. Nacoochee",
          "Sanssouci"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "S.S. Nacoochee"
      },
      {
        "from": [
          "The Portland, Portland, Or",
          "The Portland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Portland, Portland, Or"
      },
      {
        "from": [
          "Bellevue",
          "Phil,pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue"
      },
      {
        "from": [
          "120 University Place, Ny, Ny",
          "University Place, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "120 University Place, Ny, Ny"
      },
      {
        "from": [
          "University Club",
          "Ambassador Snack"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "University Club"
      },
      {
        "from": [
          "Humplmayr",
          "Humplmayr Grill"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Humplmayr"
      },
      {
        "from": [
          "Stanwix Hall, Albany,n.Y.",
          "Stanwix Hotel, Albany, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Stanwix Hall, Albany,n.Y."
      },
      {
        "from": [
          "China",
          "S.S.China"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "China"
      },
      {
        "from": [
          "California",
          "Club Room"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "California"
      },
      {
        "from": [
          "New York, Ny",
          "Newburgh, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York, Ny"
      },
      {
        "from": [
          "New York Press Club Nyc",
          "New York Friars Club"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New York Press Club Nyc"
      },
      {
        "from": [
          "Baker City, Oregon",
          "Baker City Or"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Baker City, Oregon"
      },
      {
        "from": [
          "Richmond Beer Garden",
          "Richmond, Va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Richmond Beer Garden"
      },
      {
        "from": [
          "Pullman Dining Car Service En Route",
          "Belmont Mansion, Fairmont Park, "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pullman Dining Car Service En Route"
      },
      {
        "from": [
          "Grand Orient Restaurant",
          "Grand Trunk Railwaylondon"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Orient Restaurant"
      },
      {
        "from": [
          "Le Restaurant Dolympe",
          "Le Restaurant Est Ferme Le Dimanche"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Restaurant Dolympe"
      },
      {
        "from": [
          "Pullman Car",
          "Pullman Service En Route"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pullman Car"
      },
      {
        "from": [
          "Gibraltar, Spain",
          "Gibralter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Gibraltar, Spain"
      },
      {
        "from": [
          "Franconia Notch Nh",
          "Franconia Mts,new Hampshire"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Franconia Notch Nh"
      },
      {
        "from": [
          "Konigin Luise",
          "Konigen Luise At Sea"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Konigin Luise"
      },
      {
        "from": [
          "Hotel Somerset, Boston, Ma",
          "Hotel Zinzendorf, Winstonsalem, Nc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Somerset, Boston, Ma"
      },
      {
        "from": [
          "Hotel Chamberlain, Old Point Comfort, Va",
          "Hotel Champlain, Clinton County, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Chamberlain, Old Point Comfort, Va"
      },
      {
        "from": [
          "Hotel Continental Paris, France",
          "Hotel Sinton, Cincinnati, Oh"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Continental Paris, France"
      },
      {
        "from": [
          "1515 Broadway, New York, Ny",
          "130 Broadway, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "1515 Broadway, New York, Ny"
      },
      {
        "from": [
          "Broadway, Ny",
          "127 Fourth Ave. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Broadway, Ny"
      },
      {
        "from": [
          "Sherrys, New York, Ny",
          "Sherrys, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Sherrys, New York, Ny"
      },
      {
        "from": [
          "Century Club,cleveland,ohio",
          "Country Club,grosse Pointe,mi"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Century Club,cleveland,ohio"
      },
      {
        "from": [
          "Waldorfastoria, New York",
          "Waldrofastoia, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Waldorfastoria, New York"
      },
      {
        "from": [
          "Pennsylvania Railroad Dining Cars En Route New York To Chicago",
          "Pennsylvania"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Pennsylvania Railroad Dining Cars En Route New York To Chicago"
      },
      {
        "from": [
          "Hotel Savoy, 5th Ave & 59th Street, New York, Ny",
          "Hotel Savoy, 5th Avenue And 59th Street New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Savoy, 5th Ave & 59th Street, New York, Ny"
      },
      {
        "from": [
          "On Board New York",
          "On Board Mailsteamer Graf Waldersee"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "On Board New York"
      },
      {
        "from": [
          "En Bord Paquebot La Touraine",
          "On Board Flagship Connecticut"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Bord Paquebot La Touraine"
      },
      {
        "from": [
          "Hotel Cochran, Washington Dc",
          "Hotel Sacher"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Cochran, Washington Dc"
      },
      {
        "from": [
          "Hotel Cecil, Dawson City, Canada",
          "Hotel Cecil, London"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Cecil, Dawson City, Canada"
      },
      {
        "from": [
          "Grand Union Hotel, Saratoga",
          "Grand Union, Saratoga, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Grand Union Hotel, Saratoga"
      },
      {
        "from": [
          "Hotel Astor, New York",
          "Hotel Astor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Astor, New York"
      },
      {
        "from": [
          "Fla",
          "Bali"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fla"
      },
      {
        "from": [
          "Park Row Building New York,ny",
          "Park Row Bldg. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Park Row Building New York,ny"
      },
      {
        "from": [
          "New Brighton, S.I.",
          "New Brighton,s.I. Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Brighton, S.I."
      },
      {
        "from": [
          "Manhattan Hotel, New York, Ny",
          "Manhattan Hotel,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Manhattan Hotel, New York, Ny"
      },
      {
        "from": [
          "Menage A Trois",
          "Menage A Trois 511 Lexington Avenue On 48th Street"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Menage A Trois"
      },
      {
        "from": [
          "Hotel Chelsea Atlantic City, Nj",
          "Hotel Schloss Fuschl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Chelsea Atlantic City, Nj"
      },
      {
        "from": [
          "The Auditorium Annex",
          "The Auditorium, Minneapolis, Mn"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Auditorium Annex"
      },
      {
        "from": [
          "Le Bistro Dhubert",
          "Le Bistrot De Maxims 680 Madison Avenue"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Le Bistro Dhubert"
      },
      {
        "from": [
          "Fifth Ave And 26th Stret",
          "Fifth Avenue Dining Rooms, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Ave And 26th Stret"
      },
      {
        "from": [
          "Fifth Avenue & Fiftyninth Street, New York, Ny",
          "111 Fifth Ave, New York City"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Fifth Avenue & Fiftyninth Street, New York, Ny"
      },
      {
        "from": [
          "374 Fifth Avenue, New York, Ny",
          "374 Fifth Avenue, Ny, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "374 Fifth Avenue, New York, Ny"
      },
      {
        "from": [
          "13 Montgomery Street Jersey City, Nj",
          "Montgomery,al"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "13 Montgomery Street Jersey City, Nj"
      },
      {
        "from": [
          "Hotel Palais Dorsay, Paris, France",
          "Hotel Place Viger,montreal,canada"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Palais Dorsay, Paris, France"
      },
      {
        "from": [
          "Hotel Walton,philadelphia,pa",
          "Hotel Baltimore,md"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Walton,philadelphia,pa"
      },
      {
        "from": [
          "Hotel Flanders",
          "Hotel Belmont New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Flanders"
      },
      {
        "from": [
          "Hotel Willard, Washington, Dc",
          "Hotel Fleuret,5 Ave18 St.Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Willard, Washington, Dc"
      },
      {
        "from": [
          "Nyc",
          "Macao"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Nyc"
      },
      {
        "from": [
          "Aboard U.S.M.S. St. Louis",
          "Everett House, Union Square And 17th Street, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard U.S.M.S. St. Louis"
      },
      {
        "from": [
          "Hotel Worthy",
          "Hotel Bartholdi, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Worthy"
      },
      {
        "from": [
          "Palais Royal  Christiania,norway",
          "Palais Royal, Sophia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Palais Royal  Christiania,norway"
      },
      {
        "from": [
          "Convention Hall, Buffalo, Ny",
          "Convention Hall, Memphis"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Convention Hall, Buffalo, Ny"
      },
      {
        "from": [
          "Aboard Kronprinzessin Cecilie",
          "Aboard George Washington"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Kronprinzessin Cecilie"
      },
      {
        "from": [
          "Warren",
          "Burma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Warren"
      },
      {
        "from": [
          "Bellevue Hotel, Philadelphia, Pa",
          "Bellevue Hotel, Boston, Ma"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bellevue Hotel, Philadelphia, Pa"
      },
      {
        "from": [
          "Commonwealth Avenue, Boston, Ma",
          "Commonwealth Club Richmond, Va"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commonwealth Avenue, Boston, Ma"
      },
      {
        "from": [
          "Clinton County, Ny",
          "Clinton Co., Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clinton County, Ny"
      },
      {
        "from": [
          "Private Club T Jagertje",
          "Private Clubhouse"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Private Club T Jagertje"
      },
      {
        "from": [
          "Copenhagen, Denmark",
          "Copenhagen"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Copenhagen, Denmark"
      },
      {
        "from": [
          "Hotel Lafayette",
          "Hotel Lafayette, Philadelphia Pa"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Lafayette"
      },
      {
        "from": [
          "Huguenin",
          "Kokomo, In."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Huguenin"
      },
      {
        "from": [
          "Algonquin Club",
          "Algonquin Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Algonquin Club"
      },
      {
        "from": [
          "Coney Island, New York",
          "Coney Island,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Coney Island, New York"
      },
      {
        "from": [
          "Forest City House",
          "Forest City House, Cleveland, Ohio"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Forest City House"
      },
      {
        "from": [
          "Presidential Special In Route To Thomasville,ga",
          "Presidential Train Ny To Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Presidential Special In Route To Thomasville,ga"
      },
      {
        "from": [
          "Clumbia Heights Orange Street",
          "Columbia Heights"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Clumbia Heights Orange Street"
      },
      {
        "from": [
          "Paquebot La Champagne",
          "Paquebot La Savoie"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Paquebot La Champagne"
      },
      {
        "from": [
          "Christiana, Norway ",
          "Christiania, Norway Oslo"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Christiana, Norway "
      },
      {
        "from": [
          "57 Broad St., New York, Ny",
          "9 W 53rd St, New York, Ny 10019"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 Broad St., New York, Ny"
      },
      {
        "from": [
          "Terrace Garden",
          "Terrace Garden,58 St.Nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Terrace Garden"
      },
      {
        "from": [
          "Bristol Hotel",
          "Bristol Hotel, Cinnamon Gardens, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Bristol Hotel"
      },
      {
        "from": [
          "149 Bleecker St.Ny",
          "Folkestone,england"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "149 Bleecker St.Ny"
      },
      {
        "from": [
          "57 Broad Street, Ny",
          "15 Broad Street, 1 Broadway, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "57 Broad Street, Ny"
      },
      {
        "from": [
          "16 Lafayette Place",
          "16 Lafayette Place Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "16 Lafayette Place"
      },
      {
        "from": [
          "Cafe Martin",
          "Cafe Martin New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Cafe Martin"
      },
      {
        "from": [
          "Glen Island, Ny",
          "Hollands, Long Island,ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Glen Island, Ny"
      },
      {
        "from": [
          "Colombo, ",
          "S.S. Columbia"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Colombo, "
      },
      {
        "from": [
          "Aboard Barbarossa",
          "Aboard Prinz Friedrich Wilhelm"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard Barbarossa"
      },
      {
        "from": [
          "New Orleans, La",
          "New Prleans,la"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "New Orleans, La"
      },
      {
        "from": [
          "Capital Hotel",
          "Capital Hotel, Frankfort, Ky"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Capital Hotel"
      },
      {
        "from": [
          "The Rendezvous Of The Plaza Hilton Hotels",
          "The Rendezvous The Plaza"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "The Rendezvous Of The Plaza Hilton Hotels"
      },
      {
        "from": [
          "Shoreham, The, Washinginton, D.C.",
          "Shoreham, The, Washingto, Dc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Shoreham, The, Washinginton, D.C."
      },
      {
        "from": [
          "Aboard R.M.S. Etruria",
          "Aboard Train En Route, Minneapolis To San Francisco"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Aboard R.M.S. Etruria"
      },
      {
        "from": [
          "Vendome Hotel,ny",
          "Vendome Hotel,nyc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Vendome Hotel,ny"
      },
      {
        "from": [
          "Williss Rooms Almacks, London England ",
          "Williss Rooms, London, England"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Williss Rooms Almacks, London England "
      },
      {
        "from": [
          "Hoffman Cafe, New York",
          "Hoffman Cafes, New York, Ny"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hoffman Cafe, New York"
      },
      {
        "from": [
          "Hotel Del Campidoglio, New York, Ny",
          "Hotel Del Coronado"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Del Campidoglio, New York, Ny"
      },
      {
        "from": [
          "Garcias Place, The Grand Orient, Ybor City, Fl",
          "Garcias Place,ysor City,florida"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Garcias Place, The Grand Orient, Ybor City, Fl"
      },
      {
        "from": [
          "Hotel Dangleterre",
          "Hotel Ten Eyck, Albany, New York"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Hotel Dangleterre"
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "place",
    "expression": "value",
    "edits": [
      {
        "from": [
          "En Route  S.S.H.H.Meier",
          "En Route H.H.Meier"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "En Route  S.S.H.H.Meier"
      }
    ],
    "description": "Mass edit cells in column place"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.toTitlecase()"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Anniversary",
          "Anniversary ",
          "Anniversary."
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary"
      },
      {
        "from": [
          "Compl",
          "Compl.",
          "Compl "
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compl"
      },
      {
        "from": [
          "Patriotic Holiday",
          "Patriotic Holiday.",
          "Patriotic Holiday. Holiday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Patriotic Holiday"
      },
      {
        "from": [
          "Secular Holiday",
          "Secular Holiday. Holiday",
          "Secular Holiday Holiday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Secular Holiday"
      },
      {
        "from": [
          "Other Soc",
          "Other Soc.",
          "Other, Soc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Soc"
      },
      {
        "from": [
          "Secular Holiday.Holiday",
          "Secular Holidayholiday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Secular Holiday.Holiday"
      },
      {
        "from": [
          "Other Reunion",
          "Other  Reunion"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Reunion"
      },
      {
        "from": [
          "Other Daily Dated Menu",
          "Other Dated Daily Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Daily Dated Menu"
      },
      {
        "from": [
          "Other Annual Event",
          "Other, Annual Event"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Annual Event"
      },
      {
        "from": [
          "Other Anniversary",
          "Other  Anniversary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Anniversary"
      },
      {
        "from": [
          "Other",
          "Other,"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other"
      },
      {
        "from": [
          "Relig. Holiday",
          "Relig Holiday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Relig. Holiday"
      }
    ],
    "description": "Mass edit cells in column occasion"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Compl For Maharaja Scindiya",
          "Complfor Maharaja Scindiya"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compl For Maharaja Scindiya"
      },
      {
        "from": [
          "Other Annual Event",
          "Other,annual Event"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Annual Event"
      },
      {
        "from": [
          "Daily Menu",
          "Dailymenu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Daily Menu"
      },
      {
        "from": [
          "Other Commemoration",
          "Other,commemoration"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Commemoration"
      },
      {
        "from": [
          "Other Annual Banquet",
          "Other,annual Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Annual Banquet"
      },
      {
        "from": [
          "Other Annual Meeting",
          "Other,annual Meeting"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Annual Meeting"
      },
      {
        "from": [
          "Relig. Holiday",
          "Relig.Holiday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Relig. Holiday"
      },
      {
        "from": [
          "Other Annual Dinner",
          "Other,,annual Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Annual Dinner"
      },
      {
        "from": [
          "Trip Of Pres. Mckinley, His Cabinet & Guests",
          "Trip Of Pres. Mckinley,his Cabinet & Guests"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Trip Of Pres. Mckinley, His Cabinet & Guests"
      }
    ],
    "description": "Mass edit cells in column occasion"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Complimentary/testimonial",
          "Complimentary",
          "Complimentary Dinner",
          "Complimentary Banquet For Montgomery Guards",
          "Complimentary To Commodore C. We. Bliss",
          "Complimentary/testimonial,anniversary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Complimentary/testimonial"
      },
      {
        "from": [
          "Other Commemorative",
          "Other Commemoratie",
          "Other Commemorating Resumption Of Business After Earthquake And Fire",
          "Other Commemortive"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Commemorative"
      },
      {
        "from": [
          "Other Soc",
          "Other S0c",
          "Othr Soc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Soc"
      },
      {
        "from": [
          "Other, Commercial Convention Dinner",
          "Other,commercial Anniversary",
          "Other,commercial Opening"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other, Commercial Convention Dinner"
      },
      {
        "from": [
          "Patriotic Holiday Lincolns Birthday",
          "Patriotic Holiday. Local",
          "Patriotic Holiday.Holiday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Patriotic Holiday Lincolns Birthday"
      },
      {
        "from": [
          "Other Daily Dated Menu",
          "Other Daily Dated Menu For Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Daily Dated Menu"
      },
      {
        "from": [
          "Anniversaryersary",
          "Anniversaryersary Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversaryersary"
      },
      {
        "from": [
          "Other Private Party",
          "Other Private Party Ferdinard De Lesseps And Party"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Private Party"
      },
      {
        "from": [
          "Other Anniversary",
          "Other,anniversary Reunion"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Anniversary"
      },
      {
        "from": [
          "Other,university Anniversary",
          "Other,university Paper Annual Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other,university Anniversary"
      },
      {
        "from": [
          "Anniversary",
          "Aniversary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary"
      },
      {
        "from": [
          "Other Commemoation",
          "Other Commemoation Of Death Of U.S. Grant"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Commemoation"
      },
      {
        "from": [
          "Anniversary,fifteenth Annual Convention",
          "Anniversaryfifth Of Founding"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary,fifteenth Annual Convention"
      },
      {
        "from": [
          "Other Opening Event",
          "Other Opening Of Hotel"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Opening Event"
      },
      {
        "from": [
          "Compl",
          "C0mpl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compl"
      },
      {
        "from": [
          "Other Daily Menu For Hotel",
          "Other Daily Menu For Restaurant Chain"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Daily Menu For Hotel"
      },
      {
        "from": [
          "Other Daily Hotel Menu",
          "Otheer Daily Hotel Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Daily Hotel Menu"
      },
      {
        "from": [
          "Anniversary, Comp",
          "Anniversary/compl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary, Comp"
      },
      {
        "from": [
          "Other Appears To Be Event Planned To Encourage Industry And Commerce To Relocate To Cincinnati",
          "Other Appears To Be Private Party"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Appears To Be Event Planned To Encourage Industry And Commerce To Relocate To Cincinnati"
      },
      {
        "from": [
          "Other Regular Meeting",
          "Other Regular Meeting Of A Card Playing Group"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Regular Meeting"
      },
      {
        "from": [
          "Testimonial Dinner",
          "Testimonial Dinner To Hon. Buckley"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Testimonial Dinner"
      },
      {
        "from": [
          "Anniv",
          "Aniv"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniv"
      },
      {
        "from": [
          "Other Special International Event",
          "Other Special Entertainment Evening"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Special International Event"
      },
      {
        "from": [
          "Other Commemoration",
          "Other Commemoration Of A Bull Fight By Famous Torreodor"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Commemoration"
      }
    ],
    "description": "Mass edit cells in column occasion"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Annual",
          "Amnnual"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Annual"
      },
      {
        "from": [
          "Anniversary",
          "113 Anniversary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary"
      }
    ],
    "description": "Mass edit cells in column occasion"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Patriotic Holiday",
          "Patriotic Holiday Lincolns Birthday",
          "Patriotic Holiday,national Event",
          "Patriotic Holiday164th Anniversary Old Style Of The Birth Of Colonel George Washington",
          "Patriotic Holidayiotic Holiday"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Patriotic Holiday"
      },
      {
        "from": [
          "Secular Holiday",
          "Secular Holiday.Holiday",
          "Secular Holidayl",
          "Secular Holidayy Of War Elihu Root Attends Football Game  U.Of Penn.Vs West Point"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Secular Holiday"
      },
      {
        "from": [
          "Other Possibly A College Reunion",
          "Other Possibly A Private Dinner",
          "Other Possibly A Special Or Annual Event",
          "Other Possibly A Weddingprinted In Silver With 2 Sets Of Initials At Top Of Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Possibly A College Reunion"
      },
      {
        "from": [
          "Other Daily Menu",
          "Other Daily Menu At Sea",
          "Other Daily Menu For Hotel",
          "Other Daily Menu On Board Ship"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Daily Menu"
      },
      {
        "from": [
          "Anniversaryersary",
          "Anniversary, Comp",
          "Anniversary141st",
          "Anniversaryesary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversaryersary"
      },
      {
        "from": [
          "Other Convention",
          "Other Company Dinner",
          "Other Complimentary",
          "Other,conference"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Convention"
      },
      {
        "from": [
          "Other Commemorative",
          "Other Commemoration",
          "Other Commemoation",
          "Other Commemoative"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Commemorative"
      },
      {
        "from": [
          "Other Private Dinner Party",
          "Other Private Party",
          "Other Farewell",
          "Other Private"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Private Dinner Party"
      },
      {
        "from": [
          "National Event",
          "9nth Annual Banquet",
          "National Eventdiamond Jubilee Of Queen Victoria"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "National Event"
      },
      {
        "from": [
          "Other Appears To Be Event Planned To Encourage Industry And Commerce To Relocate To Cincinnati",
          "Other Festival",
          "Other Festive Occasion Per Letter"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Appears To Be Event Planned To Encourage Industry And Commerce To Relocate To Cincinnati"
      },
      {
        "from": [
          "Anniversary 13th Burns Anniversary",
          "Anniversary13th Annual",
          "Anniversaryotherrelief Of Emigrants From Ireland"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary 13th Burns Anniversary"
      },
      {
        "from": [
          "Other Special International Event",
          "Other Specialized Club Event"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Special International Event"
      },
      {
        "from": [
          "Other Meeting",
          "Other Reuntion"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Meeting"
      },
      {
        "from": [
          "Other,banquet",
          "Other Banquet & Ball"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other,banquet"
      },
      {
        "from": [
          "Other Music Festival",
          "Other Musical Event"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Music Festival"
      },
      {
        "from": [
          "159nth Anniversary Dinnerwashingtons Birthday",
          "27nth Anniversary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "159nth Anniversary Dinnerwashingtons Birthday"
      },
      {
        "from": [
          "Ethnic Holiday",
          "Ethnic Holiday,saint Nicholas Day"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Ethnic Holiday"
      },
      {
        "from": [
          "Other Business Meeting",
          "Other,personal"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Business Meeting"
      },
      {
        "from": [
          "Other Celebration Of Event",
          "Other, Club Anniversary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Celebration Of Event"
      },
      {
        "from": [
          "Other Dinner Meeting",
          "Otherdinner Dance"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Dinner Meeting"
      },
      {
        "from": [
          "Anniversary,fifteenth Annual Convention",
          "Anniversary,first Annual"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary,fifteenth Annual Convention"
      },
      {
        "from": [
          "Other Annual Meeting",
          "Other Annual Entertainment Event"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Annual Meeting"
      },
      {
        "from": [
          "Other Annual Event",
          "Other Annual Banquet"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Annual Event"
      },
      {
        "from": [
          "Other Home Dinner",
          "Other Hunt"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Home Dinner"
      },
      {
        "from": [
          "Other,social Club Anniversary",
          "Other,social Org. Dinner"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other,social Club Anniversary"
      },
      {
        "from": [
          "Testimonial Dinner",
          "Testimonial"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Testimonial Dinner"
      },
      {
        "from": [
          "Other Soc",
          "Othe Soc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Soc"
      },
      {
        "from": [
          "Other Political",
          "Other Building Opening"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Political"
      },
      {
        "from": [
          "Compl",
          "Cimpl"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Compl"
      },
      {
        "from": [
          "Other Anniversary",
          "Other,university Anniversary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Anniversary"
      }
    ],
    "description": "Mass edit cells in column occasion"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Other Soc",
          "0ther Soc",
          "Oher Soc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Soc"
      },
      {
        "from": [
          "Other Anniv",
          "0ther Anniv"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Anniv"
      },
      {
        "from": [
          "Other Soc",
          "Oher Soc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Soc"
      },
      {
        "from": [
          "Other Commemorative",
          "0ther Commemorative"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Commemorative"
      },
      {
        "from": [
          "Other Anniversary",
          "Other Anniverary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Anniversary"
      },
      {
        "from": [
          "Other Soc",
          "0ther Soc"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Soc"
      },
      {
        "from": [
          "Commemoative",
          "Commemorative"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Commemoative"
      }
    ],
    "description": "Mass edit cells in column occasion"
  },
  {
    "op": "core/mass-edit",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value",
    "edits": [
      {
        "from": [
          "Anniversary",
          "Anniversaryersary"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Anniversary"
      },
      {
        "from": [
          "Other Daily Menu",
          "Other Daily Dated Menu"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Daily Menu"
      },
      {
        "from": [
          "Other Private Dinner Party",
          "Private Dinner Party"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Private Dinner Party"
      },
      {
        "from": [
          "Other Reception",
          "Other Royal Reception"
        ],
        "fromBlank": false,
        "fromError": false,
        "to": "Other Reception"
      }
    ],
    "description": "Mass edit cells in column occasion"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "occasion",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column occasion using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "page_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column page_count using expression value.toNumber()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "dish_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column dish_count using expression value.toNumber()"
  }
]